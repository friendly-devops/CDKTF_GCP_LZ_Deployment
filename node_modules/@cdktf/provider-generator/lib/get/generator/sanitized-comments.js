"use strict";
/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.sanitizedComment = void 0;
function sanitizedComment(code) {
    let wasSanitized = false;
    code.line(`/**`);
    return {
        line: (comment) => {
            // objects can not be valid comments
            if (typeof comment === "object" && !Array.isArray(comment)) {
                return;
            }
            const stringified = Array.isArray(comment)
                ? comment.join("\n")
                : comment.toLocaleString();
            const sanitized = typeof stringified === "string"
                ? stringified.replace(/\*\//g, "* /")
                : stringified;
            if (sanitized === "") {
                code.line(`*`);
                return;
            }
            if (sanitized !== stringified) {
                wasSanitized = true;
            }
            sanitized.split("\n").forEach((line) => {
                code.line(`* ${line}`);
            });
        },
        end: () => {
            if (wasSanitized) {
                code.line(` *`);
                code.line("* Note: The above comment contained a comment block ending sequence (* followed by /). We have introduced a space between to prevent syntax errors. Please ignore the space.");
            }
            code.line(`*/`);
        },
    };
}
exports.sanitizedComment = sanitizedComment;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuaXRpemVkLWNvbW1lbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2FuaXRpemVkLWNvbW1lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O0dBR0c7OztBQUlILFNBQWdCLGdCQUFnQixDQUFDLElBQWU7SUFDOUMsSUFBSSxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakIsT0FBTztRQUNMLElBQUksRUFBRSxDQUFDLE9BQTRDLEVBQUUsRUFBRTtZQUNyRCxvQ0FBb0M7WUFDcEMsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUMxRCxPQUFPO2FBQ1I7WUFFRCxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztnQkFDeEMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2dCQUNwQixDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBRTdCLE1BQU0sU0FBUyxHQUNiLE9BQU8sV0FBVyxLQUFLLFFBQVE7Z0JBQzdCLENBQUMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUM7Z0JBQ3JDLENBQUMsQ0FBQyxXQUFXLENBQUM7WUFFbEIsSUFBSSxTQUFTLEtBQUssRUFBRSxFQUFFO2dCQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNmLE9BQU87YUFDUjtZQUVELElBQUksU0FBUyxLQUFLLFdBQVcsRUFBRTtnQkFDN0IsWUFBWSxHQUFHLElBQUksQ0FBQzthQUNyQjtZQUNELFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELEdBQUcsRUFBRSxHQUFHLEVBQUU7WUFDUixJQUFJLFlBQVksRUFBRTtnQkFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDaEIsSUFBSSxDQUFDLElBQUksQ0FDUCw4S0FBOEssQ0FDL0ssQ0FBQzthQUNIO1lBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixDQUFDO0tBQ0YsQ0FBQztBQUNKLENBQUM7QUF6Q0QsNENBeUNDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEhhc2hpQ29ycCwgSW5jLlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1QTC0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDb2RlTWFrZXIgfSBmcm9tIFwiY29kZW1ha2VyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZWRDb21tZW50KGNvZGU6IENvZGVNYWtlcikge1xuICBsZXQgd2FzU2FuaXRpemVkID0gZmFsc2U7XG4gIGNvZGUubGluZShgLyoqYCk7XG4gIHJldHVybiB7XG4gICAgbGluZTogKGNvbW1lbnQ6IHN0cmluZyB8IG51bWJlciB8IHN0cmluZ1tdIHwgb2JqZWN0KSA9PiB7XG4gICAgICAvLyBvYmplY3RzIGNhbiBub3QgYmUgdmFsaWQgY29tbWVudHNcbiAgICAgIGlmICh0eXBlb2YgY29tbWVudCA9PT0gXCJvYmplY3RcIiAmJiAhQXJyYXkuaXNBcnJheShjb21tZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHN0cmluZ2lmaWVkID0gQXJyYXkuaXNBcnJheShjb21tZW50KVxuICAgICAgICA/IGNvbW1lbnQuam9pbihcIlxcblwiKVxuICAgICAgICA6IGNvbW1lbnQudG9Mb2NhbGVTdHJpbmcoKTtcblxuICAgICAgY29uc3Qgc2FuaXRpemVkID1cbiAgICAgICAgdHlwZW9mIHN0cmluZ2lmaWVkID09PSBcInN0cmluZ1wiXG4gICAgICAgICAgPyBzdHJpbmdpZmllZC5yZXBsYWNlKC9cXCpcXC8vZywgXCIqIC9cIilcbiAgICAgICAgICA6IHN0cmluZ2lmaWVkO1xuXG4gICAgICBpZiAoc2FuaXRpemVkID09PSBcIlwiKSB7XG4gICAgICAgIGNvZGUubGluZShgKmApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChzYW5pdGl6ZWQgIT09IHN0cmluZ2lmaWVkKSB7XG4gICAgICAgIHdhc1Nhbml0aXplZCA9IHRydWU7XG4gICAgICB9XG4gICAgICBzYW5pdGl6ZWQuc3BsaXQoXCJcXG5cIikuZm9yRWFjaCgobGluZSkgPT4ge1xuICAgICAgICBjb2RlLmxpbmUoYCogJHtsaW5lfWApO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBlbmQ6ICgpID0+IHtcbiAgICAgIGlmICh3YXNTYW5pdGl6ZWQpIHtcbiAgICAgICAgY29kZS5saW5lKGAgKmApO1xuICAgICAgICBjb2RlLmxpbmUoXG4gICAgICAgICAgXCIqIE5vdGU6IFRoZSBhYm92ZSBjb21tZW50IGNvbnRhaW5lZCBhIGNvbW1lbnQgYmxvY2sgZW5kaW5nIHNlcXVlbmNlICgqIGZvbGxvd2VkIGJ5IC8pLiBXZSBoYXZlIGludHJvZHVjZWQgYSBzcGFjZSBiZXR3ZWVuIHRvIHByZXZlbnQgc3ludGF4IGVycm9ycy4gUGxlYXNlIGlnbm9yZSB0aGUgc3BhY2UuXCJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGNvZGUubGluZShgKi9gKTtcbiAgICB9LFxuICB9O1xufVxuIl19