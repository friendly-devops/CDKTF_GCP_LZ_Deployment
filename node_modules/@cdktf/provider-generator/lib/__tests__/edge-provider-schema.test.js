"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright (c) HashiCorp, Inc
// SPDX-License-Identifier: MPL-2.0
const fs = __importStar(require("fs-extra"));
const path = __importStar(require("path"));
const __1 = require("..");
const commons_1 = require("@cdktf/commons");
const edge_provider_schema_1 = require("./edge-provider-schema");
describe("Edge Provider Schema", () => {
    it("compiles to Typescript", async () => {
        return (0, commons_1.mkdtemp)(async (dir) => {
            await (0, __1.generateProviderBindingsFromSchema)(dir, edge_provider_schema_1.edgeSchema);
            fs.readdirSync(path.join(dir, "providers", "edge")).forEach((file) => {
                if (!file.endsWith(".ts")) {
                    return;
                }
                expect(fs.readFileSync(path.join(dir, "providers", "edge", file), "utf8")).toMatchSnapshot(file);
            });
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRnZS1wcm92aWRlci1zY2hlbWEudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImVkZ2UtcHJvdmlkZXItc2NoZW1hLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtCQUErQjtBQUMvQixtQ0FBbUM7QUFDbkMsNkNBQStCO0FBQy9CLDJDQUE2QjtBQUM3QiwwQkFBd0Q7QUFDeEQsNENBQXlDO0FBQ3pDLGlFQUFvRDtBQUVwRCxRQUFRLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSxLQUFLLElBQUksRUFBRTtRQUN0QyxPQUFPLElBQUEsaUJBQU8sRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFDM0IsTUFBTSxJQUFBLHNDQUFrQyxFQUFDLEdBQUcsRUFBRSxpQ0FBVSxDQUFDLENBQUM7WUFFMUQsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDbkUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQ3pCLE9BQU87aUJBQ1I7Z0JBQ0QsTUFBTSxDQUNKLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FDbkUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIEhhc2hpQ29ycCwgSW5jXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTVBMLTIuMFxuaW1wb3J0ICogYXMgZnMgZnJvbSBcImZzLWV4dHJhXCI7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZVByb3ZpZGVyQmluZGluZ3NGcm9tU2NoZW1hIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBta2R0ZW1wIH0gZnJvbSBcIkBjZGt0Zi9jb21tb25zXCI7XG5pbXBvcnQgeyBlZGdlU2NoZW1hIH0gZnJvbSBcIi4vZWRnZS1wcm92aWRlci1zY2hlbWFcIjtcblxuZGVzY3JpYmUoXCJFZGdlIFByb3ZpZGVyIFNjaGVtYVwiLCAoKSA9PiB7XG4gIGl0KFwiY29tcGlsZXMgdG8gVHlwZXNjcmlwdFwiLCBhc3luYyAoKSA9PiB7XG4gICAgcmV0dXJuIG1rZHRlbXAoYXN5bmMgKGRpcikgPT4ge1xuICAgICAgYXdhaXQgZ2VuZXJhdGVQcm92aWRlckJpbmRpbmdzRnJvbVNjaGVtYShkaXIsIGVkZ2VTY2hlbWEpO1xuXG4gICAgICBmcy5yZWFkZGlyU3luYyhwYXRoLmpvaW4oZGlyLCBcInByb3ZpZGVyc1wiLCBcImVkZ2VcIikpLmZvckVhY2goKGZpbGUpID0+IHtcbiAgICAgICAgaWYgKCFmaWxlLmVuZHNXaXRoKFwiLnRzXCIpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGV4cGVjdChcbiAgICAgICAgICBmcy5yZWFkRmlsZVN5bmMocGF0aC5qb2luKGRpciwgXCJwcm92aWRlcnNcIiwgXCJlZGdlXCIsIGZpbGUpLCBcInV0ZjhcIilcbiAgICAgICAgKS50b01hdGNoU25hcHNob3QoZmlsZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==