"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright (c) HashiCorp, Inc
// SPDX-License-Identifier: MPL-2.0
const path = __importStar(require("path"));
const fs = __importStar(require("fs-extra"));
const _1 = require(".");
const __1 = require("../..");
// This script builds the schema for the edge provider into the given directory for all languages.
const args = process.argv.slice(2);
const targetPath = args[0];
if (!targetPath) {
    console.error("No target path specified");
    process.exit(1);
}
// Clear / Create path
fs.mkdirpSync(targetPath);
fs.emptyDirSync(targetPath);
const deps = ["@types/node", "constructs", "cdktf"];
(async () => {
    await (0, __1.generateProviderBindingsFromSchema)(targetPath, _1.edgeSchema, {
        entrypoint: path.join("providers", "edge", "index.ts"),
        deps: deps.map((dep) => path.dirname(require.resolve(`${dep}/package.json`))),
        moduleKey: "edge",
        python: {
            outdir: path.resolve(targetPath, "python"),
            moduleName: "edge",
        },
        java: {
            outdir: path.resolve(targetPath, "java"),
            package: `imports.edgeprovider`,
        },
        csharp: {
            outdir: path.resolve(targetPath, "csharp"),
            namespace: "Providers.Edge",
        },
        golang: {
            outdir: path.resolve(targetPath, "go"),
            moduleName: "cdk.tf/go/stack/generated/hashicorp",
            packageName: "edge",
        },
    });
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2xpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrQkFBK0I7QUFDL0IsbUNBQW1DO0FBQ25DLDJDQUE2QjtBQUM3Qiw2Q0FBK0I7QUFDL0Isd0JBQStCO0FBQy9CLDZCQUEyRDtBQUUzRCxrR0FBa0c7QUFDbEcsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkMsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRTNCLElBQUksQ0FBQyxVQUFVLEVBQUU7SUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7SUFDMUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztDQUNqQjtBQUVELHNCQUFzQjtBQUN0QixFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzFCLEVBQUUsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFNUIsTUFBTSxJQUFJLEdBQUcsQ0FBQyxhQUFhLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBRXBELENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDVixNQUFNLElBQUEsc0NBQWtDLEVBQUMsVUFBVSxFQUFFLGFBQVUsRUFBRTtRQUMvRCxVQUFVLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQztRQUN0RCxJQUFJLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FDckQ7UUFDRCxTQUFTLEVBQUUsTUFBTTtRQUNqQixNQUFNLEVBQUU7WUFDTixNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDO1lBQzFDLFVBQVUsRUFBRSxNQUFNO1NBQ25CO1FBQ0QsSUFBSSxFQUFFO1lBQ0osTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQztZQUN4QyxPQUFPLEVBQUUsc0JBQXNCO1NBQ2hDO1FBQ0QsTUFBTSxFQUFFO1lBQ04sTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQztZQUMxQyxTQUFTLEVBQUUsZ0JBQWdCO1NBQzVCO1FBQ0QsTUFBTSxFQUFFO1lBQ04sTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQztZQUN0QyxVQUFVLEVBQUUscUNBQXFDO1lBQ2pELFdBQVcsRUFBRSxNQUFNO1NBQ3BCO0tBQ0YsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgSGFzaGlDb3JwLCBJbmNcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNUEwtMi4wXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnMtZXh0cmFcIjtcbmltcG9ydCB7IGVkZ2VTY2hlbWEgfSBmcm9tIFwiLlwiO1xuaW1wb3J0IHsgZ2VuZXJhdGVQcm92aWRlckJpbmRpbmdzRnJvbVNjaGVtYSB9IGZyb20gXCIuLi8uLlwiO1xuXG4vLyBUaGlzIHNjcmlwdCBidWlsZHMgdGhlIHNjaGVtYSBmb3IgdGhlIGVkZ2UgcHJvdmlkZXIgaW50byB0aGUgZ2l2ZW4gZGlyZWN0b3J5IGZvciBhbGwgbGFuZ3VhZ2VzLlxuY29uc3QgYXJncyA9IHByb2Nlc3MuYXJndi5zbGljZSgyKTtcbmNvbnN0IHRhcmdldFBhdGggPSBhcmdzWzBdO1xuXG5pZiAoIXRhcmdldFBhdGgpIHtcbiAgY29uc29sZS5lcnJvcihcIk5vIHRhcmdldCBwYXRoIHNwZWNpZmllZFwiKTtcbiAgcHJvY2Vzcy5leGl0KDEpO1xufVxuXG4vLyBDbGVhciAvIENyZWF0ZSBwYXRoXG5mcy5ta2RpcnBTeW5jKHRhcmdldFBhdGgpO1xuZnMuZW1wdHlEaXJTeW5jKHRhcmdldFBhdGgpO1xuXG5jb25zdCBkZXBzID0gW1wiQHR5cGVzL25vZGVcIiwgXCJjb25zdHJ1Y3RzXCIsIFwiY2RrdGZcIl07XG5cbihhc3luYyAoKSA9PiB7XG4gIGF3YWl0IGdlbmVyYXRlUHJvdmlkZXJCaW5kaW5nc0Zyb21TY2hlbWEodGFyZ2V0UGF0aCwgZWRnZVNjaGVtYSwge1xuICAgIGVudHJ5cG9pbnQ6IHBhdGguam9pbihcInByb3ZpZGVyc1wiLCBcImVkZ2VcIiwgXCJpbmRleC50c1wiKSxcbiAgICBkZXBzOiBkZXBzLm1hcCgoZGVwKSA9PlxuICAgICAgcGF0aC5kaXJuYW1lKHJlcXVpcmUucmVzb2x2ZShgJHtkZXB9L3BhY2thZ2UuanNvbmApKVxuICAgICksXG4gICAgbW9kdWxlS2V5OiBcImVkZ2VcIixcbiAgICBweXRob246IHtcbiAgICAgIG91dGRpcjogcGF0aC5yZXNvbHZlKHRhcmdldFBhdGgsIFwicHl0aG9uXCIpLFxuICAgICAgbW9kdWxlTmFtZTogXCJlZGdlXCIsXG4gICAgfSxcbiAgICBqYXZhOiB7XG4gICAgICBvdXRkaXI6IHBhdGgucmVzb2x2ZSh0YXJnZXRQYXRoLCBcImphdmFcIiksXG4gICAgICBwYWNrYWdlOiBgaW1wb3J0cy5lZGdlcHJvdmlkZXJgLFxuICAgIH0sXG4gICAgY3NoYXJwOiB7XG4gICAgICBvdXRkaXI6IHBhdGgucmVzb2x2ZSh0YXJnZXRQYXRoLCBcImNzaGFycFwiKSxcbiAgICAgIG5hbWVzcGFjZTogXCJQcm92aWRlcnMuRWRnZVwiLFxuICAgIH0sXG4gICAgZ29sYW5nOiB7XG4gICAgICBvdXRkaXI6IHBhdGgucmVzb2x2ZSh0YXJnZXRQYXRoLCBcImdvXCIpLFxuICAgICAgbW9kdWxlTmFtZTogXCJjZGsudGYvZ28vc3RhY2svZ2VuZXJhdGVkL2hhc2hpY29ycFwiLFxuICAgICAgcGFja2FnZU5hbWU6IFwiZWRnZVwiLFxuICAgIH0sXG4gIH0pO1xufSkoKTtcbiJdfQ==