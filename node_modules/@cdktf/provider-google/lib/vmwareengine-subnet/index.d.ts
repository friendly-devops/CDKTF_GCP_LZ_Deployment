/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface VmwareengineSubnetConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#id VmwareengineSubnet#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The IP address range of the subnet in CIDR format.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#ip_cidr_range VmwareengineSubnet#ip_cidr_range}
    */
    readonly ipCidrRange: string;
    /**
    * The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n",
    * where n ranges from 1 to 5.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#name VmwareengineSubnet#name}
    */
    readonly name: string;
    /**
    * The resource name of the private cloud to create a new subnet in.
    * Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
    * For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#parent VmwareengineSubnet#parent}
    */
    readonly parent: string;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#timeouts VmwareengineSubnet#timeouts}
    */
    readonly timeouts?: VmwareengineSubnetTimeouts;
}
export interface VmwareengineSubnetDhcpAddressRanges {
}
export declare function vmwareengineSubnetDhcpAddressRangesToTerraform(struct?: VmwareengineSubnetDhcpAddressRanges): any;
export declare function vmwareengineSubnetDhcpAddressRangesToHclTerraform(struct?: VmwareengineSubnetDhcpAddressRanges): any;
export declare class VmwareengineSubnetDhcpAddressRangesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): VmwareengineSubnetDhcpAddressRanges | undefined;
    set internalValue(value: VmwareengineSubnetDhcpAddressRanges | undefined);
    get firstAddress(): string;
    get lastAddress(): string;
}
export declare class VmwareengineSubnetDhcpAddressRangesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): VmwareengineSubnetDhcpAddressRangesOutputReference;
}
export interface VmwareengineSubnetTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#create VmwareengineSubnet#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#delete VmwareengineSubnet#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#update VmwareengineSubnet#update}
    */
    readonly update?: string;
}
export declare function vmwareengineSubnetTimeoutsToTerraform(struct?: VmwareengineSubnetTimeouts | cdktf.IResolvable): any;
export declare function vmwareengineSubnetTimeoutsToHclTerraform(struct?: VmwareengineSubnetTimeouts | cdktf.IResolvable): any;
export declare class VmwareengineSubnetTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): VmwareengineSubnetTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: VmwareengineSubnetTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet google_vmwareengine_subnet}
*/
export declare class VmwareengineSubnet extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_vmwareengine_subnet";
    /**
    * Generates CDKTF code for importing a VmwareengineSubnet resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the VmwareengineSubnet to import
    * @param importFromId The id of the existing VmwareengineSubnet that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the VmwareengineSubnet to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_subnet google_vmwareengine_subnet} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options VmwareengineSubnetConfig
    */
    constructor(scope: Construct, id: string, config: VmwareengineSubnetConfig);
    get createTime(): string;
    private _dhcpAddressRanges;
    get dhcpAddressRanges(): VmwareengineSubnetDhcpAddressRangesList;
    get gatewayId(): string;
    get gatewayIp(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _ipCidrRange?;
    get ipCidrRange(): string;
    set ipCidrRange(value: string);
    get ipCidrRangeInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _parent?;
    get parent(): string;
    set parent(value: string);
    get parentInput(): string | undefined;
    get standardConfig(): cdktf.IResolvable;
    get state(): string;
    get type(): string;
    get uid(): string;
    get updateTime(): string;
    get vlanId(): number;
    private _timeouts;
    get timeouts(): VmwareengineSubnetTimeoutsOutputReference;
    putTimeouts(value: VmwareengineSubnetTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | VmwareengineSubnetTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
