/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataprocMetastoreServiceConfig extends cdktf.TerraformMetaArguments {
    /**
    * The database type that the Metastore service stores its data. Default value: "MYSQL" Possible values: ["MYSQL", "SPANNER"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#database_type DataprocMetastoreService#database_type}
    */
    readonly databaseType?: string;
    /**
    * Indicates if the dataproc metastore should be protected against accidental deletions.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#deletion_protection DataprocMetastoreService#deletion_protection}
    */
    readonly deletionProtection?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#id DataprocMetastoreService#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * User-defined labels for the metastore service.
    *
    * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
    * Please refer to the field 'effective_labels' for all of the labels present on the resource.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#labels DataprocMetastoreService#labels}
    */
    readonly labels?: {
        [key: string]: string;
    };
    /**
    * The location where the metastore service should reside.
    * The default value is 'global'.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#location DataprocMetastoreService#location}
    */
    readonly location?: string;
    /**
    * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
    *
    * "projects/{projectNumber}/global/networks/{network_id}".
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#network DataprocMetastoreService#network}
    */
    readonly network?: string;
    /**
    * The TCP port at which the metastore service is reached. Default: 9083.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#port DataprocMetastoreService#port}
    */
    readonly port?: number;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#project DataprocMetastoreService#project}
    */
    readonly project?: string;
    /**
    * The release channel of the service. If unspecified, defaults to 'STABLE'. Default value: "STABLE" Possible values: ["CANARY", "STABLE"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#release_channel DataprocMetastoreService#release_channel}
    */
    readonly releaseChannel?: string;
    /**
    * The ID of the metastore service. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
    * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
    * 3 and 63 characters.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#service_id DataprocMetastoreService#service_id}
    */
    readonly serviceId: string;
    /**
    * The tier of the service. Possible values: ["DEVELOPER", "ENTERPRISE"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#tier DataprocMetastoreService#tier}
    */
    readonly tier?: string;
    /**
    * encryption_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#encryption_config DataprocMetastoreService#encryption_config}
    */
    readonly encryptionConfig?: DataprocMetastoreServiceEncryptionConfig;
    /**
    * hive_metastore_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#hive_metastore_config DataprocMetastoreService#hive_metastore_config}
    */
    readonly hiveMetastoreConfig?: DataprocMetastoreServiceHiveMetastoreConfig;
    /**
    * maintenance_window block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#maintenance_window DataprocMetastoreService#maintenance_window}
    */
    readonly maintenanceWindow?: DataprocMetastoreServiceMaintenanceWindow;
    /**
    * metadata_integration block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#metadata_integration DataprocMetastoreService#metadata_integration}
    */
    readonly metadataIntegration?: DataprocMetastoreServiceMetadataIntegration;
    /**
    * network_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#network_config DataprocMetastoreService#network_config}
    */
    readonly networkConfig?: DataprocMetastoreServiceNetworkConfig;
    /**
    * scaling_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#scaling_config DataprocMetastoreService#scaling_config}
    */
    readonly scalingConfig?: DataprocMetastoreServiceScalingConfig;
    /**
    * scheduled_backup block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#scheduled_backup DataprocMetastoreService#scheduled_backup}
    */
    readonly scheduledBackup?: DataprocMetastoreServiceScheduledBackup;
    /**
    * telemetry_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#telemetry_config DataprocMetastoreService#telemetry_config}
    */
    readonly telemetryConfig?: DataprocMetastoreServiceTelemetryConfig;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#timeouts DataprocMetastoreService#timeouts}
    */
    readonly timeouts?: DataprocMetastoreServiceTimeouts;
}
export interface DataprocMetastoreServiceEncryptionConfig {
    /**
    * The fully qualified customer provided Cloud KMS key name to use for customer data encryption.
    * Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#kms_key DataprocMetastoreService#kms_key}
    */
    readonly kmsKey: string;
}
export declare function dataprocMetastoreServiceEncryptionConfigToTerraform(struct?: DataprocMetastoreServiceEncryptionConfigOutputReference | DataprocMetastoreServiceEncryptionConfig): any;
export declare function dataprocMetastoreServiceEncryptionConfigToHclTerraform(struct?: DataprocMetastoreServiceEncryptionConfigOutputReference | DataprocMetastoreServiceEncryptionConfig): any;
export declare class DataprocMetastoreServiceEncryptionConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceEncryptionConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceEncryptionConfig | undefined);
    private _kmsKey?;
    get kmsKey(): string;
    set kmsKey(value: string);
    get kmsKeyInput(): string | undefined;
}
export interface DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions {
    /**
    * A mapping of Hive metastore configuration key-value pairs to apply to the auxiliary Hive metastore (configured in hive-site.xml) in addition to the primary version's overrides.
    * If keys are present in both the auxiliary version's overrides and the primary version's overrides, the value from the auxiliary version's overrides takes precedence.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#config_overrides DataprocMetastoreService#config_overrides}
    */
    readonly configOverrides?: {
        [key: string]: string;
    };
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#key DataprocMetastoreService#key}
    */
    readonly key: string;
    /**
    * The Hive metastore version of the auxiliary service. It must be less than the primary Hive metastore service's version.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#version DataprocMetastoreService#version}
    */
    readonly version: string;
}
export declare function dataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersionsToTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions | cdktf.IResolvable): any;
export declare function dataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersionsToHclTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions | cdktf.IResolvable): any;
export declare class DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersionsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions | cdktf.IResolvable | undefined;
    set internalValue(value: DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions | cdktf.IResolvable | undefined);
    private _configOverrides?;
    get configOverrides(): {
        [key: string]: string;
    };
    set configOverrides(value: {
        [key: string]: string;
    });
    resetConfigOverrides(): void;
    get configOverridesInput(): {
        [key: string]: string;
    } | undefined;
    private _key?;
    get key(): string;
    set key(value: string);
    get keyInput(): string | undefined;
    private _version?;
    get version(): string;
    set version(value: string);
    get versionInput(): string | undefined;
}
export declare class DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersionsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersionsOutputReference;
}
export interface DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab {
    /**
    * The relative resource name of a Secret Manager secret version, in the following form:
    *
    * "projects/{projectNumber}/secrets/{secret_id}/versions/{version_id}".
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#cloud_secret DataprocMetastoreService#cloud_secret}
    */
    readonly cloudSecret: string;
}
export declare function dataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytabToTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytabOutputReference | DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab): any;
export declare function dataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytabToHclTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytabOutputReference | DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab): any;
export declare class DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytabOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab | undefined;
    set internalValue(value: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab | undefined);
    private _cloudSecret?;
    get cloudSecret(): string;
    set cloudSecret(value: string);
    get cloudSecretInput(): string | undefined;
}
export interface DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig {
    /**
    * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#krb5_config_gcs_uri DataprocMetastoreService#krb5_config_gcs_uri}
    */
    readonly krb5ConfigGcsUri: string;
    /**
    * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form "primary/instance@REALM", but there is no exact format.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#principal DataprocMetastoreService#principal}
    */
    readonly principal: string;
    /**
    * keytab block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#keytab DataprocMetastoreService#keytab}
    */
    readonly keytab: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab;
}
export declare function dataprocMetastoreServiceHiveMetastoreConfigKerberosConfigToTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigOutputReference | DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig): any;
export declare function dataprocMetastoreServiceHiveMetastoreConfigKerberosConfigToHclTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigOutputReference | DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig): any;
export declare class DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig | undefined);
    private _krb5ConfigGcsUri?;
    get krb5ConfigGcsUri(): string;
    set krb5ConfigGcsUri(value: string);
    get krb5ConfigGcsUriInput(): string | undefined;
    private _principal?;
    get principal(): string;
    set principal(value: string);
    get principalInput(): string | undefined;
    private _keytab;
    get keytab(): DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytabOutputReference;
    putKeytab(value: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab): void;
    get keytabInput(): DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab | undefined;
}
export interface DataprocMetastoreServiceHiveMetastoreConfig {
    /**
    * A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
    * The mappings override system defaults (some keys cannot be overridden)
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#config_overrides DataprocMetastoreService#config_overrides}
    */
    readonly configOverrides?: {
        [key: string]: string;
    };
    /**
    * The protocol to use for the metastore service endpoint. If unspecified, defaults to 'THRIFT'. Default value: "THRIFT" Possible values: ["THRIFT", "GRPC"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#endpoint_protocol DataprocMetastoreService#endpoint_protocol}
    */
    readonly endpointProtocol?: string;
    /**
    * The Hive metastore schema version.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#version DataprocMetastoreService#version}
    */
    readonly version: string;
    /**
    * auxiliary_versions block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#auxiliary_versions DataprocMetastoreService#auxiliary_versions}
    */
    readonly auxiliaryVersions?: DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions[] | cdktf.IResolvable;
    /**
    * kerberos_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#kerberos_config DataprocMetastoreService#kerberos_config}
    */
    readonly kerberosConfig?: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig;
}
export declare function dataprocMetastoreServiceHiveMetastoreConfigToTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigOutputReference | DataprocMetastoreServiceHiveMetastoreConfig): any;
export declare function dataprocMetastoreServiceHiveMetastoreConfigToHclTerraform(struct?: DataprocMetastoreServiceHiveMetastoreConfigOutputReference | DataprocMetastoreServiceHiveMetastoreConfig): any;
export declare class DataprocMetastoreServiceHiveMetastoreConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceHiveMetastoreConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceHiveMetastoreConfig | undefined);
    private _configOverrides?;
    get configOverrides(): {
        [key: string]: string;
    };
    set configOverrides(value: {
        [key: string]: string;
    });
    resetConfigOverrides(): void;
    get configOverridesInput(): {
        [key: string]: string;
    } | undefined;
    private _endpointProtocol?;
    get endpointProtocol(): string;
    set endpointProtocol(value: string);
    resetEndpointProtocol(): void;
    get endpointProtocolInput(): string | undefined;
    private _version?;
    get version(): string;
    set version(value: string);
    get versionInput(): string | undefined;
    private _auxiliaryVersions;
    get auxiliaryVersions(): DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersionsList;
    putAuxiliaryVersions(value: DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions[] | cdktf.IResolvable): void;
    resetAuxiliaryVersions(): void;
    get auxiliaryVersionsInput(): cdktf.IResolvable | DataprocMetastoreServiceHiveMetastoreConfigAuxiliaryVersions[] | undefined;
    private _kerberosConfig;
    get kerberosConfig(): DataprocMetastoreServiceHiveMetastoreConfigKerberosConfigOutputReference;
    putKerberosConfig(value: DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig): void;
    resetKerberosConfig(): void;
    get kerberosConfigInput(): DataprocMetastoreServiceHiveMetastoreConfigKerberosConfig | undefined;
}
export interface DataprocMetastoreServiceMaintenanceWindow {
    /**
    * The day of week, when the window starts. Possible values: ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#day_of_week DataprocMetastoreService#day_of_week}
    */
    readonly dayOfWeek: string;
    /**
    * The hour of day (0-23) when the window starts.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#hour_of_day DataprocMetastoreService#hour_of_day}
    */
    readonly hourOfDay: number;
}
export declare function dataprocMetastoreServiceMaintenanceWindowToTerraform(struct?: DataprocMetastoreServiceMaintenanceWindowOutputReference | DataprocMetastoreServiceMaintenanceWindow): any;
export declare function dataprocMetastoreServiceMaintenanceWindowToHclTerraform(struct?: DataprocMetastoreServiceMaintenanceWindowOutputReference | DataprocMetastoreServiceMaintenanceWindow): any;
export declare class DataprocMetastoreServiceMaintenanceWindowOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceMaintenanceWindow | undefined;
    set internalValue(value: DataprocMetastoreServiceMaintenanceWindow | undefined);
    private _dayOfWeek?;
    get dayOfWeek(): string;
    set dayOfWeek(value: string);
    get dayOfWeekInput(): string | undefined;
    private _hourOfDay?;
    get hourOfDay(): number;
    set hourOfDay(value: number);
    get hourOfDayInput(): number | undefined;
}
export interface DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig {
    /**
    * Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#enabled DataprocMetastoreService#enabled}
    */
    readonly enabled: boolean | cdktf.IResolvable;
}
export declare function dataprocMetastoreServiceMetadataIntegrationDataCatalogConfigToTerraform(struct?: DataprocMetastoreServiceMetadataIntegrationDataCatalogConfigOutputReference | DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig): any;
export declare function dataprocMetastoreServiceMetadataIntegrationDataCatalogConfigToHclTerraform(struct?: DataprocMetastoreServiceMetadataIntegrationDataCatalogConfigOutputReference | DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig): any;
export declare class DataprocMetastoreServiceMetadataIntegrationDataCatalogConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig | undefined);
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
}
export interface DataprocMetastoreServiceMetadataIntegration {
    /**
    * data_catalog_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#data_catalog_config DataprocMetastoreService#data_catalog_config}
    */
    readonly dataCatalogConfig: DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig;
}
export declare function dataprocMetastoreServiceMetadataIntegrationToTerraform(struct?: DataprocMetastoreServiceMetadataIntegrationOutputReference | DataprocMetastoreServiceMetadataIntegration): any;
export declare function dataprocMetastoreServiceMetadataIntegrationToHclTerraform(struct?: DataprocMetastoreServiceMetadataIntegrationOutputReference | DataprocMetastoreServiceMetadataIntegration): any;
export declare class DataprocMetastoreServiceMetadataIntegrationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceMetadataIntegration | undefined;
    set internalValue(value: DataprocMetastoreServiceMetadataIntegration | undefined);
    private _dataCatalogConfig;
    get dataCatalogConfig(): DataprocMetastoreServiceMetadataIntegrationDataCatalogConfigOutputReference;
    putDataCatalogConfig(value: DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig): void;
    get dataCatalogConfigInput(): DataprocMetastoreServiceMetadataIntegrationDataCatalogConfig | undefined;
}
export interface DataprocMetastoreServiceNetworkConfigConsumers {
    /**
    * The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint.
    * It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network.
    * There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:
    * 'projects/{projectNumber}/regions/{region_id}/subnetworks/{subnetwork_id}
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#subnetwork DataprocMetastoreService#subnetwork}
    */
    readonly subnetwork: string;
}
export declare function dataprocMetastoreServiceNetworkConfigConsumersToTerraform(struct?: DataprocMetastoreServiceNetworkConfigConsumers | cdktf.IResolvable): any;
export declare function dataprocMetastoreServiceNetworkConfigConsumersToHclTerraform(struct?: DataprocMetastoreServiceNetworkConfigConsumers | cdktf.IResolvable): any;
export declare class DataprocMetastoreServiceNetworkConfigConsumersOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataprocMetastoreServiceNetworkConfigConsumers | cdktf.IResolvable | undefined;
    set internalValue(value: DataprocMetastoreServiceNetworkConfigConsumers | cdktf.IResolvable | undefined);
    get endpointUri(): string;
    private _subnetwork?;
    get subnetwork(): string;
    set subnetwork(value: string);
    get subnetworkInput(): string | undefined;
}
export declare class DataprocMetastoreServiceNetworkConfigConsumersList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: DataprocMetastoreServiceNetworkConfigConsumers[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataprocMetastoreServiceNetworkConfigConsumersOutputReference;
}
export interface DataprocMetastoreServiceNetworkConfig {
    /**
    * consumers block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#consumers DataprocMetastoreService#consumers}
    */
    readonly consumers: DataprocMetastoreServiceNetworkConfigConsumers[] | cdktf.IResolvable;
}
export declare function dataprocMetastoreServiceNetworkConfigToTerraform(struct?: DataprocMetastoreServiceNetworkConfigOutputReference | DataprocMetastoreServiceNetworkConfig): any;
export declare function dataprocMetastoreServiceNetworkConfigToHclTerraform(struct?: DataprocMetastoreServiceNetworkConfigOutputReference | DataprocMetastoreServiceNetworkConfig): any;
export declare class DataprocMetastoreServiceNetworkConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceNetworkConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceNetworkConfig | undefined);
    private _consumers;
    get consumers(): DataprocMetastoreServiceNetworkConfigConsumersList;
    putConsumers(value: DataprocMetastoreServiceNetworkConfigConsumers[] | cdktf.IResolvable): void;
    get consumersInput(): cdktf.IResolvable | DataprocMetastoreServiceNetworkConfigConsumers[] | undefined;
}
export interface DataprocMetastoreServiceScalingConfig {
    /**
    * Metastore instance sizes. Possible values: ["EXTRA_SMALL", "SMALL", "MEDIUM", "LARGE", "EXTRA_LARGE"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#instance_size DataprocMetastoreService#instance_size}
    */
    readonly instanceSize?: string;
    /**
    * Scaling factor, in increments of 0.1 for values less than 1.0, and increments of 1.0 for values greater than 1.0.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#scaling_factor DataprocMetastoreService#scaling_factor}
    */
    readonly scalingFactor?: number;
}
export declare function dataprocMetastoreServiceScalingConfigToTerraform(struct?: DataprocMetastoreServiceScalingConfigOutputReference | DataprocMetastoreServiceScalingConfig): any;
export declare function dataprocMetastoreServiceScalingConfigToHclTerraform(struct?: DataprocMetastoreServiceScalingConfigOutputReference | DataprocMetastoreServiceScalingConfig): any;
export declare class DataprocMetastoreServiceScalingConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceScalingConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceScalingConfig | undefined);
    private _instanceSize?;
    get instanceSize(): string;
    set instanceSize(value: string);
    resetInstanceSize(): void;
    get instanceSizeInput(): string | undefined;
    private _scalingFactor?;
    get scalingFactor(): number;
    set scalingFactor(value: number);
    resetScalingFactor(): void;
    get scalingFactorInput(): number | undefined;
}
export interface DataprocMetastoreServiceScheduledBackup {
    /**
    * A Cloud Storage URI of a folder, in the format gs://<bucket_name>/<path_inside_bucket>. A sub-folder <backup_folder> containing backup files will be stored below it.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#backup_location DataprocMetastoreService#backup_location}
    */
    readonly backupLocation: string;
    /**
    * The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron The default is empty: scheduled backup is not enabled. Must be specified to enable scheduled backups.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#cron_schedule DataprocMetastoreService#cron_schedule}
    */
    readonly cronSchedule?: string;
    /**
    * Defines whether the scheduled backup is enabled. The default value is false.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#enabled DataprocMetastoreService#enabled}
    */
    readonly enabled?: boolean | cdktf.IResolvable;
    /**
    * Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified, the default is UTC.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#time_zone DataprocMetastoreService#time_zone}
    */
    readonly timeZone?: string;
}
export declare function dataprocMetastoreServiceScheduledBackupToTerraform(struct?: DataprocMetastoreServiceScheduledBackupOutputReference | DataprocMetastoreServiceScheduledBackup): any;
export declare function dataprocMetastoreServiceScheduledBackupToHclTerraform(struct?: DataprocMetastoreServiceScheduledBackupOutputReference | DataprocMetastoreServiceScheduledBackup): any;
export declare class DataprocMetastoreServiceScheduledBackupOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceScheduledBackup | undefined;
    set internalValue(value: DataprocMetastoreServiceScheduledBackup | undefined);
    private _backupLocation?;
    get backupLocation(): string;
    set backupLocation(value: string);
    get backupLocationInput(): string | undefined;
    private _cronSchedule?;
    get cronSchedule(): string;
    set cronSchedule(value: string);
    resetCronSchedule(): void;
    get cronScheduleInput(): string | undefined;
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    resetEnabled(): void;
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
    private _timeZone?;
    get timeZone(): string;
    set timeZone(value: string);
    resetTimeZone(): void;
    get timeZoneInput(): string | undefined;
}
export interface DataprocMetastoreServiceTelemetryConfig {
    /**
    * The output format of the Dataproc Metastore service's logs. Default value: "JSON" Possible values: ["LEGACY", "JSON"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#log_format DataprocMetastoreService#log_format}
    */
    readonly logFormat?: string;
}
export declare function dataprocMetastoreServiceTelemetryConfigToTerraform(struct?: DataprocMetastoreServiceTelemetryConfigOutputReference | DataprocMetastoreServiceTelemetryConfig): any;
export declare function dataprocMetastoreServiceTelemetryConfigToHclTerraform(struct?: DataprocMetastoreServiceTelemetryConfigOutputReference | DataprocMetastoreServiceTelemetryConfig): any;
export declare class DataprocMetastoreServiceTelemetryConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceTelemetryConfig | undefined;
    set internalValue(value: DataprocMetastoreServiceTelemetryConfig | undefined);
    private _logFormat?;
    get logFormat(): string;
    set logFormat(value: string);
    resetLogFormat(): void;
    get logFormatInput(): string | undefined;
}
export interface DataprocMetastoreServiceTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#create DataprocMetastoreService#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#delete DataprocMetastoreService#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#update DataprocMetastoreService#update}
    */
    readonly update?: string;
}
export declare function dataprocMetastoreServiceTimeoutsToTerraform(struct?: DataprocMetastoreServiceTimeouts | cdktf.IResolvable): any;
export declare function dataprocMetastoreServiceTimeoutsToHclTerraform(struct?: DataprocMetastoreServiceTimeouts | cdktf.IResolvable): any;
export declare class DataprocMetastoreServiceTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocMetastoreServiceTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: DataprocMetastoreServiceTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service google_dataproc_metastore_service}
*/
export declare class DataprocMetastoreService extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_dataproc_metastore_service";
    /**
    * Generates CDKTF code for importing a DataprocMetastoreService resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the DataprocMetastoreService to import
    * @param importFromId The id of the existing DataprocMetastoreService that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the DataprocMetastoreService to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_metastore_service google_dataproc_metastore_service} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataprocMetastoreServiceConfig
    */
    constructor(scope: Construct, id: string, config: DataprocMetastoreServiceConfig);
    get artifactGcsUri(): string;
    private _databaseType?;
    get databaseType(): string;
    set databaseType(value: string);
    resetDatabaseType(): void;
    get databaseTypeInput(): string | undefined;
    private _deletionProtection?;
    get deletionProtection(): boolean | cdktf.IResolvable;
    set deletionProtection(value: boolean | cdktf.IResolvable);
    resetDeletionProtection(): void;
    get deletionProtectionInput(): boolean | cdktf.IResolvable | undefined;
    private _effectiveLabels;
    get effectiveLabels(): cdktf.StringMap;
    get endpointUri(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _labels?;
    get labels(): {
        [key: string]: string;
    };
    set labels(value: {
        [key: string]: string;
    });
    resetLabels(): void;
    get labelsInput(): {
        [key: string]: string;
    } | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    resetLocation(): void;
    get locationInput(): string | undefined;
    get name(): string;
    private _network?;
    get network(): string;
    set network(value: string);
    resetNetwork(): void;
    get networkInput(): string | undefined;
    private _port?;
    get port(): number;
    set port(value: number);
    resetPort(): void;
    get portInput(): number | undefined;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    private _releaseChannel?;
    get releaseChannel(): string;
    set releaseChannel(value: string);
    resetReleaseChannel(): void;
    get releaseChannelInput(): string | undefined;
    private _serviceId?;
    get serviceId(): string;
    set serviceId(value: string);
    get serviceIdInput(): string | undefined;
    get state(): string;
    get stateMessage(): string;
    private _terraformLabels;
    get terraformLabels(): cdktf.StringMap;
    private _tier?;
    get tier(): string;
    set tier(value: string);
    resetTier(): void;
    get tierInput(): string | undefined;
    get uid(): string;
    private _encryptionConfig;
    get encryptionConfig(): DataprocMetastoreServiceEncryptionConfigOutputReference;
    putEncryptionConfig(value: DataprocMetastoreServiceEncryptionConfig): void;
    resetEncryptionConfig(): void;
    get encryptionConfigInput(): DataprocMetastoreServiceEncryptionConfig | undefined;
    private _hiveMetastoreConfig;
    get hiveMetastoreConfig(): DataprocMetastoreServiceHiveMetastoreConfigOutputReference;
    putHiveMetastoreConfig(value: DataprocMetastoreServiceHiveMetastoreConfig): void;
    resetHiveMetastoreConfig(): void;
    get hiveMetastoreConfigInput(): DataprocMetastoreServiceHiveMetastoreConfig | undefined;
    private _maintenanceWindow;
    get maintenanceWindow(): DataprocMetastoreServiceMaintenanceWindowOutputReference;
    putMaintenanceWindow(value: DataprocMetastoreServiceMaintenanceWindow): void;
    resetMaintenanceWindow(): void;
    get maintenanceWindowInput(): DataprocMetastoreServiceMaintenanceWindow | undefined;
    private _metadataIntegration;
    get metadataIntegration(): DataprocMetastoreServiceMetadataIntegrationOutputReference;
    putMetadataIntegration(value: DataprocMetastoreServiceMetadataIntegration): void;
    resetMetadataIntegration(): void;
    get metadataIntegrationInput(): DataprocMetastoreServiceMetadataIntegration | undefined;
    private _networkConfig;
    get networkConfig(): DataprocMetastoreServiceNetworkConfigOutputReference;
    putNetworkConfig(value: DataprocMetastoreServiceNetworkConfig): void;
    resetNetworkConfig(): void;
    get networkConfigInput(): DataprocMetastoreServiceNetworkConfig | undefined;
    private _scalingConfig;
    get scalingConfig(): DataprocMetastoreServiceScalingConfigOutputReference;
    putScalingConfig(value: DataprocMetastoreServiceScalingConfig): void;
    resetScalingConfig(): void;
    get scalingConfigInput(): DataprocMetastoreServiceScalingConfig | undefined;
    private _scheduledBackup;
    get scheduledBackup(): DataprocMetastoreServiceScheduledBackupOutputReference;
    putScheduledBackup(value: DataprocMetastoreServiceScheduledBackup): void;
    resetScheduledBackup(): void;
    get scheduledBackupInput(): DataprocMetastoreServiceScheduledBackup | undefined;
    private _telemetryConfig;
    get telemetryConfig(): DataprocMetastoreServiceTelemetryConfigOutputReference;
    putTelemetryConfig(value: DataprocMetastoreServiceTelemetryConfig): void;
    resetTelemetryConfig(): void;
    get telemetryConfigInput(): DataprocMetastoreServiceTelemetryConfig | undefined;
    private _timeouts;
    get timeouts(): DataprocMetastoreServiceTimeoutsOutputReference;
    putTimeouts(value: DataprocMetastoreServiceTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | DataprocMetastoreServiceTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
