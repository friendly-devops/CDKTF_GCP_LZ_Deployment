/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface SecureSourceManagerRepositoryConfig extends cdktf.TerraformMetaArguments {
    /**
    * Description of the repository, which cannot exceed 500 characters.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#description SecureSourceManagerRepository#description}
    */
    readonly description?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#id SecureSourceManagerRepository#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The name of the instance in which the repository is hosted.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#instance SecureSourceManagerRepository#instance}
    */
    readonly instance: string;
    /**
    * The location for the Repository.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#location SecureSourceManagerRepository#location}
    */
    readonly location: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#project SecureSourceManagerRepository#project}
    */
    readonly project?: string;
    /**
    * The ID for the Repository.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#repository_id SecureSourceManagerRepository#repository_id}
    */
    readonly repositoryId: string;
    /**
    * initial_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#initial_config SecureSourceManagerRepository#initial_config}
    */
    readonly initialConfig?: SecureSourceManagerRepositoryInitialConfig;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#timeouts SecureSourceManagerRepository#timeouts}
    */
    readonly timeouts?: SecureSourceManagerRepositoryTimeouts;
}
export interface SecureSourceManagerRepositoryUris {
}
export declare function secureSourceManagerRepositoryUrisToTerraform(struct?: SecureSourceManagerRepositoryUris): any;
export declare function secureSourceManagerRepositoryUrisToHclTerraform(struct?: SecureSourceManagerRepositoryUris): any;
export declare class SecureSourceManagerRepositoryUrisOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): SecureSourceManagerRepositoryUris | undefined;
    set internalValue(value: SecureSourceManagerRepositoryUris | undefined);
    get api(): string;
    get gitHttps(): string;
    get html(): string;
}
export declare class SecureSourceManagerRepositoryUrisList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): SecureSourceManagerRepositoryUrisOutputReference;
}
export interface SecureSourceManagerRepositoryInitialConfig {
    /**
    * Default branch name of the repository.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#default_branch SecureSourceManagerRepository#default_branch}
    */
    readonly defaultBranch?: string;
    /**
    * List of gitignore template names user can choose from.
    * Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#gitignores SecureSourceManagerRepository#gitignores}
    */
    readonly gitignores?: string[];
    /**
    * License template name user can choose from.
    * Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#license SecureSourceManagerRepository#license}
    */
    readonly license?: string;
    /**
    * README template name.
    * Valid values can be viewed at https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#readme SecureSourceManagerRepository#readme}
    */
    readonly readme?: string;
}
export declare function secureSourceManagerRepositoryInitialConfigToTerraform(struct?: SecureSourceManagerRepositoryInitialConfigOutputReference | SecureSourceManagerRepositoryInitialConfig): any;
export declare function secureSourceManagerRepositoryInitialConfigToHclTerraform(struct?: SecureSourceManagerRepositoryInitialConfigOutputReference | SecureSourceManagerRepositoryInitialConfig): any;
export declare class SecureSourceManagerRepositoryInitialConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): SecureSourceManagerRepositoryInitialConfig | undefined;
    set internalValue(value: SecureSourceManagerRepositoryInitialConfig | undefined);
    private _defaultBranch?;
    get defaultBranch(): string;
    set defaultBranch(value: string);
    resetDefaultBranch(): void;
    get defaultBranchInput(): string | undefined;
    private _gitignores?;
    get gitignores(): string[];
    set gitignores(value: string[]);
    resetGitignores(): void;
    get gitignoresInput(): string[] | undefined;
    private _license?;
    get license(): string;
    set license(value: string);
    resetLicense(): void;
    get licenseInput(): string | undefined;
    private _readme?;
    get readme(): string;
    set readme(value: string);
    resetReadme(): void;
    get readmeInput(): string | undefined;
}
export interface SecureSourceManagerRepositoryTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#create SecureSourceManagerRepository#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#delete SecureSourceManagerRepository#delete}
    */
    readonly delete?: string;
}
export declare function secureSourceManagerRepositoryTimeoutsToTerraform(struct?: SecureSourceManagerRepositoryTimeouts | cdktf.IResolvable): any;
export declare function secureSourceManagerRepositoryTimeoutsToHclTerraform(struct?: SecureSourceManagerRepositoryTimeouts | cdktf.IResolvable): any;
export declare class SecureSourceManagerRepositoryTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): SecureSourceManagerRepositoryTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: SecureSourceManagerRepositoryTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository google_secure_source_manager_repository}
*/
export declare class SecureSourceManagerRepository extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_secure_source_manager_repository";
    /**
    * Generates CDKTF code for importing a SecureSourceManagerRepository resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the SecureSourceManagerRepository to import
    * @param importFromId The id of the existing SecureSourceManagerRepository that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the SecureSourceManagerRepository to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_repository google_secure_source_manager_repository} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options SecureSourceManagerRepositoryConfig
    */
    constructor(scope: Construct, id: string, config: SecureSourceManagerRepositoryConfig);
    get createTime(): string;
    private _description?;
    get description(): string;
    set description(value: string);
    resetDescription(): void;
    get descriptionInput(): string | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _instance?;
    get instance(): string;
    set instance(value: string);
    get instanceInput(): string | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    get name(): string;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    private _repositoryId?;
    get repositoryId(): string;
    set repositoryId(value: string);
    get repositoryIdInput(): string | undefined;
    get uid(): string;
    get updateTime(): string;
    private _uris;
    get uris(): SecureSourceManagerRepositoryUrisList;
    private _initialConfig;
    get initialConfig(): SecureSourceManagerRepositoryInitialConfigOutputReference;
    putInitialConfig(value: SecureSourceManagerRepositoryInitialConfig): void;
    resetInitialConfig(): void;
    get initialConfigInput(): SecureSourceManagerRepositoryInitialConfig | undefined;
    private _timeouts;
    get timeouts(): SecureSourceManagerRepositoryTimeoutsOutputReference;
    putTimeouts(value: SecureSourceManagerRepositoryTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | SecureSourceManagerRepositoryTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
