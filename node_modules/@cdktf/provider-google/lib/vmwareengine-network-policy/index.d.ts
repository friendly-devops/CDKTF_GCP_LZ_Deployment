/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface VmwareengineNetworkPolicyConfig extends cdktf.TerraformMetaArguments {
    /**
    * User-provided description for this network policy.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#description VmwareengineNetworkPolicy#description}
    */
    readonly description?: string;
    /**
    * IP address range in CIDR notation used to create internet access and external IP access.
    * An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
    * prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#edge_services_cidr VmwareengineNetworkPolicy#edge_services_cidr}
    */
    readonly edgeServicesCidr: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#id VmwareengineNetworkPolicy#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The resource name of the location (region) to create the new network policy in.
    * Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
    * For example: projects/my-project/locations/us-central1
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#location VmwareengineNetworkPolicy#location}
    */
    readonly location: string;
    /**
    * The ID of the Network Policy.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#name VmwareengineNetworkPolicy#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#project VmwareengineNetworkPolicy#project}
    */
    readonly project?: string;
    /**
    * The relative resource name of the VMware Engine network. Specify the name in the following form:
    * projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
    * can either be a project number or a project ID.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#vmware_engine_network VmwareengineNetworkPolicy#vmware_engine_network}
    */
    readonly vmwareEngineNetwork: string;
    /**
    * external_ip block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#external_ip VmwareengineNetworkPolicy#external_ip}
    */
    readonly externalIp?: VmwareengineNetworkPolicyExternalIp;
    /**
    * internet_access block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#internet_access VmwareengineNetworkPolicy#internet_access}
    */
    readonly internetAccess?: VmwareengineNetworkPolicyInternetAccess;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#timeouts VmwareengineNetworkPolicy#timeouts}
    */
    readonly timeouts?: VmwareengineNetworkPolicyTimeouts;
}
export interface VmwareengineNetworkPolicyExternalIp {
    /**
    * True if the service is enabled; false otherwise.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#enabled VmwareengineNetworkPolicy#enabled}
    */
    readonly enabled?: boolean | cdktf.IResolvable;
}
export declare function vmwareengineNetworkPolicyExternalIpToTerraform(struct?: VmwareengineNetworkPolicyExternalIpOutputReference | VmwareengineNetworkPolicyExternalIp): any;
export declare function vmwareengineNetworkPolicyExternalIpToHclTerraform(struct?: VmwareengineNetworkPolicyExternalIpOutputReference | VmwareengineNetworkPolicyExternalIp): any;
export declare class VmwareengineNetworkPolicyExternalIpOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): VmwareengineNetworkPolicyExternalIp | undefined;
    set internalValue(value: VmwareengineNetworkPolicyExternalIp | undefined);
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    resetEnabled(): void;
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
    get state(): string;
}
export interface VmwareengineNetworkPolicyInternetAccess {
    /**
    * True if the service is enabled; false otherwise.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#enabled VmwareengineNetworkPolicy#enabled}
    */
    readonly enabled?: boolean | cdktf.IResolvable;
}
export declare function vmwareengineNetworkPolicyInternetAccessToTerraform(struct?: VmwareengineNetworkPolicyInternetAccessOutputReference | VmwareengineNetworkPolicyInternetAccess): any;
export declare function vmwareengineNetworkPolicyInternetAccessToHclTerraform(struct?: VmwareengineNetworkPolicyInternetAccessOutputReference | VmwareengineNetworkPolicyInternetAccess): any;
export declare class VmwareengineNetworkPolicyInternetAccessOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): VmwareengineNetworkPolicyInternetAccess | undefined;
    set internalValue(value: VmwareengineNetworkPolicyInternetAccess | undefined);
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    resetEnabled(): void;
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
    get state(): string;
}
export interface VmwareengineNetworkPolicyTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#create VmwareengineNetworkPolicy#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#delete VmwareengineNetworkPolicy#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#update VmwareengineNetworkPolicy#update}
    */
    readonly update?: string;
}
export declare function vmwareengineNetworkPolicyTimeoutsToTerraform(struct?: VmwareengineNetworkPolicyTimeouts | cdktf.IResolvable): any;
export declare function vmwareengineNetworkPolicyTimeoutsToHclTerraform(struct?: VmwareengineNetworkPolicyTimeouts | cdktf.IResolvable): any;
export declare class VmwareengineNetworkPolicyTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): VmwareengineNetworkPolicyTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: VmwareengineNetworkPolicyTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy google_vmwareengine_network_policy}
*/
export declare class VmwareengineNetworkPolicy extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_vmwareengine_network_policy";
    /**
    * Generates CDKTF code for importing a VmwareengineNetworkPolicy resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the VmwareengineNetworkPolicy to import
    * @param importFromId The id of the existing VmwareengineNetworkPolicy that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the VmwareengineNetworkPolicy to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/vmwareengine_network_policy google_vmwareengine_network_policy} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options VmwareengineNetworkPolicyConfig
    */
    constructor(scope: Construct, id: string, config: VmwareengineNetworkPolicyConfig);
    get createTime(): string;
    private _description?;
    get description(): string;
    set description(value: string);
    resetDescription(): void;
    get descriptionInput(): string | undefined;
    private _edgeServicesCidr?;
    get edgeServicesCidr(): string;
    set edgeServicesCidr(value: string);
    get edgeServicesCidrInput(): string | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    get uid(): string;
    get updateTime(): string;
    private _vmwareEngineNetwork?;
    get vmwareEngineNetwork(): string;
    set vmwareEngineNetwork(value: string);
    get vmwareEngineNetworkInput(): string | undefined;
    get vmwareEngineNetworkCanonical(): string;
    private _externalIp;
    get externalIp(): VmwareengineNetworkPolicyExternalIpOutputReference;
    putExternalIp(value: VmwareengineNetworkPolicyExternalIp): void;
    resetExternalIp(): void;
    get externalIpInput(): VmwareengineNetworkPolicyExternalIp | undefined;
    private _internetAccess;
    get internetAccess(): VmwareengineNetworkPolicyInternetAccessOutputReference;
    putInternetAccess(value: VmwareengineNetworkPolicyInternetAccess): void;
    resetInternetAccess(): void;
    get internetAccessInput(): VmwareengineNetworkPolicyInternetAccess | undefined;
    private _timeouts;
    get timeouts(): VmwareengineNetworkPolicyTimeoutsOutputReference;
    putTimeouts(value: VmwareengineNetworkPolicyTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | VmwareengineNetworkPolicyTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
