/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface FirestoreFieldConfig extends cdktf.TerraformMetaArguments {
    /**
    * The id of the collection group to configure.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#collection FirestoreField#collection}
    */
    readonly collection: string;
    /**
    * The Firestore database id. Defaults to '"(default)"'.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#database FirestoreField#database}
    */
    readonly database?: string;
    /**
    * The id of the field to configure.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#field FirestoreField#field}
    */
    readonly field: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#id FirestoreField#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#project FirestoreField#project}
    */
    readonly project?: string;
    /**
    * index_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#index_config FirestoreField#index_config}
    */
    readonly indexConfig?: FirestoreFieldIndexConfig;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#timeouts FirestoreField#timeouts}
    */
    readonly timeouts?: FirestoreFieldTimeouts;
    /**
    * ttl_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#ttl_config FirestoreField#ttl_config}
    */
    readonly ttlConfig?: FirestoreFieldTtlConfig;
}
export interface FirestoreFieldIndexConfigIndexes {
    /**
    * Indicates that this field supports operations on arrayValues. Only one of 'order' and 'arrayConfig' can
    * be specified. Possible values: ["CONTAINS"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#array_config FirestoreField#array_config}
    */
    readonly arrayConfig?: string;
    /**
    * Indicates that this field supports ordering by the specified order or comparing using =, <, <=, >, >=, !=.
    * Only one of 'order' and 'arrayConfig' can be specified. Possible values: ["ASCENDING", "DESCENDING"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#order FirestoreField#order}
    */
    readonly order?: string;
    /**
    * The scope at which a query is run. Collection scoped queries require you specify
    * the collection at query time. Collection group scope allows queries across all
    * collections with the same id. Default value: "COLLECTION" Possible values: ["COLLECTION", "COLLECTION_GROUP"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#query_scope FirestoreField#query_scope}
    */
    readonly queryScope?: string;
}
export declare function firestoreFieldIndexConfigIndexesToTerraform(struct?: FirestoreFieldIndexConfigIndexes | cdktf.IResolvable): any;
export declare function firestoreFieldIndexConfigIndexesToHclTerraform(struct?: FirestoreFieldIndexConfigIndexes | cdktf.IResolvable): any;
export declare class FirestoreFieldIndexConfigIndexesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): FirestoreFieldIndexConfigIndexes | cdktf.IResolvable | undefined;
    set internalValue(value: FirestoreFieldIndexConfigIndexes | cdktf.IResolvable | undefined);
    private _arrayConfig?;
    get arrayConfig(): string;
    set arrayConfig(value: string);
    resetArrayConfig(): void;
    get arrayConfigInput(): string | undefined;
    private _order?;
    get order(): string;
    set order(value: string);
    resetOrder(): void;
    get orderInput(): string | undefined;
    private _queryScope?;
    get queryScope(): string;
    set queryScope(value: string);
    resetQueryScope(): void;
    get queryScopeInput(): string | undefined;
}
export declare class FirestoreFieldIndexConfigIndexesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: FirestoreFieldIndexConfigIndexes[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): FirestoreFieldIndexConfigIndexesOutputReference;
}
export interface FirestoreFieldIndexConfig {
    /**
    * indexes block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#indexes FirestoreField#indexes}
    */
    readonly indexes?: FirestoreFieldIndexConfigIndexes[] | cdktf.IResolvable;
}
export declare function firestoreFieldIndexConfigToTerraform(struct?: FirestoreFieldIndexConfigOutputReference | FirestoreFieldIndexConfig): any;
export declare function firestoreFieldIndexConfigToHclTerraform(struct?: FirestoreFieldIndexConfigOutputReference | FirestoreFieldIndexConfig): any;
export declare class FirestoreFieldIndexConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): FirestoreFieldIndexConfig | undefined;
    set internalValue(value: FirestoreFieldIndexConfig | undefined);
    private _indexes;
    get indexes(): FirestoreFieldIndexConfigIndexesList;
    putIndexes(value: FirestoreFieldIndexConfigIndexes[] | cdktf.IResolvable): void;
    resetIndexes(): void;
    get indexesInput(): cdktf.IResolvable | FirestoreFieldIndexConfigIndexes[] | undefined;
}
export interface FirestoreFieldTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#create FirestoreField#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#delete FirestoreField#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#update FirestoreField#update}
    */
    readonly update?: string;
}
export declare function firestoreFieldTimeoutsToTerraform(struct?: FirestoreFieldTimeouts | cdktf.IResolvable): any;
export declare function firestoreFieldTimeoutsToHclTerraform(struct?: FirestoreFieldTimeouts | cdktf.IResolvable): any;
export declare class FirestoreFieldTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): FirestoreFieldTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: FirestoreFieldTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
export interface FirestoreFieldTtlConfig {
}
export declare function firestoreFieldTtlConfigToTerraform(struct?: FirestoreFieldTtlConfigOutputReference | FirestoreFieldTtlConfig): any;
export declare function firestoreFieldTtlConfigToHclTerraform(struct?: FirestoreFieldTtlConfigOutputReference | FirestoreFieldTtlConfig): any;
export declare class FirestoreFieldTtlConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): FirestoreFieldTtlConfig | undefined;
    set internalValue(value: FirestoreFieldTtlConfig | undefined);
    get state(): string;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field google_firestore_field}
*/
export declare class FirestoreField extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_firestore_field";
    /**
    * Generates CDKTF code for importing a FirestoreField resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the FirestoreField to import
    * @param importFromId The id of the existing FirestoreField that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the FirestoreField to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_field google_firestore_field} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options FirestoreFieldConfig
    */
    constructor(scope: Construct, id: string, config: FirestoreFieldConfig);
    private _collection?;
    get collection(): string;
    set collection(value: string);
    get collectionInput(): string | undefined;
    private _database?;
    get database(): string;
    set database(value: string);
    resetDatabase(): void;
    get databaseInput(): string | undefined;
    private _field?;
    get field(): string;
    set field(value: string);
    get fieldInput(): string | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    get name(): string;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    private _indexConfig;
    get indexConfig(): FirestoreFieldIndexConfigOutputReference;
    putIndexConfig(value: FirestoreFieldIndexConfig): void;
    resetIndexConfig(): void;
    get indexConfigInput(): FirestoreFieldIndexConfig | undefined;
    private _timeouts;
    get timeouts(): FirestoreFieldTimeoutsOutputReference;
    putTimeouts(value: FirestoreFieldTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | FirestoreFieldTimeouts | undefined;
    private _ttlConfig;
    get ttlConfig(): FirestoreFieldTtlConfigOutputReference;
    putTtlConfig(value: FirestoreFieldTtlConfig): void;
    resetTtlConfig(): void;
    get ttlConfigInput(): FirestoreFieldTtlConfig | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
