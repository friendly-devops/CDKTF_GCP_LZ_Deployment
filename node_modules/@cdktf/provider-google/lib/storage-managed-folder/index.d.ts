/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface StorageManagedFolderConfig extends cdktf.TerraformMetaArguments {
    /**
    * The name of the bucket that contains the managed folder.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#bucket StorageManagedFolder#bucket}
    */
    readonly bucket: string;
    /**
    * Allows the deletion of a managed folder even if contains
    * objects. If a non-empty managed folder is deleted, any objects
    * within the folder will remain in a simulated folder with the
    * same name.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#force_destroy StorageManagedFolder#force_destroy}
    */
    readonly forceDestroy?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#id StorageManagedFolder#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The name of the managed folder expressed as a path. Must include
    * trailing '/'. For example, 'example_dir/example_dir2/'.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#name StorageManagedFolder#name}
    */
    readonly name: string;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#timeouts StorageManagedFolder#timeouts}
    */
    readonly timeouts?: StorageManagedFolderTimeouts;
}
export interface StorageManagedFolderTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#create StorageManagedFolder#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#delete StorageManagedFolder#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#update StorageManagedFolder#update}
    */
    readonly update?: string;
}
export declare function storageManagedFolderTimeoutsToTerraform(struct?: StorageManagedFolderTimeouts | cdktf.IResolvable): any;
export declare function storageManagedFolderTimeoutsToHclTerraform(struct?: StorageManagedFolderTimeouts | cdktf.IResolvable): any;
export declare class StorageManagedFolderTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): StorageManagedFolderTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: StorageManagedFolderTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder google_storage_managed_folder}
*/
export declare class StorageManagedFolder extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_storage_managed_folder";
    /**
    * Generates CDKTF code for importing a StorageManagedFolder resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the StorageManagedFolder to import
    * @param importFromId The id of the existing StorageManagedFolder that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the StorageManagedFolder to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/storage_managed_folder google_storage_managed_folder} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options StorageManagedFolderConfig
    */
    constructor(scope: Construct, id: string, config: StorageManagedFolderConfig);
    private _bucket?;
    get bucket(): string;
    set bucket(value: string);
    get bucketInput(): string | undefined;
    get createTime(): string;
    private _forceDestroy?;
    get forceDestroy(): boolean | cdktf.IResolvable;
    set forceDestroy(value: boolean | cdktf.IResolvable);
    resetForceDestroy(): void;
    get forceDestroyInput(): boolean | cdktf.IResolvable | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    get metageneration(): string;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    get selfLink(): string;
    get updateTime(): string;
    private _timeouts;
    get timeouts(): StorageManagedFolderTimeoutsOutputReference;
    putTimeouts(value: StorageManagedFolderTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | StorageManagedFolderTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
