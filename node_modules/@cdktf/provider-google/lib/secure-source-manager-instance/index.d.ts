/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface SecureSourceManagerInstanceConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#id SecureSourceManagerInstance#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The name for the Instance.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#instance_id SecureSourceManagerInstance#instance_id}
    */
    readonly instanceId: string;
    /**
    * Customer-managed encryption key name, in the format projects/* /locations/* /keyRings/* /cryptoKeys/*.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#kms_key SecureSourceManagerInstance#kms_key}
     *
    * Note: The above comment contained a comment block ending sequence (* followed by /). We have introduced a space between to prevent syntax errors. Please ignore the space.
    */
    readonly kmsKey?: string;
    /**
    * Labels as key value pairs.
    *
    *
    * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
    * Please refer to the field 'effective_labels' for all of the labels present on the resource.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#labels SecureSourceManagerInstance#labels}
    */
    readonly labels?: {
        [key: string]: string;
    };
    /**
    * The location for the Instance.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#location SecureSourceManagerInstance#location}
    */
    readonly location: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#project SecureSourceManagerInstance#project}
    */
    readonly project?: string;
    /**
    * private_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#private_config SecureSourceManagerInstance#private_config}
    */
    readonly privateConfig?: SecureSourceManagerInstancePrivateConfig;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#timeouts SecureSourceManagerInstance#timeouts}
    */
    readonly timeouts?: SecureSourceManagerInstanceTimeouts;
    /**
    * workforce_identity_federation_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#workforce_identity_federation_config SecureSourceManagerInstance#workforce_identity_federation_config}
    */
    readonly workforceIdentityFederationConfig?: SecureSourceManagerInstanceWorkforceIdentityFederationConfig;
}
export interface SecureSourceManagerInstanceHostConfig {
}
export declare function secureSourceManagerInstanceHostConfigToTerraform(struct?: SecureSourceManagerInstanceHostConfig): any;
export declare function secureSourceManagerInstanceHostConfigToHclTerraform(struct?: SecureSourceManagerInstanceHostConfig): any;
export declare class SecureSourceManagerInstanceHostConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): SecureSourceManagerInstanceHostConfig | undefined;
    set internalValue(value: SecureSourceManagerInstanceHostConfig | undefined);
    get api(): string;
    get gitHttp(): string;
    get gitSsh(): string;
    get html(): string;
}
export declare class SecureSourceManagerInstanceHostConfigList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): SecureSourceManagerInstanceHostConfigOutputReference;
}
export interface SecureSourceManagerInstancePrivateConfig {
    /**
    * CA pool resource, resource must in the format of 'projects/{project}/locations/{location}/caPools/{ca_pool}'.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#ca_pool SecureSourceManagerInstance#ca_pool}
    */
    readonly caPool: string;
    /**
    * 'Indicate if it's private instance.'
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#is_private SecureSourceManagerInstance#is_private}
    */
    readonly isPrivate: boolean | cdktf.IResolvable;
}
export declare function secureSourceManagerInstancePrivateConfigToTerraform(struct?: SecureSourceManagerInstancePrivateConfigOutputReference | SecureSourceManagerInstancePrivateConfig): any;
export declare function secureSourceManagerInstancePrivateConfigToHclTerraform(struct?: SecureSourceManagerInstancePrivateConfigOutputReference | SecureSourceManagerInstancePrivateConfig): any;
export declare class SecureSourceManagerInstancePrivateConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): SecureSourceManagerInstancePrivateConfig | undefined;
    set internalValue(value: SecureSourceManagerInstancePrivateConfig | undefined);
    private _caPool?;
    get caPool(): string;
    set caPool(value: string);
    get caPoolInput(): string | undefined;
    get httpServiceAttachment(): string;
    private _isPrivate?;
    get isPrivate(): boolean | cdktf.IResolvable;
    set isPrivate(value: boolean | cdktf.IResolvable);
    get isPrivateInput(): boolean | cdktf.IResolvable | undefined;
    get sshServiceAttachment(): string;
}
export interface SecureSourceManagerInstanceTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#create SecureSourceManagerInstance#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#delete SecureSourceManagerInstance#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#update SecureSourceManagerInstance#update}
    */
    readonly update?: string;
}
export declare function secureSourceManagerInstanceTimeoutsToTerraform(struct?: SecureSourceManagerInstanceTimeouts | cdktf.IResolvable): any;
export declare function secureSourceManagerInstanceTimeoutsToHclTerraform(struct?: SecureSourceManagerInstanceTimeouts | cdktf.IResolvable): any;
export declare class SecureSourceManagerInstanceTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): SecureSourceManagerInstanceTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: SecureSourceManagerInstanceTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
export interface SecureSourceManagerInstanceWorkforceIdentityFederationConfig {
    /**
    * 'Whether Workforce Identity Federation is enabled.'
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#enabled SecureSourceManagerInstance#enabled}
    */
    readonly enabled: boolean | cdktf.IResolvable;
}
export declare function secureSourceManagerInstanceWorkforceIdentityFederationConfigToTerraform(struct?: SecureSourceManagerInstanceWorkforceIdentityFederationConfigOutputReference | SecureSourceManagerInstanceWorkforceIdentityFederationConfig): any;
export declare function secureSourceManagerInstanceWorkforceIdentityFederationConfigToHclTerraform(struct?: SecureSourceManagerInstanceWorkforceIdentityFederationConfigOutputReference | SecureSourceManagerInstanceWorkforceIdentityFederationConfig): any;
export declare class SecureSourceManagerInstanceWorkforceIdentityFederationConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): SecureSourceManagerInstanceWorkforceIdentityFederationConfig | undefined;
    set internalValue(value: SecureSourceManagerInstanceWorkforceIdentityFederationConfig | undefined);
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance google_secure_source_manager_instance}
*/
export declare class SecureSourceManagerInstance extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_secure_source_manager_instance";
    /**
    * Generates CDKTF code for importing a SecureSourceManagerInstance resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the SecureSourceManagerInstance to import
    * @param importFromId The id of the existing SecureSourceManagerInstance that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the SecureSourceManagerInstance to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/secure_source_manager_instance google_secure_source_manager_instance} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options SecureSourceManagerInstanceConfig
    */
    constructor(scope: Construct, id: string, config: SecureSourceManagerInstanceConfig);
    get createTime(): string;
    private _effectiveLabels;
    get effectiveLabels(): cdktf.StringMap;
    private _hostConfig;
    get hostConfig(): SecureSourceManagerInstanceHostConfigList;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _instanceId?;
    get instanceId(): string;
    set instanceId(value: string);
    get instanceIdInput(): string | undefined;
    private _kmsKey?;
    get kmsKey(): string;
    set kmsKey(value: string);
    resetKmsKey(): void;
    get kmsKeyInput(): string | undefined;
    private _labels?;
    get labels(): {
        [key: string]: string;
    };
    set labels(value: {
        [key: string]: string;
    });
    resetLabels(): void;
    get labelsInput(): {
        [key: string]: string;
    } | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    get name(): string;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    get state(): string;
    get stateNote(): string;
    private _terraformLabels;
    get terraformLabels(): cdktf.StringMap;
    get updateTime(): string;
    private _privateConfig;
    get privateConfig(): SecureSourceManagerInstancePrivateConfigOutputReference;
    putPrivateConfig(value: SecureSourceManagerInstancePrivateConfig): void;
    resetPrivateConfig(): void;
    get privateConfigInput(): SecureSourceManagerInstancePrivateConfig | undefined;
    private _timeouts;
    get timeouts(): SecureSourceManagerInstanceTimeoutsOutputReference;
    putTimeouts(value: SecureSourceManagerInstanceTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | SecureSourceManagerInstanceTimeouts | undefined;
    private _workforceIdentityFederationConfig;
    get workforceIdentityFederationConfig(): SecureSourceManagerInstanceWorkforceIdentityFederationConfigOutputReference;
    putWorkforceIdentityFederationConfig(value: SecureSourceManagerInstanceWorkforceIdentityFederationConfig): void;
    resetWorkforceIdentityFederationConfig(): void;
    get workforceIdentityFederationConfigInput(): SecureSourceManagerInstanceWorkforceIdentityFederationConfig | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
