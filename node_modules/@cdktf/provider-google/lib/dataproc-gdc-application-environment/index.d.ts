/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataprocGdcApplicationEnvironmentConfig extends cdktf.TerraformMetaArguments {
    /**
    * The annotations to associate with this application environment. Annotations may be used to store client information, but are not used by the server.
    *
    * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
    * Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#annotations DataprocGdcApplicationEnvironment#annotations}
    */
    readonly annotations?: {
        [key: string]: string;
    };
    /**
    * The id of the application environment
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#application_environment_id DataprocGdcApplicationEnvironment#application_environment_id}
    */
    readonly applicationEnvironmentId?: string;
    /**
    * User-provided human-readable name to be used in user interfaces.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#display_name DataprocGdcApplicationEnvironment#display_name}
    */
    readonly displayName?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#id DataprocGdcApplicationEnvironment#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
    *
    * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
    * Please refer to the field 'effective_labels' for all of the labels present on the resource.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#labels DataprocGdcApplicationEnvironment#labels}
    */
    readonly labels?: {
        [key: string]: string;
    };
    /**
    * The location of the application environment
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#location DataprocGdcApplicationEnvironment#location}
    */
    readonly location: string;
    /**
    * The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the cluster
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#namespace DataprocGdcApplicationEnvironment#namespace}
    */
    readonly namespace?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#project DataprocGdcApplicationEnvironment#project}
    */
    readonly project?: string;
    /**
    * The id of the service instance to which this application environment belongs.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#serviceinstance DataprocGdcApplicationEnvironment#serviceinstance}
    */
    readonly serviceinstance: string;
    /**
    * spark_application_environment_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#spark_application_environment_config DataprocGdcApplicationEnvironment#spark_application_environment_config}
    */
    readonly sparkApplicationEnvironmentConfig?: DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#timeouts DataprocGdcApplicationEnvironment#timeouts}
    */
    readonly timeouts?: DataprocGdcApplicationEnvironmentTimeouts;
}
export interface DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig {
    /**
    * A map of default Spark properties to apply to workloads in this application environment. These defaults may be overridden by per-application properties.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#default_properties DataprocGdcApplicationEnvironment#default_properties}
    */
    readonly defaultProperties?: {
        [key: string]: string;
    };
    /**
    * The default Dataproc version to use for applications submitted to this application environment
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#default_version DataprocGdcApplicationEnvironment#default_version}
    */
    readonly defaultVersion?: string;
}
export declare function dataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigToTerraform(struct?: DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigOutputReference | DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig): any;
export declare function dataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigToHclTerraform(struct?: DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigOutputReference | DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig): any;
export declare class DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig | undefined;
    set internalValue(value: DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig | undefined);
    private _defaultProperties?;
    get defaultProperties(): {
        [key: string]: string;
    };
    set defaultProperties(value: {
        [key: string]: string;
    });
    resetDefaultProperties(): void;
    get defaultPropertiesInput(): {
        [key: string]: string;
    } | undefined;
    private _defaultVersion?;
    get defaultVersion(): string;
    set defaultVersion(value: string);
    resetDefaultVersion(): void;
    get defaultVersionInput(): string | undefined;
}
export interface DataprocGdcApplicationEnvironmentTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#create DataprocGdcApplicationEnvironment#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#delete DataprocGdcApplicationEnvironment#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#update DataprocGdcApplicationEnvironment#update}
    */
    readonly update?: string;
}
export declare function dataprocGdcApplicationEnvironmentTimeoutsToTerraform(struct?: DataprocGdcApplicationEnvironmentTimeouts | cdktf.IResolvable): any;
export declare function dataprocGdcApplicationEnvironmentTimeoutsToHclTerraform(struct?: DataprocGdcApplicationEnvironmentTimeouts | cdktf.IResolvable): any;
export declare class DataprocGdcApplicationEnvironmentTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataprocGdcApplicationEnvironmentTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: DataprocGdcApplicationEnvironmentTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment google_dataproc_gdc_application_environment}
*/
export declare class DataprocGdcApplicationEnvironment extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_dataproc_gdc_application_environment";
    /**
    * Generates CDKTF code for importing a DataprocGdcApplicationEnvironment resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the DataprocGdcApplicationEnvironment to import
    * @param importFromId The id of the existing DataprocGdcApplicationEnvironment that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the DataprocGdcApplicationEnvironment to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/dataproc_gdc_application_environment google_dataproc_gdc_application_environment} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataprocGdcApplicationEnvironmentConfig
    */
    constructor(scope: Construct, id: string, config: DataprocGdcApplicationEnvironmentConfig);
    private _annotations?;
    get annotations(): {
        [key: string]: string;
    };
    set annotations(value: {
        [key: string]: string;
    });
    resetAnnotations(): void;
    get annotationsInput(): {
        [key: string]: string;
    } | undefined;
    private _applicationEnvironmentId?;
    get applicationEnvironmentId(): string;
    set applicationEnvironmentId(value: string);
    resetApplicationEnvironmentId(): void;
    get applicationEnvironmentIdInput(): string | undefined;
    get createTime(): string;
    private _displayName?;
    get displayName(): string;
    set displayName(value: string);
    resetDisplayName(): void;
    get displayNameInput(): string | undefined;
    private _effectiveAnnotations;
    get effectiveAnnotations(): cdktf.StringMap;
    private _effectiveLabels;
    get effectiveLabels(): cdktf.StringMap;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _labels?;
    get labels(): {
        [key: string]: string;
    };
    set labels(value: {
        [key: string]: string;
    });
    resetLabels(): void;
    get labelsInput(): {
        [key: string]: string;
    } | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    get name(): string;
    private _namespace?;
    get namespace(): string;
    set namespace(value: string);
    resetNamespace(): void;
    get namespaceInput(): string | undefined;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    private _serviceinstance?;
    get serviceinstance(): string;
    set serviceinstance(value: string);
    get serviceinstanceInput(): string | undefined;
    private _terraformLabels;
    get terraformLabels(): cdktf.StringMap;
    get uid(): string;
    get updateTime(): string;
    private _sparkApplicationEnvironmentConfig;
    get sparkApplicationEnvironmentConfig(): DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigOutputReference;
    putSparkApplicationEnvironmentConfig(value: DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig): void;
    resetSparkApplicationEnvironmentConfig(): void;
    get sparkApplicationEnvironmentConfigInput(): DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig | undefined;
    private _timeouts;
    get timeouts(): DataprocGdcApplicationEnvironmentTimeoutsOutputReference;
    putTimeouts(value: DataprocGdcApplicationEnvironmentTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | DataprocGdcApplicationEnvironmentTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
