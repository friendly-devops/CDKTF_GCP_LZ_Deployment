/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataGoogleOracleDatabaseCloudVmClustersConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/data-sources/oracle_database_cloud_vm_clusters#id DataGoogleOracleDatabaseCloudVmClusters#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * location
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/data-sources/oracle_database_cloud_vm_clusters#location DataGoogleOracleDatabaseCloudVmClusters#location}
    */
    readonly location: string;
    /**
    * The ID of the project in which the dataset is located. If it is not provided, the provider project is used.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/data-sources/oracle_database_cloud_vm_clusters#project DataGoogleOracleDatabaseCloudVmClusters#project}
    */
    readonly project?: string;
}
export interface DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptions {
}
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptionsToTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptions): any;
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptionsToHclTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptions): any;
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptionsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptions | undefined;
    set internalValue(value: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptions | undefined);
    get diagnosticsEventsEnabled(): cdktf.IResolvable;
    get healthMonitoringEnabled(): cdktf.IResolvable;
    get incidentLogsEnabled(): cdktf.IResolvable;
}
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptionsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptionsOutputReference;
}
export interface DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZone {
}
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZoneToTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZone): any;
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZoneToHclTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZone): any;
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZoneOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZone | undefined;
    set internalValue(value: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZone | undefined);
    get id(): string;
}
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZoneList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZoneOutputReference;
}
export interface DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersProperties {
}
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesToTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersProperties): any;
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesToHclTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersProperties): any;
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersProperties | undefined;
    set internalValue(value: DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersProperties | undefined);
    get clusterName(): string;
    get compartmentId(): string;
    get cpuCoreCount(): number;
    get dataStorageSizeTb(): number;
    get dbNodeStorageSizeGb(): number;
    get dbServerOcids(): string[];
    private _diagnosticsDataCollectionOptions;
    get diagnosticsDataCollectionOptions(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesDiagnosticsDataCollectionOptionsList;
    get diskRedundancy(): string;
    get dnsListenerIp(): string;
    get domain(): string;
    get giVersion(): string;
    get hostname(): string;
    get hostnamePrefix(): string;
    get licenseType(): string;
    get localBackupEnabled(): cdktf.IResolvable;
    get memorySizeGb(): number;
    get nodeCount(): number;
    get ociUrl(): string;
    get ocid(): string;
    get ocpuCount(): number;
    get scanDns(): string;
    get scanDnsRecordId(): string;
    get scanIpIds(): string[];
    get scanListenerPortTcp(): number;
    get scanListenerPortTcpSsl(): number;
    get shape(): string;
    get sparseDiskgroupEnabled(): cdktf.IResolvable;
    get sshPublicKeys(): string[];
    get state(): string;
    get storageSizeGb(): number;
    get systemVersion(): string;
    private _timeZone;
    get timeZone(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesTimeZoneList;
}
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesOutputReference;
}
export interface DataGoogleOracleDatabaseCloudVmClustersCloudVmClusters {
}
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersToTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClusters): any;
export declare function dataGoogleOracleDatabaseCloudVmClustersCloudVmClustersToHclTerraform(struct?: DataGoogleOracleDatabaseCloudVmClustersCloudVmClusters): any;
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClusters | undefined;
    set internalValue(value: DataGoogleOracleDatabaseCloudVmClustersCloudVmClusters | undefined);
    get backupSubnetCidr(): string;
    get cidr(): string;
    get cloudVmClusterId(): string;
    get createTime(): string;
    get deletionProtection(): cdktf.IResolvable;
    get displayName(): string;
    private _effectiveLabels;
    get effectiveLabels(): cdktf.StringMap;
    get exadataInfrastructure(): string;
    get gcpOracleZone(): string;
    private _labels;
    get labels(): cdktf.StringMap;
    get location(): string;
    get name(): string;
    get network(): string;
    get project(): string;
    private _properties;
    get properties(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersPropertiesList;
    private _terraformLabels;
    get terraformLabels(): cdktf.StringMap;
}
export declare class DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersOutputReference;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/data-sources/oracle_database_cloud_vm_clusters google_oracle_database_cloud_vm_clusters}
*/
export declare class DataGoogleOracleDatabaseCloudVmClusters extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "google_oracle_database_cloud_vm_clusters";
    /**
    * Generates CDKTF code for importing a DataGoogleOracleDatabaseCloudVmClusters resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the DataGoogleOracleDatabaseCloudVmClusters to import
    * @param importFromId The id of the existing DataGoogleOracleDatabaseCloudVmClusters that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/data-sources/oracle_database_cloud_vm_clusters#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the DataGoogleOracleDatabaseCloudVmClusters to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/data-sources/oracle_database_cloud_vm_clusters google_oracle_database_cloud_vm_clusters} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataGoogleOracleDatabaseCloudVmClustersConfig
    */
    constructor(scope: Construct, id: string, config: DataGoogleOracleDatabaseCloudVmClustersConfig);
    private _cloudVmClusters;
    get cloudVmClusters(): DataGoogleOracleDatabaseCloudVmClustersCloudVmClustersList;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
