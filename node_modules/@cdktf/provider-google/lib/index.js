"use strict";
/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.apigeeSharedflowDeployment = exports.apigeeSharedflow = exports.apigeeOrganization = exports.apigeeNatAddress = exports.apigeeKeystoresAliasesSelfSignedCert = exports.apigeeKeystoresAliasesPkcs12 = exports.apigeeKeystoresAliasesKeyCertFile = exports.apigeeInstanceAttachment = exports.apigeeInstance = exports.apigeeFlowhook = exports.apigeeEnvironmentKeyvaluemapsEntries = exports.apigeeEnvironmentKeyvaluemaps = exports.apigeeEnvironmentIamPolicy = exports.apigeeEnvironmentIamMember = exports.apigeeEnvironmentIamBinding = exports.apigeeEnvironment = exports.apigeeEnvgroupAttachment = exports.apigeeEnvgroup = exports.apigeeEnvReferences = exports.apigeeEnvKeystore = exports.apigeeEndpointAttachment = exports.apigeeDeveloper = exports.apigeeAppGroup = exports.apigeeApi = exports.apigeeAddonsConfig = exports.alloydbUser = exports.alloydbInstance = exports.alloydbCluster = exports.alloydbBackup = exports.activeDirectoryDomainTrust = exports.activeDirectoryDomain = exports.accessContextManagerServicePerimeters = exports.accessContextManagerServicePerimeterResource = exports.accessContextManagerServicePerimeterIngressPolicy = exports.accessContextManagerServicePerimeterEgressPolicy = exports.accessContextManagerServicePerimeterDryRunResource = exports.accessContextManagerServicePerimeterDryRunIngressPolicy = exports.accessContextManagerServicePerimeterDryRunEgressPolicy = exports.accessContextManagerServicePerimeter = exports.accessContextManagerIngressPolicy = exports.accessContextManagerGcpUserAccessBinding = exports.accessContextManagerEgressPolicy = exports.accessContextManagerAuthorizedOrgsDesc = exports.accessContextManagerAccessPolicyIamPolicy = exports.accessContextManagerAccessPolicyIamMember = exports.accessContextManagerAccessPolicyIamBinding = exports.accessContextManagerAccessPolicy = exports.accessContextManagerAccessLevels = exports.accessContextManagerAccessLevelCondition = exports.accessContextManagerAccessLevel = void 0;
exports.bigqueryDatasetIamMember = exports.bigqueryDatasetIamBinding = exports.bigqueryDatasetAccess = exports.bigqueryDataset = exports.bigqueryDatapolicyDataPolicyIamPolicy = exports.bigqueryDatapolicyDataPolicyIamMember = exports.bigqueryDatapolicyDataPolicyIamBinding = exports.bigqueryDatapolicyDataPolicy = exports.bigqueryDataTransferConfig = exports.bigqueryConnectionIamPolicy = exports.bigqueryConnectionIamMember = exports.bigqueryConnectionIamBinding = exports.bigqueryConnection = exports.bigqueryCapacityCommitment = exports.bigqueryBiReservation = exports.bigqueryAnalyticsHubListingIamPolicy = exports.bigqueryAnalyticsHubListingIamMember = exports.bigqueryAnalyticsHubListingIamBinding = exports.bigqueryAnalyticsHubListing = exports.bigqueryAnalyticsHubDataExchangeIamPolicy = exports.bigqueryAnalyticsHubDataExchangeIamMember = exports.bigqueryAnalyticsHubDataExchangeIamBinding = exports.bigqueryAnalyticsHubDataExchange = exports.biglakeTable = exports.biglakeDatabase = exports.biglakeCatalog = exports.beyondcorpAppGateway = exports.beyondcorpAppConnector = exports.beyondcorpAppConnection = exports.backupDrBackupVault = exports.assuredWorkloadsWorkload = exports.artifactRegistryRepositoryIamPolicy = exports.artifactRegistryRepositoryIamMember = exports.artifactRegistryRepositoryIamBinding = exports.artifactRegistryRepository = exports.apphubWorkload = exports.apphubServiceProjectAttachment = exports.apphubService = exports.apphubApplication = exports.appEngineStandardAppVersion = exports.appEngineServiceSplitTraffic = exports.appEngineServiceNetworkSettings = exports.appEngineFlexibleAppVersion = exports.appEngineFirewallRule = exports.appEngineDomainMapping = exports.appEngineApplicationUrlDispatchRules = exports.appEngineApplication = exports.apikeysKey = exports.apigeeTargetServer = exports.apigeeSyncAuthorization = void 0;
exports.cloudRunServiceIamPolicy = exports.cloudRunServiceIamMember = exports.cloudRunServiceIamBinding = exports.cloudRunService = exports.cloudRunDomainMapping = exports.cloudQuotasQuotaPreference = exports.cloudIdsEndpoint = exports.cloudIdentityGroupMembership = exports.cloudIdentityGroup = exports.cloudAssetProjectFeed = exports.cloudAssetOrganizationFeed = exports.cloudAssetFolderFeed = exports.certificateManagerTrustConfig = exports.certificateManagerDnsAuthorization = exports.certificateManagerCertificateMapEntry = exports.certificateManagerCertificateMap = exports.certificateManagerCertificateIssuanceConfig = exports.certificateManagerCertificate = exports.blockchainNodeEngineBlockchainNodes = exports.binaryAuthorizationPolicy = exports.binaryAuthorizationAttestorIamPolicy = exports.binaryAuthorizationAttestorIamMember = exports.binaryAuthorizationAttestorIamBinding = exports.binaryAuthorizationAttestor = exports.billingSubaccount = exports.billingProjectInfo = exports.billingBudget = exports.billingAccountIamPolicy = exports.billingAccountIamMember = exports.billingAccountIamBinding = exports.bigtableTableIamPolicy = exports.bigtableTableIamMember = exports.bigtableTableIamBinding = exports.bigtableTable = exports.bigtableInstanceIamPolicy = exports.bigtableInstanceIamMember = exports.bigtableInstanceIamBinding = exports.bigtableInstance = exports.bigtableGcPolicy = exports.bigtableAuthorizedView = exports.bigtableAppProfile = exports.bigqueryTableIamPolicy = exports.bigqueryTableIamMember = exports.bigqueryTableIamBinding = exports.bigqueryTable = exports.bigqueryRoutine = exports.bigqueryReservationAssignment = exports.bigqueryReservation = exports.bigqueryJob = exports.bigqueryDatasetIamPolicy = void 0;
exports.computeBackendBucket = exports.computeAutoscaler = exports.computeAttachedDisk = exports.computeAddress = exports.composerUserWorkloadsSecret = exports.composerUserWorkloadsConfigMap = exports.composerEnvironment = exports.cloudfunctionsFunctionIamPolicy = exports.cloudfunctionsFunctionIamMember = exports.cloudfunctionsFunctionIamBinding = exports.cloudfunctionsFunction = exports.cloudfunctions2FunctionIamPolicy = exports.cloudfunctions2FunctionIamMember = exports.cloudfunctions2FunctionIamBinding = exports.cloudfunctions2Function = exports.clouddomainsRegistration = exports.clouddeployTargetIamPolicy = exports.clouddeployTargetIamMember = exports.clouddeployTargetIamBinding = exports.clouddeployTarget = exports.clouddeployDeliveryPipelineIamPolicy = exports.clouddeployDeliveryPipelineIamMember = exports.clouddeployDeliveryPipelineIamBinding = exports.clouddeployDeliveryPipeline = exports.clouddeployCustomTargetTypeIamPolicy = exports.clouddeployCustomTargetTypeIamMember = exports.clouddeployCustomTargetTypeIamBinding = exports.clouddeployCustomTargetType = exports.clouddeployAutomation = exports.cloudbuildv2Repository = exports.cloudbuildv2ConnectionIamPolicy = exports.cloudbuildv2ConnectionIamMember = exports.cloudbuildv2ConnectionIamBinding = exports.cloudbuildv2Connection = exports.cloudbuildWorkerPool = exports.cloudbuildTrigger = exports.cloudbuildBitbucketServerConfig = exports.cloudTasksQueueIamPolicy = exports.cloudTasksQueueIamMember = exports.cloudTasksQueueIamBinding = exports.cloudTasksQueue = exports.cloudSchedulerJob = exports.cloudRunV2ServiceIamPolicy = exports.cloudRunV2ServiceIamMember = exports.cloudRunV2ServiceIamBinding = exports.cloudRunV2Service = exports.cloudRunV2JobIamPolicy = exports.cloudRunV2JobIamMember = exports.cloudRunV2JobIamBinding = exports.cloudRunV2Job = void 0;
exports.computeNetworkPeering = exports.computeNetworkFirewallPolicyRule = exports.computeNetworkFirewallPolicyAssociation = exports.computeNetworkFirewallPolicy = exports.computeNetworkEndpoints = exports.computeNetworkEndpointGroup = exports.computeNetworkEndpoint = exports.computeNetworkAttachment = exports.computeNetwork = exports.computeManagedSslCertificate = exports.computeInterconnectAttachment = exports.computeInterconnect = exports.computeInstanceTemplate = exports.computeInstanceSettings = exports.computeInstanceIamPolicy = exports.computeInstanceIamMember = exports.computeInstanceIamBinding = exports.computeInstanceGroupNamedPort = exports.computeInstanceGroupMembership = exports.computeInstanceGroupManager = exports.computeInstanceGroup = exports.computeInstanceFromTemplate = exports.computeInstance = exports.computeImageIamPolicy = exports.computeImageIamMember = exports.computeImageIamBinding = exports.computeImage = exports.computeHttpsHealthCheck = exports.computeHttpHealthCheck = exports.computeHealthCheck = exports.computeHaVpnGateway = exports.computeGlobalNetworkEndpointGroup = exports.computeGlobalNetworkEndpoint = exports.computeGlobalForwardingRule = exports.computeGlobalAddress = exports.computeForwardingRule = exports.computeFirewallPolicyRule = exports.computeFirewallPolicyAssociation = exports.computeFirewallPolicy = exports.computeFirewall = exports.computeExternalVpnGateway = exports.computeDiskResourcePolicyAttachment = exports.computeDiskIamPolicy = exports.computeDiskIamMember = exports.computeDiskIamBinding = exports.computeDiskAsyncReplication = exports.computeDisk = exports.computeBackendServiceSignedUrlKey = exports.computeBackendService = exports.computeBackendBucketSignedUrlKey = void 0;
exports.computeSnapshotIamBinding = exports.computeSnapshot = exports.computeSharedVpcServiceProject = exports.computeSharedVpcHostProject = exports.computeServiceAttachment = exports.computeSecurityPolicyRule = exports.computeSecurityPolicy = exports.computeRouterPeer = exports.computeRouterNatAddress = exports.computeRouterNat = exports.computeRouterInterface = exports.computeRouter = exports.computeRoute = exports.computeResourcePolicy = exports.computeResizeRequest = exports.computeReservation = exports.computeRegionUrlMap = exports.computeRegionTargetTcpProxy = exports.computeRegionTargetHttpsProxy = exports.computeRegionTargetHttpProxy = exports.computeRegionSslPolicy = exports.computeRegionSslCertificate = exports.computeRegionPerInstanceConfig = exports.computeRegionNetworkFirewallPolicyRule = exports.computeRegionNetworkFirewallPolicyAssociation = exports.computeRegionNetworkFirewallPolicy = exports.computeRegionNetworkEndpointGroup = exports.computeRegionNetworkEndpoint = exports.computeRegionInstanceTemplate = exports.computeRegionInstanceGroupManager = exports.computeRegionHealthCheck = exports.computeRegionDiskResourcePolicyAttachment = exports.computeRegionDiskIamPolicy = exports.computeRegionDiskIamMember = exports.computeRegionDiskIamBinding = exports.computeRegionDisk = exports.computeRegionCommitment = exports.computeRegionBackendService = exports.computeRegionAutoscaler = exports.computePublicDelegatedPrefix = exports.computePublicAdvertisedPrefix = exports.computeProjectMetadataItem = exports.computeProjectMetadata = exports.computeProjectDefaultNetworkTier = exports.computeProjectCloudArmorTier = exports.computePerInstanceConfig = exports.computePacketMirroring = exports.computeNodeTemplate = exports.computeNodeGroup = exports.computeNetworkPeeringRoutesConfig = void 0;
exports.dataCatalogTaxonomyIamPolicy = exports.dataCatalogTaxonomyIamMember = exports.dataCatalogTaxonomyIamBinding = exports.dataCatalogTaxonomy = exports.dataCatalogTagTemplateIamPolicy = exports.dataCatalogTagTemplateIamMember = exports.dataCatalogTagTemplateIamBinding = exports.dataCatalogTagTemplate = exports.dataCatalogTag = exports.dataCatalogPolicyTagIamPolicy = exports.dataCatalogPolicyTagIamMember = exports.dataCatalogPolicyTagIamBinding = exports.dataCatalogPolicyTag = exports.dataCatalogEntryGroupIamPolicy = exports.dataCatalogEntryGroupIamMember = exports.dataCatalogEntryGroupIamBinding = exports.dataCatalogEntryGroup = exports.dataCatalogEntry = exports.containerRegistry = exports.containerNodePool = exports.containerCluster = exports.containerAzureNodePool = exports.containerAzureCluster = exports.containerAzureClient = exports.containerAwsNodePool = exports.containerAwsCluster = exports.containerAttachedCluster = exports.containerAnalysisOccurrence = exports.containerAnalysisNoteIamPolicy = exports.containerAnalysisNoteIamMember = exports.containerAnalysisNoteIamBinding = exports.containerAnalysisNote = exports.computeVpnTunnel = exports.computeVpnGateway = exports.computeUrlMap = exports.computeTargetTcpProxy = exports.computeTargetSslProxy = exports.computeTargetPool = exports.computeTargetInstance = exports.computeTargetHttpsProxy = exports.computeTargetHttpProxy = exports.computeTargetGrpcProxy = exports.computeSubnetworkIamPolicy = exports.computeSubnetworkIamMember = exports.computeSubnetworkIamBinding = exports.computeSubnetwork = exports.computeSslPolicy = exports.computeSslCertificate = exports.computeSnapshotIamPolicy = exports.computeSnapshotIamMember = void 0;
exports.dataprocAutoscalingPolicyIamPolicy = exports.dataprocAutoscalingPolicyIamMember = exports.dataprocAutoscalingPolicyIamBinding = exports.dataprocAutoscalingPolicy = exports.dataplexZoneIamPolicy = exports.dataplexZoneIamMember = exports.dataplexZoneIamBinding = exports.dataplexZone = exports.dataplexTaskIamPolicy = exports.dataplexTaskIamMember = exports.dataplexTaskIamBinding = exports.dataplexTask = exports.dataplexLakeIamPolicy = exports.dataplexLakeIamMember = exports.dataplexLakeIamBinding = exports.dataplexLake = exports.dataplexEntryTypeIamPolicy = exports.dataplexEntryTypeIamMember = exports.dataplexEntryTypeIamBinding = exports.dataplexEntryType = exports.dataplexEntryGroupIamPolicy = exports.dataplexEntryGroupIamMember = exports.dataplexEntryGroupIamBinding = exports.dataplexEntryGroup = exports.dataplexDatascanIamPolicy = exports.dataplexDatascanIamMember = exports.dataplexDatascanIamBinding = exports.dataplexDatascan = exports.dataplexAssetIamPolicy = exports.dataplexAssetIamMember = exports.dataplexAssetIamBinding = exports.dataplexAsset = exports.dataplexAspectTypeIamPolicy = exports.dataplexAspectTypeIamMember = exports.dataplexAspectTypeIamBinding = exports.dataplexAspectType = exports.dataflowJob = exports.databaseMigrationServicePrivateConnection = exports.databaseMigrationServiceMigrationJob = exports.databaseMigrationServiceConnectionProfile = exports.dataPipelinePipeline = exports.dataLossPreventionStoredInfoType = exports.dataLossPreventionJobTrigger = exports.dataLossPreventionInspectTemplate = exports.dataLossPreventionDiscoveryConfig = exports.dataLossPreventionDeidentifyTemplate = exports.dataFusionInstanceIamPolicy = exports.dataFusionInstanceIamMember = exports.dataFusionInstanceIamBinding = exports.dataFusionInstance = void 0;
exports.dnsRecordSet = exports.dnsPolicy = exports.dnsManagedZoneIamPolicy = exports.dnsManagedZoneIamMember = exports.dnsManagedZoneIamBinding = exports.dnsManagedZone = exports.discoveryEngineTargetSite = exports.discoveryEngineSearchEngine = exports.discoveryEngineSchema = exports.discoveryEngineDataStore = exports.discoveryEngineChatEngine = exports.dialogflowIntent = exports.dialogflowFulfillment = exports.dialogflowEntityType = exports.dialogflowCxWebhook = exports.dialogflowCxVersion = exports.dialogflowCxTestCase = exports.dialogflowCxSecuritySettings = exports.dialogflowCxPage = exports.dialogflowCxIntent = exports.dialogflowCxFlow = exports.dialogflowCxEnvironment = exports.dialogflowCxEntityType = exports.dialogflowCxAgent = exports.dialogflowAgent = exports.deploymentManagerDeployment = exports.datastreamStream = exports.datastreamPrivateConnection = exports.datastreamConnectionProfile = exports.dataprocWorkflowTemplate = exports.dataprocMetastoreServiceIamPolicy = exports.dataprocMetastoreServiceIamMember = exports.dataprocMetastoreServiceIamBinding = exports.dataprocMetastoreService = exports.dataprocMetastoreFederationIamPolicy = exports.dataprocMetastoreFederationIamMember = exports.dataprocMetastoreFederationIamBinding = exports.dataprocMetastoreFederation = exports.dataprocJobIamPolicy = exports.dataprocJobIamMember = exports.dataprocJobIamBinding = exports.dataprocJob = exports.dataprocGdcSparkApplication = exports.dataprocGdcServiceInstance = exports.dataprocGdcApplicationEnvironment = exports.dataprocClusterIamPolicy = exports.dataprocClusterIamMember = exports.dataprocClusterIamBinding = exports.dataprocCluster = exports.dataprocBatch = void 0;
exports.gkeBackupBackupPlanIamPolicy = exports.gkeBackupBackupPlanIamMember = exports.gkeBackupBackupPlanIamBinding = exports.gkeBackupBackupPlan = exports.folderOrganizationPolicy = exports.folderIamPolicy = exports.folderIamMember = exports.folderIamBinding = exports.folderIamAuditConfig = exports.folderAccessApprovalSettings = exports.folder = exports.firestoreIndex = exports.firestoreField = exports.firestoreDocument = exports.firestoreDatabase = exports.firestoreBackupSchedule = exports.firebaserulesRuleset = exports.firebaserulesRelease = exports.firebaseAppCheckServiceConfig = exports.firebaseAppCheckRecaptchaV3Config = exports.firebaseAppCheckRecaptchaEnterpriseConfig = exports.firebaseAppCheckPlayIntegrityConfig = exports.firebaseAppCheckDeviceCheckConfig = exports.firebaseAppCheckDebugToken = exports.firebaseAppCheckAppAttestConfig = exports.filestoreSnapshot = exports.filestoreInstance = exports.filestoreBackup = exports.eventarcTrigger = exports.eventarcGoogleChannelConfig = exports.eventarcChannel = exports.essentialContactsContact = exports.endpointsServiceIamPolicy = exports.endpointsServiceIamMember = exports.endpointsServiceIamBinding = exports.endpointsServiceConsumersIamPolicy = exports.endpointsServiceConsumersIamMember = exports.endpointsServiceConsumersIamBinding = exports.endpointsService = exports.edgenetworkSubnet = exports.edgenetworkNetwork = exports.edgecontainerVpnConnection = exports.edgecontainerNodePool = exports.edgecontainerCluster = exports.documentAiWarehouseLocation = exports.documentAiWarehouseDocumentSchema = exports.documentAiProcessorDefaultVersion = exports.documentAiProcessor = exports.dnsResponsePolicyRule = exports.dnsResponsePolicy = void 0;
exports.iamDenyPolicy = exports.iamAccessBoundaryPolicy = exports.healthcareWorkspace = exports.healthcarePipelineJob = exports.healthcareHl7V2StoreIamPolicy = exports.healthcareHl7V2StoreIamMember = exports.healthcareHl7V2StoreIamBinding = exports.healthcareHl7V2Store = exports.healthcareFhirStoreIamPolicy = exports.healthcareFhirStoreIamMember = exports.healthcareFhirStoreIamBinding = exports.healthcareFhirStore = exports.healthcareDicomStoreIamPolicy = exports.healthcareDicomStoreIamMember = exports.healthcareDicomStoreIamBinding = exports.healthcareDicomStore = exports.healthcareDatasetIamPolicy = exports.healthcareDatasetIamMember = exports.healthcareDatasetIamBinding = exports.healthcareDataset = exports.healthcareConsentStoreIamPolicy = exports.healthcareConsentStoreIamMember = exports.healthcareConsentStoreIamBinding = exports.healthcareConsentStore = exports.gkeonpremVmwareNodePool = exports.gkeonpremVmwareCluster = exports.gkeonpremBareMetalNodePool = exports.gkeonpremBareMetalCluster = exports.gkeonpremBareMetalAdminCluster = exports.gkeHubScopeRbacRoleBinding = exports.gkeHubScopeIamPolicy = exports.gkeHubScopeIamMember = exports.gkeHubScopeIamBinding = exports.gkeHubScope = exports.gkeHubNamespace = exports.gkeHubMembershipIamPolicy = exports.gkeHubMembershipIamMember = exports.gkeHubMembershipIamBinding = exports.gkeHubMembershipBinding = exports.gkeHubMembership = exports.gkeHubFleet = exports.gkeHubFeatureMembership = exports.gkeHubFeatureIamPolicy = exports.gkeHubFeatureIamMember = exports.gkeHubFeatureIamBinding = exports.gkeHubFeature = exports.gkeBackupRestorePlanIamPolicy = exports.gkeBackupRestorePlanIamMember = exports.gkeBackupRestorePlanIamBinding = exports.gkeBackupRestorePlan = void 0;
exports.identityPlatformTenantOauthIdpConfig = exports.identityPlatformTenantInboundSamlConfig = exports.identityPlatformTenantDefaultSupportedIdpConfig = exports.identityPlatformTenant = exports.identityPlatformOauthIdpConfig = exports.identityPlatformInboundSamlConfig = exports.identityPlatformDefaultSupportedIdpConfig = exports.identityPlatformConfig = exports.iapWebTypeComputeIamPolicy = exports.iapWebTypeComputeIamMember = exports.iapWebTypeComputeIamBinding = exports.iapWebTypeAppEngineIamPolicy = exports.iapWebTypeAppEngineIamMember = exports.iapWebTypeAppEngineIamBinding = exports.iapWebRegionBackendServiceIamPolicy = exports.iapWebRegionBackendServiceIamMember = exports.iapWebRegionBackendServiceIamBinding = exports.iapWebIamPolicy = exports.iapWebIamMember = exports.iapWebIamBinding = exports.iapWebBackendServiceIamPolicy = exports.iapWebBackendServiceIamMember = exports.iapWebBackendServiceIamBinding = exports.iapTunnelInstanceIamPolicy = exports.iapTunnelInstanceIamMember = exports.iapTunnelInstanceIamBinding = exports.iapTunnelIamPolicy = exports.iapTunnelIamMember = exports.iapTunnelIamBinding = exports.iapTunnelDestGroupIamPolicy = exports.iapTunnelDestGroupIamMember = exports.iapTunnelDestGroupIamBinding = exports.iapTunnelDestGroup = exports.iapSettings = exports.iapClient = exports.iapBrand = exports.iapAppEngineVersionIamPolicy = exports.iapAppEngineVersionIamMember = exports.iapAppEngineVersionIamBinding = exports.iapAppEngineServiceIamPolicy = exports.iapAppEngineServiceIamMember = exports.iapAppEngineServiceIamBinding = exports.iamWorkloadIdentityPoolProvider = exports.iamWorkloadIdentityPool = exports.iamWorkforcePoolProvider = exports.iamWorkforcePool = exports.iamProjectsPolicyBinding = exports.iamPrincipalAccessBoundaryPolicy = exports.iamOrganizationsPolicyBinding = exports.iamFoldersPolicyBinding = void 0;
exports.monitoringAlertPolicy = exports.mlEngineModel = exports.migrationCenterPreferenceSet = exports.migrationCenterGroup = exports.memorystoreInstance = exports.memcacheInstance = exports.managedKafkaTopic = exports.managedKafkaCluster = exports.lookerInstance = exports.loggingProjectSink = exports.loggingProjectExclusion = exports.loggingProjectBucketConfig = exports.loggingOrganizationSink = exports.loggingOrganizationSettings = exports.loggingOrganizationExclusion = exports.loggingOrganizationBucketConfig = exports.loggingMetric = exports.loggingLogViewIamPolicy = exports.loggingLogViewIamMember = exports.loggingLogViewIamBinding = exports.loggingLogView = exports.loggingLogScope = exports.loggingLinkedDataset = exports.loggingFolderSink = exports.loggingFolderSettings = exports.loggingFolderExclusion = exports.loggingFolderBucketConfig = exports.loggingBillingAccountSink = exports.loggingBillingAccountExclusion = exports.loggingBillingAccountBucketConfig = exports.kmsSecretCiphertext = exports.kmsKeyRingImportJob = exports.kmsKeyRingIamPolicy = exports.kmsKeyRingIamMember = exports.kmsKeyRingIamBinding = exports.kmsKeyRing = exports.kmsEkmConnectionIamPolicy = exports.kmsEkmConnectionIamMember = exports.kmsEkmConnectionIamBinding = exports.kmsEkmConnection = exports.kmsCryptoKeyVersion = exports.kmsCryptoKeyIamPolicy = exports.kmsCryptoKeyIamMember = exports.kmsCryptoKeyIamBinding = exports.kmsCryptoKey = exports.integrationsClient = exports.integrationsAuthConfig = exports.integrationConnectorsManagedZone = exports.integrationConnectorsEndpointAttachment = exports.integrationConnectorsConnection = void 0;
exports.notebooksInstance = exports.notebooksEnvironment = exports.networkServicesLbTrafficExtension = exports.networkServicesLbRouteExtension = exports.networkServicesGateway = exports.networkServicesEdgeCacheService = exports.networkServicesEdgeCacheOrigin = exports.networkServicesEdgeCacheKeyset = exports.networkServicesAuthzExtension = exports.networkSecurityUrlLists = exports.networkSecurityTlsInspectionPolicy = exports.networkSecurityServerTlsPolicy = exports.networkSecuritySecurityProfileGroup = exports.networkSecuritySecurityProfile = exports.networkSecurityGatewaySecurityPolicyRule = exports.networkSecurityGatewaySecurityPolicy = exports.networkSecurityFirewallEndpointAssociation = exports.networkSecurityFirewallEndpoint = exports.networkSecurityClientTlsPolicy = exports.networkSecurityAuthzPolicy = exports.networkSecurityAddressGroupIamPolicy = exports.networkSecurityAddressGroupIamMember = exports.networkSecurityAddressGroupIamBinding = exports.networkSecurityAddressGroup = exports.networkManagementConnectivityTest = exports.networkConnectivitySpoke = exports.networkConnectivityServiceConnectionPolicy = exports.networkConnectivityRegionalEndpoint = exports.networkConnectivityPolicyBasedRoute = exports.networkConnectivityInternalRange = exports.networkConnectivityHub = exports.networkConnectivityGroup = exports.netappVolumeSnapshot = exports.netappVolumeReplication = exports.netappVolume = exports.netappStoragePool = exports.netappKmsconfig = exports.netappBackupVault = exports.netappBackupPolicy = exports.netappBackup = exports.netappActiveDirectory = exports.monitoringUptimeCheckConfig = exports.monitoringSlo = exports.monitoringService = exports.monitoringNotificationChannel = exports.monitoringMonitoredProject = exports.monitoringMetricDescriptor = exports.monitoringGroup = exports.monitoringDashboard = exports.monitoringCustomService = void 0;
exports.pubsubLiteSubscription = exports.pubsubLiteReservation = exports.publicCaExternalAccountKey = exports.projectUsageExportBucket = exports.projectService = exports.projectOrganizationPolicy = exports.projectIamPolicy = exports.projectIamMemberRemove = exports.projectIamMember = exports.projectIamCustomRole = exports.projectIamBinding = exports.projectIamAuditConfig = exports.projectDefaultServiceAccounts = exports.projectAccessApprovalSettings = exports.project = exports.privilegedAccessManagerEntitlement = exports.privatecaCertificateTemplateIamPolicy = exports.privatecaCertificateTemplateIamMember = exports.privatecaCertificateTemplateIamBinding = exports.privatecaCertificateTemplate = exports.privatecaCertificateAuthority = exports.privatecaCertificate = exports.privatecaCaPoolIamPolicy = exports.privatecaCaPoolIamMember = exports.privatecaCaPoolIamBinding = exports.privatecaCaPool = exports.parallelstoreInstance = exports.osLoginSshPublicKey = exports.osConfigPatchDeployment = exports.osConfigOsPolicyAssignment = exports.organizationPolicy = exports.organizationIamPolicy = exports.organizationIamMember = exports.organizationIamCustomRole = exports.organizationIamBinding = exports.organizationIamAuditConfig = exports.organizationAccessApprovalSettings = exports.orgPolicyPolicy = exports.orgPolicyCustomConstraint = exports.oracleDatabaseCloudVmCluster = exports.oracleDatabaseCloudExadataInfrastructure = exports.oracleDatabaseAutonomousDatabase = exports.notebooksRuntimeIamPolicy = exports.notebooksRuntimeIamMember = exports.notebooksRuntimeIamBinding = exports.notebooksRuntime = exports.notebooksLocation = exports.notebooksInstanceIamPolicy = exports.notebooksInstanceIamMember = exports.notebooksInstanceIamBinding = void 0;
exports.sccV2ProjectSccBigQueryExport = exports.sccV2ProjectNotificationConfig = exports.sccV2ProjectMuteConfig = exports.sccV2OrganizationSourceIamPolicy = exports.sccV2OrganizationSourceIamMember = exports.sccV2OrganizationSourceIamBinding = exports.sccV2OrganizationSource = exports.sccV2OrganizationSccBigQueryExports = exports.sccV2OrganizationSccBigQueryExport = exports.sccV2OrganizationNotificationConfig = exports.sccV2OrganizationMuteConfig = exports.sccV2FolderSccBigQueryExport = exports.sccV2FolderNotificationConfig = exports.sccV2FolderMuteConfig = exports.sccSourceIamPolicy = exports.sccSourceIamMember = exports.sccSourceIamBinding = exports.sccSource = exports.sccProjectSccBigQueryExport = exports.sccProjectNotificationConfig = exports.sccProjectCustomModule = exports.sccOrganizationSccBigQueryExport = exports.sccOrganizationCustomModule = exports.sccNotificationConfig = exports.sccMuteConfig = exports.sccManagementProjectSecurityHealthAnalyticsCustomModule = exports.sccManagementOrganizationSecurityHealthAnalyticsCustomModule = exports.sccManagementOrganizationEventThreatDetectionCustomModule = exports.sccManagementFolderSecurityHealthAnalyticsCustomModule = exports.sccFolderSccBigQueryExport = exports.sccFolderNotificationConfig = exports.sccFolderCustomModule = exports.sccEventThreatDetectionCustomModule = exports.resourceManagerLien = exports.redisInstance = exports.redisCluster = exports.recaptchaEnterpriseKey = exports.pubsubTopicIamPolicy = exports.pubsubTopicIamMember = exports.pubsubTopicIamBinding = exports.pubsubTopic = exports.pubsubSubscriptionIamPolicy = exports.pubsubSubscriptionIamMember = exports.pubsubSubscriptionIamBinding = exports.pubsubSubscription = exports.pubsubSchemaIamPolicy = exports.pubsubSchemaIamMember = exports.pubsubSchemaIamBinding = exports.pubsubSchema = exports.pubsubLiteTopic = void 0;
exports.sqlUser = exports.sqlSslCert = exports.sqlSourceRepresentationInstance = exports.sqlDatabaseInstance = exports.sqlDatabase = exports.spannerInstanceIamPolicy = exports.spannerInstanceIamMember = exports.spannerInstanceIamBinding = exports.spannerInstanceConfig = exports.spannerInstance = exports.spannerDatabaseIamPolicy = exports.spannerDatabaseIamMember = exports.spannerDatabaseIamBinding = exports.spannerDatabase = exports.spannerBackupSchedule = exports.sourcerepoRepositoryIamPolicy = exports.sourcerepoRepositoryIamMember = exports.sourcerepoRepositoryIamBinding = exports.sourcerepoRepository = exports.siteVerificationWebResource = exports.siteVerificationOwner = exports.serviceNetworkingVpcServiceControls = exports.serviceNetworkingPeeredDnsDomain = exports.serviceNetworkingConnection = exports.serviceAccountKey = exports.serviceAccountIamPolicy = exports.serviceAccountIamMember = exports.serviceAccountIamBinding = exports.serviceAccount = exports.securityposturePostureDeployment = exports.securityposturePosture = exports.secureSourceManagerRepositoryIamPolicy = exports.secureSourceManagerRepositoryIamMember = exports.secureSourceManagerRepositoryIamBinding = exports.secureSourceManagerRepository = exports.secureSourceManagerInstanceIamPolicy = exports.secureSourceManagerInstanceIamMember = exports.secureSourceManagerInstanceIamBinding = exports.secureSourceManagerInstance = exports.secureSourceManagerBranchRule = exports.secretManagerSecretVersion = exports.secretManagerSecretIamPolicy = exports.secretManagerSecretIamMember = exports.secretManagerSecretIamBinding = exports.secretManagerSecret = exports.secretManagerRegionalSecretVersion = exports.secretManagerRegionalSecretIamPolicy = exports.secretManagerRegionalSecretIamMember = exports.secretManagerRegionalSecretIamBinding = exports.secretManagerRegionalSecret = void 0;
exports.vmwareengineExternalAddress = exports.vmwareengineExternalAccessRule = exports.vmwareengineCluster = exports.vertexAiTensorboard = exports.vertexAiIndexEndpointDeployedIndex = exports.vertexAiIndexEndpoint = exports.vertexAiIndex = exports.vertexAiFeaturestoreEntitytypeFeature = exports.vertexAiFeaturestoreEntitytype = exports.vertexAiFeaturestore = exports.vertexAiFeatureOnlineStoreFeatureview = exports.vertexAiFeatureOnlineStore = exports.vertexAiFeatureGroupFeature = exports.vertexAiFeatureGroup = exports.vertexAiEndpoint = exports.vertexAiDeploymentResourcePool = exports.vertexAiDataset = exports.transcoderJobTemplate = exports.transcoderJob = exports.tpuNode = exports.tagsTagValueIamPolicy = exports.tagsTagValueIamMember = exports.tagsTagValueIamBinding = exports.tagsTagValue = exports.tagsTagKeyIamPolicy = exports.tagsTagKeyIamMember = exports.tagsTagKeyIamBinding = exports.tagsTagKey = exports.tagsTagBinding = exports.tagsLocationTagBinding = exports.storageTransferJob = exports.storageTransferAgentPool = exports.storageObjectAcl = exports.storageObjectAccessControl = exports.storageNotification = exports.storageManagedFolderIamPolicy = exports.storageManagedFolderIamMember = exports.storageManagedFolderIamBinding = exports.storageManagedFolder = exports.storageInsightsReportConfig = exports.storageHmacKey = exports.storageDefaultObjectAcl = exports.storageDefaultObjectAccessControl = exports.storageBucketObject = exports.storageBucketIamPolicy = exports.storageBucketIamMember = exports.storageBucketIamBinding = exports.storageBucketAcl = exports.storageBucketAccessControl = exports.storageBucket = void 0;
exports.dataGoogleClientOpenidUserinfo = exports.dataGoogleClientConfig = exports.dataGoogleCertificateManagerCertificates = exports.dataGoogleCertificateManagerCertificateMap = exports.dataGoogleBinaryAuthorizationAttestorIamPolicy = exports.dataGoogleBillingAccountIamPolicy = exports.dataGoogleBillingAccount = exports.dataGoogleBigtableTableIamPolicy = exports.dataGoogleBigtableInstanceIamPolicy = exports.dataGoogleBigqueryTables = exports.dataGoogleBigqueryTableIamPolicy = exports.dataGoogleBigqueryDefaultServiceAccount = exports.dataGoogleBigqueryDatasetIamPolicy = exports.dataGoogleBigqueryDataset = exports.dataGoogleBigqueryDatapolicyDataPolicyIamPolicy = exports.dataGoogleBigqueryConnectionIamPolicy = exports.dataGoogleBigqueryAnalyticsHubListingIamPolicy = exports.dataGoogleBigqueryAnalyticsHubDataExchangeIamPolicy = exports.dataGoogleBeyondcorpAppGateway = exports.dataGoogleBeyondcorpAppConnector = exports.dataGoogleBeyondcorpAppConnection = exports.dataGoogleBackupDrBackupVault = exports.dataGoogleArtifactRegistryRepositoryIamPolicy = exports.dataGoogleArtifactRegistryRepository = exports.dataGoogleArtifactRegistryLocations = exports.dataGoogleArtifactRegistryDockerImage = exports.dataGoogleApphubDiscoveredWorkload = exports.dataGoogleApphubDiscoveredService = exports.dataGoogleApphubApplication = exports.dataGoogleAppEngineDefaultServiceAccount = exports.dataGoogleApigeeEnvironmentIamPolicy = exports.dataGoogleAlloydbSupportedDatabaseFlags = exports.dataGoogleAlloydbLocations = exports.dataGoogleActiveFolder = exports.dataGoogleAccessContextManagerAccessPolicyIamPolicy = exports.dataGoogleAccessContextManagerAccessPolicy = exports.dataGoogleAccessApprovalProjectServiceAccount = exports.dataGoogleAccessApprovalOrganizationServiceAccount = exports.dataGoogleAccessApprovalFolderServiceAccount = exports.workflowsWorkflow = exports.workbenchInstanceIamPolicy = exports.workbenchInstanceIamMember = exports.workbenchInstanceIamBinding = exports.workbenchInstance = exports.vpcAccessConnector = exports.vmwareengineSubnet = exports.vmwareenginePrivateCloud = exports.vmwareengineNetworkPolicy = exports.vmwareengineNetworkPeering = exports.vmwareengineNetwork = void 0;
exports.dataGoogleComputeInstanceTemplate = exports.dataGoogleComputeInstanceSerialPort = exports.dataGoogleComputeInstanceIamPolicy = exports.dataGoogleComputeInstanceGuestAttributes = exports.dataGoogleComputeInstanceGroupManager = exports.dataGoogleComputeInstanceGroup = exports.dataGoogleComputeInstance = exports.dataGoogleComputeImageIamPolicy = exports.dataGoogleComputeImage = exports.dataGoogleComputeHealthCheck = exports.dataGoogleComputeHaVpnGateway = exports.dataGoogleComputeGlobalForwardingRule = exports.dataGoogleComputeGlobalAddress = exports.dataGoogleComputeForwardingRules = exports.dataGoogleComputeForwardingRule = exports.dataGoogleComputeDiskIamPolicy = exports.dataGoogleComputeDisk = exports.dataGoogleComputeDefaultServiceAccount = exports.dataGoogleComputeBackendService = exports.dataGoogleComputeBackendBucket = exports.dataGoogleComputeAddresses = exports.dataGoogleComputeAddress = exports.dataGoogleComposerUserWorkloadsSecret = exports.dataGoogleComposerUserWorkloadsConfigMap = exports.dataGoogleComposerImageVersions = exports.dataGoogleComposerEnvironment = exports.dataGoogleCloudfunctionsFunctionIamPolicy = exports.dataGoogleCloudfunctionsFunction = exports.dataGoogleCloudfunctions2FunctionIamPolicy = exports.dataGoogleCloudfunctions2Function = exports.dataGoogleClouddeployTargetIamPolicy = exports.dataGoogleClouddeployDeliveryPipelineIamPolicy = exports.dataGoogleClouddeployCustomTargetTypeIamPolicy = exports.dataGoogleCloudbuildv2ConnectionIamPolicy = exports.dataGoogleCloudbuildTrigger = exports.dataGoogleCloudTasksQueueIamPolicy = exports.dataGoogleCloudRunV2ServiceIamPolicy = exports.dataGoogleCloudRunV2Service = exports.dataGoogleCloudRunV2JobIamPolicy = exports.dataGoogleCloudRunV2Job = exports.dataGoogleCloudRunServiceIamPolicy = exports.dataGoogleCloudRunService = exports.dataGoogleCloudRunLocations = exports.dataGoogleCloudQuotasQuotaInfos = exports.dataGoogleCloudQuotasQuotaInfo = exports.dataGoogleCloudIdentityGroups = exports.dataGoogleCloudIdentityGroupTransitiveMemberships = exports.dataGoogleCloudIdentityGroupMemberships = exports.dataGoogleCloudIdentityGroupLookup = exports.dataGoogleCloudAssetSearchAllResources = void 0;
exports.dataGoogleDataplexLakeIamPolicy = exports.dataGoogleDataplexEntryTypeIamPolicy = exports.dataGoogleDataplexEntryGroupIamPolicy = exports.dataGoogleDataplexDatascanIamPolicy = exports.dataGoogleDataplexAssetIamPolicy = exports.dataGoogleDataplexAspectTypeIamPolicy = exports.dataGoogleDataFusionInstanceIamPolicy = exports.dataGoogleDataCatalogTaxonomyIamPolicy = exports.dataGoogleDataCatalogTagTemplateIamPolicy = exports.dataGoogleDataCatalogPolicyTagIamPolicy = exports.dataGoogleDataCatalogEntryGroupIamPolicy = exports.dataGoogleContainerRegistryRepository = exports.dataGoogleContainerRegistryImage = exports.dataGoogleContainerEngineVersions = exports.dataGoogleContainerCluster = exports.dataGoogleContainerAzureVersions = exports.dataGoogleContainerAwsVersions = exports.dataGoogleContainerAttachedVersions = exports.dataGoogleContainerAttachedInstallManifest = exports.dataGoogleContainerAnalysisNoteIamPolicy = exports.dataGoogleComputeZones = exports.dataGoogleComputeVpnGateway = exports.dataGoogleComputeSubnetworks = exports.dataGoogleComputeSubnetworkIamPolicy = exports.dataGoogleComputeSubnetwork = exports.dataGoogleComputeSslPolicy = exports.dataGoogleComputeSslCertificate = exports.dataGoogleComputeSnapshotIamPolicy = exports.dataGoogleComputeSnapshot = exports.dataGoogleComputeSecurityPolicy = exports.dataGoogleComputeRouterStatus = exports.dataGoogleComputeRouterNat = exports.dataGoogleComputeRouter = exports.dataGoogleComputeResourcePolicy = exports.dataGoogleComputeReservation = exports.dataGoogleComputeRegions = exports.dataGoogleComputeRegionSslCertificate = exports.dataGoogleComputeRegionNetworkEndpointGroup = exports.dataGoogleComputeRegionInstanceTemplate = exports.dataGoogleComputeRegionInstanceGroupManager = exports.dataGoogleComputeRegionInstanceGroup = exports.dataGoogleComputeRegionDiskIamPolicy = exports.dataGoogleComputeRegionDisk = exports.dataGoogleComputeNodeTypes = exports.dataGoogleComputeNetworks = exports.dataGoogleComputeNetworkPeering = exports.dataGoogleComputeNetworkEndpointGroup = exports.dataGoogleComputeNetwork = exports.dataGoogleComputeMachineTypes = exports.dataGoogleComputeLbIpRanges = void 0;
exports.dataGoogleKmsCryptoKeyVersion = exports.dataGoogleKmsCryptoKeyLatestVersion = exports.dataGoogleKmsCryptoKeyIamPolicy = exports.dataGoogleKmsCryptoKey = exports.dataGoogleIapWebTypeComputeIamPolicy = exports.dataGoogleIapWebTypeAppEngineIamPolicy = exports.dataGoogleIapWebRegionBackendServiceIamPolicy = exports.dataGoogleIapWebIamPolicy = exports.dataGoogleIapWebBackendServiceIamPolicy = exports.dataGoogleIapTunnelInstanceIamPolicy = exports.dataGoogleIapTunnelIamPolicy = exports.dataGoogleIapTunnelDestGroupIamPolicy = exports.dataGoogleIapClient = exports.dataGoogleIapAppEngineVersionIamPolicy = exports.dataGoogleIapAppEngineServiceIamPolicy = exports.dataGoogleIamTestablePermissions = exports.dataGoogleIamRole = exports.dataGoogleIamPolicy = exports.dataGoogleHealthcareHl7V2StoreIamPolicy = exports.dataGoogleHealthcareFhirStoreIamPolicy = exports.dataGoogleHealthcareDicomStoreIamPolicy = exports.dataGoogleHealthcareDatasetIamPolicy = exports.dataGoogleHealthcareConsentStoreIamPolicy = exports.dataGoogleGkeHubScopeIamPolicy = exports.dataGoogleGkeHubMembershipIamPolicy = exports.dataGoogleGkeHubMembershipBinding = exports.dataGoogleGkeHubFeatureIamPolicy = exports.dataGoogleGkeBackupRestorePlanIamPolicy = exports.dataGoogleGkeBackupBackupPlanIamPolicy = exports.dataGoogleFolders = exports.dataGoogleFolderOrganizationPolicy = exports.dataGoogleFolderIamPolicy = exports.dataGoogleFolder = exports.dataGoogleFilestoreInstance = exports.dataGoogleEndpointsServiceIamPolicy = exports.dataGoogleEndpointsServiceConsumersIamPolicy = exports.dataGoogleDnsRecordSet = exports.dataGoogleDnsManagedZones = exports.dataGoogleDnsManagedZoneIamPolicy = exports.dataGoogleDnsManagedZone = exports.dataGoogleDnsKeys = exports.dataGoogleDatastreamStaticIps = exports.dataGoogleDataprocMetastoreServiceIamPolicy = exports.dataGoogleDataprocMetastoreService = exports.dataGoogleDataprocMetastoreFederationIamPolicy = exports.dataGoogleDataprocJobIamPolicy = exports.dataGoogleDataprocClusterIamPolicy = exports.dataGoogleDataprocAutoscalingPolicyIamPolicy = exports.dataGoogleDataplexZoneIamPolicy = exports.dataGoogleDataplexTaskIamPolicy = void 0;
exports.dataGoogleSccSourceIamPolicy = exports.dataGoogleRedisInstance = exports.dataGooglePubsubTopicIamPolicy = exports.dataGooglePubsubTopic = exports.dataGooglePubsubSubscriptionIamPolicy = exports.dataGooglePubsubSubscription = exports.dataGooglePubsubSchemaIamPolicy = exports.dataGoogleProjects = exports.dataGoogleProjectService = exports.dataGoogleProjectOrganizationPolicy = exports.dataGoogleProjectIamPolicy = exports.dataGoogleProject = exports.dataGooglePrivilegedAccessManagerEntitlement = exports.dataGooglePrivatecaCertificateTemplateIamPolicy = exports.dataGooglePrivatecaCertificateAuthority = exports.dataGooglePrivatecaCaPoolIamPolicy = exports.dataGoogleOrganizationIamPolicy = exports.dataGoogleOrganization = exports.dataGoogleOracleDatabaseDbServers = exports.dataGoogleOracleDatabaseDbNodes = exports.dataGoogleOracleDatabaseCloudVmClusters = exports.dataGoogleOracleDatabaseCloudVmCluster = exports.dataGoogleOracleDatabaseCloudExadataInfrastructures = exports.dataGoogleOracleDatabaseCloudExadataInfrastructure = exports.dataGoogleOracleDatabaseAutonomousDatabases = exports.dataGoogleOracleDatabaseAutonomousDatabase = exports.dataGoogleNotebooksRuntimeIamPolicy = exports.dataGoogleNotebooksInstanceIamPolicy = exports.dataGoogleNetworkSecurityAddressGroupIamPolicy = exports.dataGoogleNetblockIpRanges = exports.dataGoogleMonitoringUptimeCheckIps = exports.dataGoogleMonitoringNotificationChannel = exports.dataGoogleMonitoringMeshIstioService = exports.dataGoogleMonitoringIstioCanonicalService = exports.dataGoogleMonitoringClusterIstioService = exports.dataGoogleMonitoringAppEngineService = exports.dataGoogleLoggingSink = exports.dataGoogleLoggingProjectSettings = exports.dataGoogleLoggingProjectCmekSettings = exports.dataGoogleLoggingOrganizationSettings = exports.dataGoogleLoggingLogViewIamPolicy = exports.dataGoogleLoggingFolderSettings = exports.dataGoogleKmsSecretCiphertext = exports.dataGoogleKmsSecret = exports.dataGoogleKmsKeyRings = exports.dataGoogleKmsKeyRingIamPolicy = exports.dataGoogleKmsKeyRing = exports.dataGoogleKmsEkmConnectionIamPolicy = exports.dataGoogleKmsCryptoKeys = exports.dataGoogleKmsCryptoKeyVersions = void 0;
exports.dataGoogleTagsTagValue = exports.dataGoogleTagsTagKeys = exports.dataGoogleTagsTagKeyIamPolicy = exports.dataGoogleTagsTagKey = exports.dataGoogleStorageTransferProjectServiceAccount = exports.dataGoogleStorageProjectServiceAccount = exports.dataGoogleStorageObjectSignedUrl = exports.dataGoogleStorageManagedFolderIamPolicy = exports.dataGoogleStorageBuckets = exports.dataGoogleStorageBucketObjects = exports.dataGoogleStorageBucketObjectContent = exports.dataGoogleStorageBucketObject = exports.dataGoogleStorageBucketIamPolicy = exports.dataGoogleStorageBucket = exports.dataGoogleSqlTiers = exports.dataGoogleSqlDatabases = exports.dataGoogleSqlDatabaseInstances = exports.dataGoogleSqlDatabaseInstanceLatestRecoveryTime = exports.dataGoogleSqlDatabaseInstance = exports.dataGoogleSqlDatabase = exports.dataGoogleSqlCaCerts = exports.dataGoogleSqlBackupRun = exports.dataGoogleSpannerInstanceIamPolicy = exports.dataGoogleSpannerInstance = exports.dataGoogleSpannerDatabaseIamPolicy = exports.dataGoogleSpannerDatabase = exports.dataGoogleSourcerepoRepositoryIamPolicy = exports.dataGoogleSourcerepoRepository = exports.dataGoogleSiteVerificationToken = exports.dataGoogleServiceNetworkingPeeredDnsDomain = exports.dataGoogleServiceAccounts = exports.dataGoogleServiceAccountKey = exports.dataGoogleServiceAccountJwt = exports.dataGoogleServiceAccountIdToken = exports.dataGoogleServiceAccountIamPolicy = exports.dataGoogleServiceAccountAccessToken = exports.dataGoogleServiceAccount = exports.dataGoogleSecureSourceManagerRepositoryIamPolicy = exports.dataGoogleSecureSourceManagerInstanceIamPolicy = exports.dataGoogleSecretManagerSecrets = exports.dataGoogleSecretManagerSecretVersionAccess = exports.dataGoogleSecretManagerSecretVersion = exports.dataGoogleSecretManagerSecretIamPolicy = exports.dataGoogleSecretManagerSecret = exports.dataGoogleSecretManagerRegionalSecrets = exports.dataGoogleSecretManagerRegionalSecretVersionAccess = exports.dataGoogleSecretManagerRegionalSecretVersion = exports.dataGoogleSecretManagerRegionalSecretIamPolicy = exports.dataGoogleSecretManagerRegionalSecret = exports.dataGoogleSccV2OrganizationSourceIamPolicy = void 0;
exports.provider = exports.dataGoogleWorkbenchInstanceIamPolicy = exports.dataGoogleVpcAccessConnector = exports.dataGoogleVmwareengineVcenterCredentials = exports.dataGoogleVmwareengineSubnet = exports.dataGoogleVmwareenginePrivateCloud = exports.dataGoogleVmwareengineNsxCredentials = exports.dataGoogleVmwareengineNetworkPolicy = exports.dataGoogleVmwareengineNetworkPeering = exports.dataGoogleVmwareengineNetwork = exports.dataGoogleVmwareengineExternalAddress = exports.dataGoogleVmwareengineExternalAccessRule = exports.dataGoogleVmwareengineCluster = exports.dataGoogleVertexAiIndex = exports.dataGoogleTpuTensorflowVersions = exports.dataGoogleTagsTagValues = exports.dataGoogleTagsTagValueIamPolicy = void 0;
// generated by cdktf get
exports.accessContextManagerAccessLevel = require("./access-context-manager-access-level");
exports.accessContextManagerAccessLevelCondition = require("./access-context-manager-access-level-condition");
exports.accessContextManagerAccessLevels = require("./access-context-manager-access-levels");
exports.accessContextManagerAccessPolicy = require("./access-context-manager-access-policy");
exports.accessContextManagerAccessPolicyIamBinding = require("./access-context-manager-access-policy-iam-binding");
exports.accessContextManagerAccessPolicyIamMember = require("./access-context-manager-access-policy-iam-member");
exports.accessContextManagerAccessPolicyIamPolicy = require("./access-context-manager-access-policy-iam-policy");
exports.accessContextManagerAuthorizedOrgsDesc = require("./access-context-manager-authorized-orgs-desc");
exports.accessContextManagerEgressPolicy = require("./access-context-manager-egress-policy");
exports.accessContextManagerGcpUserAccessBinding = require("./access-context-manager-gcp-user-access-binding");
exports.accessContextManagerIngressPolicy = require("./access-context-manager-ingress-policy");
exports.accessContextManagerServicePerimeter = require("./access-context-manager-service-perimeter");
exports.accessContextManagerServicePerimeterDryRunEgressPolicy = require("./access-context-manager-service-perimeter-dry-run-egress-policy");
exports.accessContextManagerServicePerimeterDryRunIngressPolicy = require("./access-context-manager-service-perimeter-dry-run-ingress-policy");
exports.accessContextManagerServicePerimeterDryRunResource = require("./access-context-manager-service-perimeter-dry-run-resource");
exports.accessContextManagerServicePerimeterEgressPolicy = require("./access-context-manager-service-perimeter-egress-policy");
exports.accessContextManagerServicePerimeterIngressPolicy = require("./access-context-manager-service-perimeter-ingress-policy");
exports.accessContextManagerServicePerimeterResource = require("./access-context-manager-service-perimeter-resource");
exports.accessContextManagerServicePerimeters = require("./access-context-manager-service-perimeters");
exports.activeDirectoryDomain = require("./active-directory-domain");
exports.activeDirectoryDomainTrust = require("./active-directory-domain-trust");
exports.alloydbBackup = require("./alloydb-backup");
exports.alloydbCluster = require("./alloydb-cluster");
exports.alloydbInstance = require("./alloydb-instance");
exports.alloydbUser = require("./alloydb-user");
exports.apigeeAddonsConfig = require("./apigee-addons-config");
exports.apigeeApi = require("./apigee-api");
exports.apigeeAppGroup = require("./apigee-app-group");
exports.apigeeDeveloper = require("./apigee-developer");
exports.apigeeEndpointAttachment = require("./apigee-endpoint-attachment");
exports.apigeeEnvKeystore = require("./apigee-env-keystore");
exports.apigeeEnvReferences = require("./apigee-env-references");
exports.apigeeEnvgroup = require("./apigee-envgroup");
exports.apigeeEnvgroupAttachment = require("./apigee-envgroup-attachment");
exports.apigeeEnvironment = require("./apigee-environment");
exports.apigeeEnvironmentIamBinding = require("./apigee-environment-iam-binding");
exports.apigeeEnvironmentIamMember = require("./apigee-environment-iam-member");
exports.apigeeEnvironmentIamPolicy = require("./apigee-environment-iam-policy");
exports.apigeeEnvironmentKeyvaluemaps = require("./apigee-environment-keyvaluemaps");
exports.apigeeEnvironmentKeyvaluemapsEntries = require("./apigee-environment-keyvaluemaps-entries");
exports.apigeeFlowhook = require("./apigee-flowhook");
exports.apigeeInstance = require("./apigee-instance");
exports.apigeeInstanceAttachment = require("./apigee-instance-attachment");
exports.apigeeKeystoresAliasesKeyCertFile = require("./apigee-keystores-aliases-key-cert-file");
exports.apigeeKeystoresAliasesPkcs12 = require("./apigee-keystores-aliases-pkcs12");
exports.apigeeKeystoresAliasesSelfSignedCert = require("./apigee-keystores-aliases-self-signed-cert");
exports.apigeeNatAddress = require("./apigee-nat-address");
exports.apigeeOrganization = require("./apigee-organization");
exports.apigeeSharedflow = require("./apigee-sharedflow");
exports.apigeeSharedflowDeployment = require("./apigee-sharedflow-deployment");
exports.apigeeSyncAuthorization = require("./apigee-sync-authorization");
exports.apigeeTargetServer = require("./apigee-target-server");
exports.apikeysKey = require("./apikeys-key");
exports.appEngineApplication = require("./app-engine-application");
exports.appEngineApplicationUrlDispatchRules = require("./app-engine-application-url-dispatch-rules");
exports.appEngineDomainMapping = require("./app-engine-domain-mapping");
exports.appEngineFirewallRule = require("./app-engine-firewall-rule");
exports.appEngineFlexibleAppVersion = require("./app-engine-flexible-app-version");
exports.appEngineServiceNetworkSettings = require("./app-engine-service-network-settings");
exports.appEngineServiceSplitTraffic = require("./app-engine-service-split-traffic");
exports.appEngineStandardAppVersion = require("./app-engine-standard-app-version");
exports.apphubApplication = require("./apphub-application");
exports.apphubService = require("./apphub-service");
exports.apphubServiceProjectAttachment = require("./apphub-service-project-attachment");
exports.apphubWorkload = require("./apphub-workload");
exports.artifactRegistryRepository = require("./artifact-registry-repository");
exports.artifactRegistryRepositoryIamBinding = require("./artifact-registry-repository-iam-binding");
exports.artifactRegistryRepositoryIamMember = require("./artifact-registry-repository-iam-member");
exports.artifactRegistryRepositoryIamPolicy = require("./artifact-registry-repository-iam-policy");
exports.assuredWorkloadsWorkload = require("./assured-workloads-workload");
exports.backupDrBackupVault = require("./backup-dr-backup-vault");
exports.beyondcorpAppConnection = require("./beyondcorp-app-connection");
exports.beyondcorpAppConnector = require("./beyondcorp-app-connector");
exports.beyondcorpAppGateway = require("./beyondcorp-app-gateway");
exports.biglakeCatalog = require("./biglake-catalog");
exports.biglakeDatabase = require("./biglake-database");
exports.biglakeTable = require("./biglake-table");
exports.bigqueryAnalyticsHubDataExchange = require("./bigquery-analytics-hub-data-exchange");
exports.bigqueryAnalyticsHubDataExchangeIamBinding = require("./bigquery-analytics-hub-data-exchange-iam-binding");
exports.bigqueryAnalyticsHubDataExchangeIamMember = require("./bigquery-analytics-hub-data-exchange-iam-member");
exports.bigqueryAnalyticsHubDataExchangeIamPolicy = require("./bigquery-analytics-hub-data-exchange-iam-policy");
exports.bigqueryAnalyticsHubListing = require("./bigquery-analytics-hub-listing");
exports.bigqueryAnalyticsHubListingIamBinding = require("./bigquery-analytics-hub-listing-iam-binding");
exports.bigqueryAnalyticsHubListingIamMember = require("./bigquery-analytics-hub-listing-iam-member");
exports.bigqueryAnalyticsHubListingIamPolicy = require("./bigquery-analytics-hub-listing-iam-policy");
exports.bigqueryBiReservation = require("./bigquery-bi-reservation");
exports.bigqueryCapacityCommitment = require("./bigquery-capacity-commitment");
exports.bigqueryConnection = require("./bigquery-connection");
exports.bigqueryConnectionIamBinding = require("./bigquery-connection-iam-binding");
exports.bigqueryConnectionIamMember = require("./bigquery-connection-iam-member");
exports.bigqueryConnectionIamPolicy = require("./bigquery-connection-iam-policy");
exports.bigqueryDataTransferConfig = require("./bigquery-data-transfer-config");
exports.bigqueryDatapolicyDataPolicy = require("./bigquery-datapolicy-data-policy");
exports.bigqueryDatapolicyDataPolicyIamBinding = require("./bigquery-datapolicy-data-policy-iam-binding");
exports.bigqueryDatapolicyDataPolicyIamMember = require("./bigquery-datapolicy-data-policy-iam-member");
exports.bigqueryDatapolicyDataPolicyIamPolicy = require("./bigquery-datapolicy-data-policy-iam-policy");
exports.bigqueryDataset = require("./bigquery-dataset");
exports.bigqueryDatasetAccess = require("./bigquery-dataset-access");
exports.bigqueryDatasetIamBinding = require("./bigquery-dataset-iam-binding");
exports.bigqueryDatasetIamMember = require("./bigquery-dataset-iam-member");
exports.bigqueryDatasetIamPolicy = require("./bigquery-dataset-iam-policy");
exports.bigqueryJob = require("./bigquery-job");
exports.bigqueryReservation = require("./bigquery-reservation");
exports.bigqueryReservationAssignment = require("./bigquery-reservation-assignment");
exports.bigqueryRoutine = require("./bigquery-routine");
exports.bigqueryTable = require("./bigquery-table");
exports.bigqueryTableIamBinding = require("./bigquery-table-iam-binding");
exports.bigqueryTableIamMember = require("./bigquery-table-iam-member");
exports.bigqueryTableIamPolicy = require("./bigquery-table-iam-policy");
exports.bigtableAppProfile = require("./bigtable-app-profile");
exports.bigtableAuthorizedView = require("./bigtable-authorized-view");
exports.bigtableGcPolicy = require("./bigtable-gc-policy");
exports.bigtableInstance = require("./bigtable-instance");
exports.bigtableInstanceIamBinding = require("./bigtable-instance-iam-binding");
exports.bigtableInstanceIamMember = require("./bigtable-instance-iam-member");
exports.bigtableInstanceIamPolicy = require("./bigtable-instance-iam-policy");
exports.bigtableTable = require("./bigtable-table");
exports.bigtableTableIamBinding = require("./bigtable-table-iam-binding");
exports.bigtableTableIamMember = require("./bigtable-table-iam-member");
exports.bigtableTableIamPolicy = require("./bigtable-table-iam-policy");
exports.billingAccountIamBinding = require("./billing-account-iam-binding");
exports.billingAccountIamMember = require("./billing-account-iam-member");
exports.billingAccountIamPolicy = require("./billing-account-iam-policy");
exports.billingBudget = require("./billing-budget");
exports.billingProjectInfo = require("./billing-project-info");
exports.billingSubaccount = require("./billing-subaccount");
exports.binaryAuthorizationAttestor = require("./binary-authorization-attestor");
exports.binaryAuthorizationAttestorIamBinding = require("./binary-authorization-attestor-iam-binding");
exports.binaryAuthorizationAttestorIamMember = require("./binary-authorization-attestor-iam-member");
exports.binaryAuthorizationAttestorIamPolicy = require("./binary-authorization-attestor-iam-policy");
exports.binaryAuthorizationPolicy = require("./binary-authorization-policy");
exports.blockchainNodeEngineBlockchainNodes = require("./blockchain-node-engine-blockchain-nodes");
exports.certificateManagerCertificate = require("./certificate-manager-certificate");
exports.certificateManagerCertificateIssuanceConfig = require("./certificate-manager-certificate-issuance-config");
exports.certificateManagerCertificateMap = require("./certificate-manager-certificate-map");
exports.certificateManagerCertificateMapEntry = require("./certificate-manager-certificate-map-entry");
exports.certificateManagerDnsAuthorization = require("./certificate-manager-dns-authorization");
exports.certificateManagerTrustConfig = require("./certificate-manager-trust-config");
exports.cloudAssetFolderFeed = require("./cloud-asset-folder-feed");
exports.cloudAssetOrganizationFeed = require("./cloud-asset-organization-feed");
exports.cloudAssetProjectFeed = require("./cloud-asset-project-feed");
exports.cloudIdentityGroup = require("./cloud-identity-group");
exports.cloudIdentityGroupMembership = require("./cloud-identity-group-membership");
exports.cloudIdsEndpoint = require("./cloud-ids-endpoint");
exports.cloudQuotasQuotaPreference = require("./cloud-quotas-quota-preference");
exports.cloudRunDomainMapping = require("./cloud-run-domain-mapping");
exports.cloudRunService = require("./cloud-run-service");
exports.cloudRunServiceIamBinding = require("./cloud-run-service-iam-binding");
exports.cloudRunServiceIamMember = require("./cloud-run-service-iam-member");
exports.cloudRunServiceIamPolicy = require("./cloud-run-service-iam-policy");
exports.cloudRunV2Job = require("./cloud-run-v2-job");
exports.cloudRunV2JobIamBinding = require("./cloud-run-v2-job-iam-binding");
exports.cloudRunV2JobIamMember = require("./cloud-run-v2-job-iam-member");
exports.cloudRunV2JobIamPolicy = require("./cloud-run-v2-job-iam-policy");
exports.cloudRunV2Service = require("./cloud-run-v2-service");
exports.cloudRunV2ServiceIamBinding = require("./cloud-run-v2-service-iam-binding");
exports.cloudRunV2ServiceIamMember = require("./cloud-run-v2-service-iam-member");
exports.cloudRunV2ServiceIamPolicy = require("./cloud-run-v2-service-iam-policy");
exports.cloudSchedulerJob = require("./cloud-scheduler-job");
exports.cloudTasksQueue = require("./cloud-tasks-queue");
exports.cloudTasksQueueIamBinding = require("./cloud-tasks-queue-iam-binding");
exports.cloudTasksQueueIamMember = require("./cloud-tasks-queue-iam-member");
exports.cloudTasksQueueIamPolicy = require("./cloud-tasks-queue-iam-policy");
exports.cloudbuildBitbucketServerConfig = require("./cloudbuild-bitbucket-server-config");
exports.cloudbuildTrigger = require("./cloudbuild-trigger");
exports.cloudbuildWorkerPool = require("./cloudbuild-worker-pool");
exports.cloudbuildv2Connection = require("./cloudbuildv2-connection");
exports.cloudbuildv2ConnectionIamBinding = require("./cloudbuildv2-connection-iam-binding");
exports.cloudbuildv2ConnectionIamMember = require("./cloudbuildv2-connection-iam-member");
exports.cloudbuildv2ConnectionIamPolicy = require("./cloudbuildv2-connection-iam-policy");
exports.cloudbuildv2Repository = require("./cloudbuildv2-repository");
exports.clouddeployAutomation = require("./clouddeploy-automation");
exports.clouddeployCustomTargetType = require("./clouddeploy-custom-target-type");
exports.clouddeployCustomTargetTypeIamBinding = require("./clouddeploy-custom-target-type-iam-binding");
exports.clouddeployCustomTargetTypeIamMember = require("./clouddeploy-custom-target-type-iam-member");
exports.clouddeployCustomTargetTypeIamPolicy = require("./clouddeploy-custom-target-type-iam-policy");
exports.clouddeployDeliveryPipeline = require("./clouddeploy-delivery-pipeline");
exports.clouddeployDeliveryPipelineIamBinding = require("./clouddeploy-delivery-pipeline-iam-binding");
exports.clouddeployDeliveryPipelineIamMember = require("./clouddeploy-delivery-pipeline-iam-member");
exports.clouddeployDeliveryPipelineIamPolicy = require("./clouddeploy-delivery-pipeline-iam-policy");
exports.clouddeployTarget = require("./clouddeploy-target");
exports.clouddeployTargetIamBinding = require("./clouddeploy-target-iam-binding");
exports.clouddeployTargetIamMember = require("./clouddeploy-target-iam-member");
exports.clouddeployTargetIamPolicy = require("./clouddeploy-target-iam-policy");
exports.clouddomainsRegistration = require("./clouddomains-registration");
exports.cloudfunctions2Function = require("./cloudfunctions2-function");
exports.cloudfunctions2FunctionIamBinding = require("./cloudfunctions2-function-iam-binding");
exports.cloudfunctions2FunctionIamMember = require("./cloudfunctions2-function-iam-member");
exports.cloudfunctions2FunctionIamPolicy = require("./cloudfunctions2-function-iam-policy");
exports.cloudfunctionsFunction = require("./cloudfunctions-function");
exports.cloudfunctionsFunctionIamBinding = require("./cloudfunctions-function-iam-binding");
exports.cloudfunctionsFunctionIamMember = require("./cloudfunctions-function-iam-member");
exports.cloudfunctionsFunctionIamPolicy = require("./cloudfunctions-function-iam-policy");
exports.composerEnvironment = require("./composer-environment");
exports.composerUserWorkloadsConfigMap = require("./composer-user-workloads-config-map");
exports.composerUserWorkloadsSecret = require("./composer-user-workloads-secret");
exports.computeAddress = require("./compute-address");
exports.computeAttachedDisk = require("./compute-attached-disk");
exports.computeAutoscaler = require("./compute-autoscaler");
exports.computeBackendBucket = require("./compute-backend-bucket");
exports.computeBackendBucketSignedUrlKey = require("./compute-backend-bucket-signed-url-key");
exports.computeBackendService = require("./compute-backend-service");
exports.computeBackendServiceSignedUrlKey = require("./compute-backend-service-signed-url-key");
exports.computeDisk = require("./compute-disk");
exports.computeDiskAsyncReplication = require("./compute-disk-async-replication");
exports.computeDiskIamBinding = require("./compute-disk-iam-binding");
exports.computeDiskIamMember = require("./compute-disk-iam-member");
exports.computeDiskIamPolicy = require("./compute-disk-iam-policy");
exports.computeDiskResourcePolicyAttachment = require("./compute-disk-resource-policy-attachment");
exports.computeExternalVpnGateway = require("./compute-external-vpn-gateway");
exports.computeFirewall = require("./compute-firewall");
exports.computeFirewallPolicy = require("./compute-firewall-policy");
exports.computeFirewallPolicyAssociation = require("./compute-firewall-policy-association");
exports.computeFirewallPolicyRule = require("./compute-firewall-policy-rule");
exports.computeForwardingRule = require("./compute-forwarding-rule");
exports.computeGlobalAddress = require("./compute-global-address");
exports.computeGlobalForwardingRule = require("./compute-global-forwarding-rule");
exports.computeGlobalNetworkEndpoint = require("./compute-global-network-endpoint");
exports.computeGlobalNetworkEndpointGroup = require("./compute-global-network-endpoint-group");
exports.computeHaVpnGateway = require("./compute-ha-vpn-gateway");
exports.computeHealthCheck = require("./compute-health-check");
exports.computeHttpHealthCheck = require("./compute-http-health-check");
exports.computeHttpsHealthCheck = require("./compute-https-health-check");
exports.computeImage = require("./compute-image");
exports.computeImageIamBinding = require("./compute-image-iam-binding");
exports.computeImageIamMember = require("./compute-image-iam-member");
exports.computeImageIamPolicy = require("./compute-image-iam-policy");
exports.computeInstance = require("./compute-instance");
exports.computeInstanceFromTemplate = require("./compute-instance-from-template");
exports.computeInstanceGroup = require("./compute-instance-group");
exports.computeInstanceGroupManager = require("./compute-instance-group-manager");
exports.computeInstanceGroupMembership = require("./compute-instance-group-membership");
exports.computeInstanceGroupNamedPort = require("./compute-instance-group-named-port");
exports.computeInstanceIamBinding = require("./compute-instance-iam-binding");
exports.computeInstanceIamMember = require("./compute-instance-iam-member");
exports.computeInstanceIamPolicy = require("./compute-instance-iam-policy");
exports.computeInstanceSettings = require("./compute-instance-settings");
exports.computeInstanceTemplate = require("./compute-instance-template");
exports.computeInterconnect = require("./compute-interconnect");
exports.computeInterconnectAttachment = require("./compute-interconnect-attachment");
exports.computeManagedSslCertificate = require("./compute-managed-ssl-certificate");
exports.computeNetwork = require("./compute-network");
exports.computeNetworkAttachment = require("./compute-network-attachment");
exports.computeNetworkEndpoint = require("./compute-network-endpoint");
exports.computeNetworkEndpointGroup = require("./compute-network-endpoint-group");
exports.computeNetworkEndpoints = require("./compute-network-endpoints");
exports.computeNetworkFirewallPolicy = require("./compute-network-firewall-policy");
exports.computeNetworkFirewallPolicyAssociation = require("./compute-network-firewall-policy-association");
exports.computeNetworkFirewallPolicyRule = require("./compute-network-firewall-policy-rule");
exports.computeNetworkPeering = require("./compute-network-peering");
exports.computeNetworkPeeringRoutesConfig = require("./compute-network-peering-routes-config");
exports.computeNodeGroup = require("./compute-node-group");
exports.computeNodeTemplate = require("./compute-node-template");
exports.computePacketMirroring = require("./compute-packet-mirroring");
exports.computePerInstanceConfig = require("./compute-per-instance-config");
exports.computeProjectCloudArmorTier = require("./compute-project-cloud-armor-tier");
exports.computeProjectDefaultNetworkTier = require("./compute-project-default-network-tier");
exports.computeProjectMetadata = require("./compute-project-metadata");
exports.computeProjectMetadataItem = require("./compute-project-metadata-item");
exports.computePublicAdvertisedPrefix = require("./compute-public-advertised-prefix");
exports.computePublicDelegatedPrefix = require("./compute-public-delegated-prefix");
exports.computeRegionAutoscaler = require("./compute-region-autoscaler");
exports.computeRegionBackendService = require("./compute-region-backend-service");
exports.computeRegionCommitment = require("./compute-region-commitment");
exports.computeRegionDisk = require("./compute-region-disk");
exports.computeRegionDiskIamBinding = require("./compute-region-disk-iam-binding");
exports.computeRegionDiskIamMember = require("./compute-region-disk-iam-member");
exports.computeRegionDiskIamPolicy = require("./compute-region-disk-iam-policy");
exports.computeRegionDiskResourcePolicyAttachment = require("./compute-region-disk-resource-policy-attachment");
exports.computeRegionHealthCheck = require("./compute-region-health-check");
exports.computeRegionInstanceGroupManager = require("./compute-region-instance-group-manager");
exports.computeRegionInstanceTemplate = require("./compute-region-instance-template");
exports.computeRegionNetworkEndpoint = require("./compute-region-network-endpoint");
exports.computeRegionNetworkEndpointGroup = require("./compute-region-network-endpoint-group");
exports.computeRegionNetworkFirewallPolicy = require("./compute-region-network-firewall-policy");
exports.computeRegionNetworkFirewallPolicyAssociation = require("./compute-region-network-firewall-policy-association");
exports.computeRegionNetworkFirewallPolicyRule = require("./compute-region-network-firewall-policy-rule");
exports.computeRegionPerInstanceConfig = require("./compute-region-per-instance-config");
exports.computeRegionSslCertificate = require("./compute-region-ssl-certificate");
exports.computeRegionSslPolicy = require("./compute-region-ssl-policy");
exports.computeRegionTargetHttpProxy = require("./compute-region-target-http-proxy");
exports.computeRegionTargetHttpsProxy = require("./compute-region-target-https-proxy");
exports.computeRegionTargetTcpProxy = require("./compute-region-target-tcp-proxy");
exports.computeRegionUrlMap = require("./compute-region-url-map");
exports.computeReservation = require("./compute-reservation");
exports.computeResizeRequest = require("./compute-resize-request");
exports.computeResourcePolicy = require("./compute-resource-policy");
exports.computeRoute = require("./compute-route");
exports.computeRouter = require("./compute-router");
exports.computeRouterInterface = require("./compute-router-interface");
exports.computeRouterNat = require("./compute-router-nat");
exports.computeRouterNatAddress = require("./compute-router-nat-address");
exports.computeRouterPeer = require("./compute-router-peer");
exports.computeSecurityPolicy = require("./compute-security-policy");
exports.computeSecurityPolicyRule = require("./compute-security-policy-rule");
exports.computeServiceAttachment = require("./compute-service-attachment");
exports.computeSharedVpcHostProject = require("./compute-shared-vpc-host-project");
exports.computeSharedVpcServiceProject = require("./compute-shared-vpc-service-project");
exports.computeSnapshot = require("./compute-snapshot");
exports.computeSnapshotIamBinding = require("./compute-snapshot-iam-binding");
exports.computeSnapshotIamMember = require("./compute-snapshot-iam-member");
exports.computeSnapshotIamPolicy = require("./compute-snapshot-iam-policy");
exports.computeSslCertificate = require("./compute-ssl-certificate");
exports.computeSslPolicy = require("./compute-ssl-policy");
exports.computeSubnetwork = require("./compute-subnetwork");
exports.computeSubnetworkIamBinding = require("./compute-subnetwork-iam-binding");
exports.computeSubnetworkIamMember = require("./compute-subnetwork-iam-member");
exports.computeSubnetworkIamPolicy = require("./compute-subnetwork-iam-policy");
exports.computeTargetGrpcProxy = require("./compute-target-grpc-proxy");
exports.computeTargetHttpProxy = require("./compute-target-http-proxy");
exports.computeTargetHttpsProxy = require("./compute-target-https-proxy");
exports.computeTargetInstance = require("./compute-target-instance");
exports.computeTargetPool = require("./compute-target-pool");
exports.computeTargetSslProxy = require("./compute-target-ssl-proxy");
exports.computeTargetTcpProxy = require("./compute-target-tcp-proxy");
exports.computeUrlMap = require("./compute-url-map");
exports.computeVpnGateway = require("./compute-vpn-gateway");
exports.computeVpnTunnel = require("./compute-vpn-tunnel");
exports.containerAnalysisNote = require("./container-analysis-note");
exports.containerAnalysisNoteIamBinding = require("./container-analysis-note-iam-binding");
exports.containerAnalysisNoteIamMember = require("./container-analysis-note-iam-member");
exports.containerAnalysisNoteIamPolicy = require("./container-analysis-note-iam-policy");
exports.containerAnalysisOccurrence = require("./container-analysis-occurrence");
exports.containerAttachedCluster = require("./container-attached-cluster");
exports.containerAwsCluster = require("./container-aws-cluster");
exports.containerAwsNodePool = require("./container-aws-node-pool");
exports.containerAzureClient = require("./container-azure-client");
exports.containerAzureCluster = require("./container-azure-cluster");
exports.containerAzureNodePool = require("./container-azure-node-pool");
exports.containerCluster = require("./container-cluster");
exports.containerNodePool = require("./container-node-pool");
exports.containerRegistry = require("./container-registry");
exports.dataCatalogEntry = require("./data-catalog-entry");
exports.dataCatalogEntryGroup = require("./data-catalog-entry-group");
exports.dataCatalogEntryGroupIamBinding = require("./data-catalog-entry-group-iam-binding");
exports.dataCatalogEntryGroupIamMember = require("./data-catalog-entry-group-iam-member");
exports.dataCatalogEntryGroupIamPolicy = require("./data-catalog-entry-group-iam-policy");
exports.dataCatalogPolicyTag = require("./data-catalog-policy-tag");
exports.dataCatalogPolicyTagIamBinding = require("./data-catalog-policy-tag-iam-binding");
exports.dataCatalogPolicyTagIamMember = require("./data-catalog-policy-tag-iam-member");
exports.dataCatalogPolicyTagIamPolicy = require("./data-catalog-policy-tag-iam-policy");
exports.dataCatalogTag = require("./data-catalog-tag");
exports.dataCatalogTagTemplate = require("./data-catalog-tag-template");
exports.dataCatalogTagTemplateIamBinding = require("./data-catalog-tag-template-iam-binding");
exports.dataCatalogTagTemplateIamMember = require("./data-catalog-tag-template-iam-member");
exports.dataCatalogTagTemplateIamPolicy = require("./data-catalog-tag-template-iam-policy");
exports.dataCatalogTaxonomy = require("./data-catalog-taxonomy");
exports.dataCatalogTaxonomyIamBinding = require("./data-catalog-taxonomy-iam-binding");
exports.dataCatalogTaxonomyIamMember = require("./data-catalog-taxonomy-iam-member");
exports.dataCatalogTaxonomyIamPolicy = require("./data-catalog-taxonomy-iam-policy");
exports.dataFusionInstance = require("./data-fusion-instance");
exports.dataFusionInstanceIamBinding = require("./data-fusion-instance-iam-binding");
exports.dataFusionInstanceIamMember = require("./data-fusion-instance-iam-member");
exports.dataFusionInstanceIamPolicy = require("./data-fusion-instance-iam-policy");
exports.dataLossPreventionDeidentifyTemplate = require("./data-loss-prevention-deidentify-template");
exports.dataLossPreventionDiscoveryConfig = require("./data-loss-prevention-discovery-config");
exports.dataLossPreventionInspectTemplate = require("./data-loss-prevention-inspect-template");
exports.dataLossPreventionJobTrigger = require("./data-loss-prevention-job-trigger");
exports.dataLossPreventionStoredInfoType = require("./data-loss-prevention-stored-info-type");
exports.dataPipelinePipeline = require("./data-pipeline-pipeline");
exports.databaseMigrationServiceConnectionProfile = require("./database-migration-service-connection-profile");
exports.databaseMigrationServiceMigrationJob = require("./database-migration-service-migration-job");
exports.databaseMigrationServicePrivateConnection = require("./database-migration-service-private-connection");
exports.dataflowJob = require("./dataflow-job");
exports.dataplexAspectType = require("./dataplex-aspect-type");
exports.dataplexAspectTypeIamBinding = require("./dataplex-aspect-type-iam-binding");
exports.dataplexAspectTypeIamMember = require("./dataplex-aspect-type-iam-member");
exports.dataplexAspectTypeIamPolicy = require("./dataplex-aspect-type-iam-policy");
exports.dataplexAsset = require("./dataplex-asset");
exports.dataplexAssetIamBinding = require("./dataplex-asset-iam-binding");
exports.dataplexAssetIamMember = require("./dataplex-asset-iam-member");
exports.dataplexAssetIamPolicy = require("./dataplex-asset-iam-policy");
exports.dataplexDatascan = require("./dataplex-datascan");
exports.dataplexDatascanIamBinding = require("./dataplex-datascan-iam-binding");
exports.dataplexDatascanIamMember = require("./dataplex-datascan-iam-member");
exports.dataplexDatascanIamPolicy = require("./dataplex-datascan-iam-policy");
exports.dataplexEntryGroup = require("./dataplex-entry-group");
exports.dataplexEntryGroupIamBinding = require("./dataplex-entry-group-iam-binding");
exports.dataplexEntryGroupIamMember = require("./dataplex-entry-group-iam-member");
exports.dataplexEntryGroupIamPolicy = require("./dataplex-entry-group-iam-policy");
exports.dataplexEntryType = require("./dataplex-entry-type");
exports.dataplexEntryTypeIamBinding = require("./dataplex-entry-type-iam-binding");
exports.dataplexEntryTypeIamMember = require("./dataplex-entry-type-iam-member");
exports.dataplexEntryTypeIamPolicy = require("./dataplex-entry-type-iam-policy");
exports.dataplexLake = require("./dataplex-lake");
exports.dataplexLakeIamBinding = require("./dataplex-lake-iam-binding");
exports.dataplexLakeIamMember = require("./dataplex-lake-iam-member");
exports.dataplexLakeIamPolicy = require("./dataplex-lake-iam-policy");
exports.dataplexTask = require("./dataplex-task");
exports.dataplexTaskIamBinding = require("./dataplex-task-iam-binding");
exports.dataplexTaskIamMember = require("./dataplex-task-iam-member");
exports.dataplexTaskIamPolicy = require("./dataplex-task-iam-policy");
exports.dataplexZone = require("./dataplex-zone");
exports.dataplexZoneIamBinding = require("./dataplex-zone-iam-binding");
exports.dataplexZoneIamMember = require("./dataplex-zone-iam-member");
exports.dataplexZoneIamPolicy = require("./dataplex-zone-iam-policy");
exports.dataprocAutoscalingPolicy = require("./dataproc-autoscaling-policy");
exports.dataprocAutoscalingPolicyIamBinding = require("./dataproc-autoscaling-policy-iam-binding");
exports.dataprocAutoscalingPolicyIamMember = require("./dataproc-autoscaling-policy-iam-member");
exports.dataprocAutoscalingPolicyIamPolicy = require("./dataproc-autoscaling-policy-iam-policy");
exports.dataprocBatch = require("./dataproc-batch");
exports.dataprocCluster = require("./dataproc-cluster");
exports.dataprocClusterIamBinding = require("./dataproc-cluster-iam-binding");
exports.dataprocClusterIamMember = require("./dataproc-cluster-iam-member");
exports.dataprocClusterIamPolicy = require("./dataproc-cluster-iam-policy");
exports.dataprocGdcApplicationEnvironment = require("./dataproc-gdc-application-environment");
exports.dataprocGdcServiceInstance = require("./dataproc-gdc-service-instance");
exports.dataprocGdcSparkApplication = require("./dataproc-gdc-spark-application");
exports.dataprocJob = require("./dataproc-job");
exports.dataprocJobIamBinding = require("./dataproc-job-iam-binding");
exports.dataprocJobIamMember = require("./dataproc-job-iam-member");
exports.dataprocJobIamPolicy = require("./dataproc-job-iam-policy");
exports.dataprocMetastoreFederation = require("./dataproc-metastore-federation");
exports.dataprocMetastoreFederationIamBinding = require("./dataproc-metastore-federation-iam-binding");
exports.dataprocMetastoreFederationIamMember = require("./dataproc-metastore-federation-iam-member");
exports.dataprocMetastoreFederationIamPolicy = require("./dataproc-metastore-federation-iam-policy");
exports.dataprocMetastoreService = require("./dataproc-metastore-service");
exports.dataprocMetastoreServiceIamBinding = require("./dataproc-metastore-service-iam-binding");
exports.dataprocMetastoreServiceIamMember = require("./dataproc-metastore-service-iam-member");
exports.dataprocMetastoreServiceIamPolicy = require("./dataproc-metastore-service-iam-policy");
exports.dataprocWorkflowTemplate = require("./dataproc-workflow-template");
exports.datastreamConnectionProfile = require("./datastream-connection-profile");
exports.datastreamPrivateConnection = require("./datastream-private-connection");
exports.datastreamStream = require("./datastream-stream");
exports.deploymentManagerDeployment = require("./deployment-manager-deployment");
exports.dialogflowAgent = require("./dialogflow-agent");
exports.dialogflowCxAgent = require("./dialogflow-cx-agent");
exports.dialogflowCxEntityType = require("./dialogflow-cx-entity-type");
exports.dialogflowCxEnvironment = require("./dialogflow-cx-environment");
exports.dialogflowCxFlow = require("./dialogflow-cx-flow");
exports.dialogflowCxIntent = require("./dialogflow-cx-intent");
exports.dialogflowCxPage = require("./dialogflow-cx-page");
exports.dialogflowCxSecuritySettings = require("./dialogflow-cx-security-settings");
exports.dialogflowCxTestCase = require("./dialogflow-cx-test-case");
exports.dialogflowCxVersion = require("./dialogflow-cx-version");
exports.dialogflowCxWebhook = require("./dialogflow-cx-webhook");
exports.dialogflowEntityType = require("./dialogflow-entity-type");
exports.dialogflowFulfillment = require("./dialogflow-fulfillment");
exports.dialogflowIntent = require("./dialogflow-intent");
exports.discoveryEngineChatEngine = require("./discovery-engine-chat-engine");
exports.discoveryEngineDataStore = require("./discovery-engine-data-store");
exports.discoveryEngineSchema = require("./discovery-engine-schema");
exports.discoveryEngineSearchEngine = require("./discovery-engine-search-engine");
exports.discoveryEngineTargetSite = require("./discovery-engine-target-site");
exports.dnsManagedZone = require("./dns-managed-zone");
exports.dnsManagedZoneIamBinding = require("./dns-managed-zone-iam-binding");
exports.dnsManagedZoneIamMember = require("./dns-managed-zone-iam-member");
exports.dnsManagedZoneIamPolicy = require("./dns-managed-zone-iam-policy");
exports.dnsPolicy = require("./dns-policy");
exports.dnsRecordSet = require("./dns-record-set");
exports.dnsResponsePolicy = require("./dns-response-policy");
exports.dnsResponsePolicyRule = require("./dns-response-policy-rule");
exports.documentAiProcessor = require("./document-ai-processor");
exports.documentAiProcessorDefaultVersion = require("./document-ai-processor-default-version");
exports.documentAiWarehouseDocumentSchema = require("./document-ai-warehouse-document-schema");
exports.documentAiWarehouseLocation = require("./document-ai-warehouse-location");
exports.edgecontainerCluster = require("./edgecontainer-cluster");
exports.edgecontainerNodePool = require("./edgecontainer-node-pool");
exports.edgecontainerVpnConnection = require("./edgecontainer-vpn-connection");
exports.edgenetworkNetwork = require("./edgenetwork-network");
exports.edgenetworkSubnet = require("./edgenetwork-subnet");
exports.endpointsService = require("./endpoints-service");
exports.endpointsServiceConsumersIamBinding = require("./endpoints-service-consumers-iam-binding");
exports.endpointsServiceConsumersIamMember = require("./endpoints-service-consumers-iam-member");
exports.endpointsServiceConsumersIamPolicy = require("./endpoints-service-consumers-iam-policy");
exports.endpointsServiceIamBinding = require("./endpoints-service-iam-binding");
exports.endpointsServiceIamMember = require("./endpoints-service-iam-member");
exports.endpointsServiceIamPolicy = require("./endpoints-service-iam-policy");
exports.essentialContactsContact = require("./essential-contacts-contact");
exports.eventarcChannel = require("./eventarc-channel");
exports.eventarcGoogleChannelConfig = require("./eventarc-google-channel-config");
exports.eventarcTrigger = require("./eventarc-trigger");
exports.filestoreBackup = require("./filestore-backup");
exports.filestoreInstance = require("./filestore-instance");
exports.filestoreSnapshot = require("./filestore-snapshot");
exports.firebaseAppCheckAppAttestConfig = require("./firebase-app-check-app-attest-config");
exports.firebaseAppCheckDebugToken = require("./firebase-app-check-debug-token");
exports.firebaseAppCheckDeviceCheckConfig = require("./firebase-app-check-device-check-config");
exports.firebaseAppCheckPlayIntegrityConfig = require("./firebase-app-check-play-integrity-config");
exports.firebaseAppCheckRecaptchaEnterpriseConfig = require("./firebase-app-check-recaptcha-enterprise-config");
exports.firebaseAppCheckRecaptchaV3Config = require("./firebase-app-check-recaptcha-v3-config");
exports.firebaseAppCheckServiceConfig = require("./firebase-app-check-service-config");
exports.firebaserulesRelease = require("./firebaserules-release");
exports.firebaserulesRuleset = require("./firebaserules-ruleset");
exports.firestoreBackupSchedule = require("./firestore-backup-schedule");
exports.firestoreDatabase = require("./firestore-database");
exports.firestoreDocument = require("./firestore-document");
exports.firestoreField = require("./firestore-field");
exports.firestoreIndex = require("./firestore-index");
exports.folder = require("./folder");
exports.folderAccessApprovalSettings = require("./folder-access-approval-settings");
exports.folderIamAuditConfig = require("./folder-iam-audit-config");
exports.folderIamBinding = require("./folder-iam-binding");
exports.folderIamMember = require("./folder-iam-member");
exports.folderIamPolicy = require("./folder-iam-policy");
exports.folderOrganizationPolicy = require("./folder-organization-policy");
exports.gkeBackupBackupPlan = require("./gke-backup-backup-plan");
exports.gkeBackupBackupPlanIamBinding = require("./gke-backup-backup-plan-iam-binding");
exports.gkeBackupBackupPlanIamMember = require("./gke-backup-backup-plan-iam-member");
exports.gkeBackupBackupPlanIamPolicy = require("./gke-backup-backup-plan-iam-policy");
exports.gkeBackupRestorePlan = require("./gke-backup-restore-plan");
exports.gkeBackupRestorePlanIamBinding = require("./gke-backup-restore-plan-iam-binding");
exports.gkeBackupRestorePlanIamMember = require("./gke-backup-restore-plan-iam-member");
exports.gkeBackupRestorePlanIamPolicy = require("./gke-backup-restore-plan-iam-policy");
exports.gkeHubFeature = require("./gke-hub-feature");
exports.gkeHubFeatureIamBinding = require("./gke-hub-feature-iam-binding");
exports.gkeHubFeatureIamMember = require("./gke-hub-feature-iam-member");
exports.gkeHubFeatureIamPolicy = require("./gke-hub-feature-iam-policy");
exports.gkeHubFeatureMembership = require("./gke-hub-feature-membership");
exports.gkeHubFleet = require("./gke-hub-fleet");
exports.gkeHubMembership = require("./gke-hub-membership");
exports.gkeHubMembershipBinding = require("./gke-hub-membership-binding");
exports.gkeHubMembershipIamBinding = require("./gke-hub-membership-iam-binding");
exports.gkeHubMembershipIamMember = require("./gke-hub-membership-iam-member");
exports.gkeHubMembershipIamPolicy = require("./gke-hub-membership-iam-policy");
exports.gkeHubNamespace = require("./gke-hub-namespace");
exports.gkeHubScope = require("./gke-hub-scope");
exports.gkeHubScopeIamBinding = require("./gke-hub-scope-iam-binding");
exports.gkeHubScopeIamMember = require("./gke-hub-scope-iam-member");
exports.gkeHubScopeIamPolicy = require("./gke-hub-scope-iam-policy");
exports.gkeHubScopeRbacRoleBinding = require("./gke-hub-scope-rbac-role-binding");
exports.gkeonpremBareMetalAdminCluster = require("./gkeonprem-bare-metal-admin-cluster");
exports.gkeonpremBareMetalCluster = require("./gkeonprem-bare-metal-cluster");
exports.gkeonpremBareMetalNodePool = require("./gkeonprem-bare-metal-node-pool");
exports.gkeonpremVmwareCluster = require("./gkeonprem-vmware-cluster");
exports.gkeonpremVmwareNodePool = require("./gkeonprem-vmware-node-pool");
exports.healthcareConsentStore = require("./healthcare-consent-store");
exports.healthcareConsentStoreIamBinding = require("./healthcare-consent-store-iam-binding");
exports.healthcareConsentStoreIamMember = require("./healthcare-consent-store-iam-member");
exports.healthcareConsentStoreIamPolicy = require("./healthcare-consent-store-iam-policy");
exports.healthcareDataset = require("./healthcare-dataset");
exports.healthcareDatasetIamBinding = require("./healthcare-dataset-iam-binding");
exports.healthcareDatasetIamMember = require("./healthcare-dataset-iam-member");
exports.healthcareDatasetIamPolicy = require("./healthcare-dataset-iam-policy");
exports.healthcareDicomStore = require("./healthcare-dicom-store");
exports.healthcareDicomStoreIamBinding = require("./healthcare-dicom-store-iam-binding");
exports.healthcareDicomStoreIamMember = require("./healthcare-dicom-store-iam-member");
exports.healthcareDicomStoreIamPolicy = require("./healthcare-dicom-store-iam-policy");
exports.healthcareFhirStore = require("./healthcare-fhir-store");
exports.healthcareFhirStoreIamBinding = require("./healthcare-fhir-store-iam-binding");
exports.healthcareFhirStoreIamMember = require("./healthcare-fhir-store-iam-member");
exports.healthcareFhirStoreIamPolicy = require("./healthcare-fhir-store-iam-policy");
exports.healthcareHl7V2Store = require("./healthcare-hl7-v2-store");
exports.healthcareHl7V2StoreIamBinding = require("./healthcare-hl7-v2-store-iam-binding");
exports.healthcareHl7V2StoreIamMember = require("./healthcare-hl7-v2-store-iam-member");
exports.healthcareHl7V2StoreIamPolicy = require("./healthcare-hl7-v2-store-iam-policy");
exports.healthcarePipelineJob = require("./healthcare-pipeline-job");
exports.healthcareWorkspace = require("./healthcare-workspace");
exports.iamAccessBoundaryPolicy = require("./iam-access-boundary-policy");
exports.iamDenyPolicy = require("./iam-deny-policy");
exports.iamFoldersPolicyBinding = require("./iam-folders-policy-binding");
exports.iamOrganizationsPolicyBinding = require("./iam-organizations-policy-binding");
exports.iamPrincipalAccessBoundaryPolicy = require("./iam-principal-access-boundary-policy");
exports.iamProjectsPolicyBinding = require("./iam-projects-policy-binding");
exports.iamWorkforcePool = require("./iam-workforce-pool");
exports.iamWorkforcePoolProvider = require("./iam-workforce-pool-provider");
exports.iamWorkloadIdentityPool = require("./iam-workload-identity-pool");
exports.iamWorkloadIdentityPoolProvider = require("./iam-workload-identity-pool-provider");
exports.iapAppEngineServiceIamBinding = require("./iap-app-engine-service-iam-binding");
exports.iapAppEngineServiceIamMember = require("./iap-app-engine-service-iam-member");
exports.iapAppEngineServiceIamPolicy = require("./iap-app-engine-service-iam-policy");
exports.iapAppEngineVersionIamBinding = require("./iap-app-engine-version-iam-binding");
exports.iapAppEngineVersionIamMember = require("./iap-app-engine-version-iam-member");
exports.iapAppEngineVersionIamPolicy = require("./iap-app-engine-version-iam-policy");
exports.iapBrand = require("./iap-brand");
exports.iapClient = require("./iap-client");
exports.iapSettings = require("./iap-settings");
exports.iapTunnelDestGroup = require("./iap-tunnel-dest-group");
exports.iapTunnelDestGroupIamBinding = require("./iap-tunnel-dest-group-iam-binding");
exports.iapTunnelDestGroupIamMember = require("./iap-tunnel-dest-group-iam-member");
exports.iapTunnelDestGroupIamPolicy = require("./iap-tunnel-dest-group-iam-policy");
exports.iapTunnelIamBinding = require("./iap-tunnel-iam-binding");
exports.iapTunnelIamMember = require("./iap-tunnel-iam-member");
exports.iapTunnelIamPolicy = require("./iap-tunnel-iam-policy");
exports.iapTunnelInstanceIamBinding = require("./iap-tunnel-instance-iam-binding");
exports.iapTunnelInstanceIamMember = require("./iap-tunnel-instance-iam-member");
exports.iapTunnelInstanceIamPolicy = require("./iap-tunnel-instance-iam-policy");
exports.iapWebBackendServiceIamBinding = require("./iap-web-backend-service-iam-binding");
exports.iapWebBackendServiceIamMember = require("./iap-web-backend-service-iam-member");
exports.iapWebBackendServiceIamPolicy = require("./iap-web-backend-service-iam-policy");
exports.iapWebIamBinding = require("./iap-web-iam-binding");
exports.iapWebIamMember = require("./iap-web-iam-member");
exports.iapWebIamPolicy = require("./iap-web-iam-policy");
exports.iapWebRegionBackendServiceIamBinding = require("./iap-web-region-backend-service-iam-binding");
exports.iapWebRegionBackendServiceIamMember = require("./iap-web-region-backend-service-iam-member");
exports.iapWebRegionBackendServiceIamPolicy = require("./iap-web-region-backend-service-iam-policy");
exports.iapWebTypeAppEngineIamBinding = require("./iap-web-type-app-engine-iam-binding");
exports.iapWebTypeAppEngineIamMember = require("./iap-web-type-app-engine-iam-member");
exports.iapWebTypeAppEngineIamPolicy = require("./iap-web-type-app-engine-iam-policy");
exports.iapWebTypeComputeIamBinding = require("./iap-web-type-compute-iam-binding");
exports.iapWebTypeComputeIamMember = require("./iap-web-type-compute-iam-member");
exports.iapWebTypeComputeIamPolicy = require("./iap-web-type-compute-iam-policy");
exports.identityPlatformConfig = require("./identity-platform-config");
exports.identityPlatformDefaultSupportedIdpConfig = require("./identity-platform-default-supported-idp-config");
exports.identityPlatformInboundSamlConfig = require("./identity-platform-inbound-saml-config");
exports.identityPlatformOauthIdpConfig = require("./identity-platform-oauth-idp-config");
exports.identityPlatformTenant = require("./identity-platform-tenant");
exports.identityPlatformTenantDefaultSupportedIdpConfig = require("./identity-platform-tenant-default-supported-idp-config");
exports.identityPlatformTenantInboundSamlConfig = require("./identity-platform-tenant-inbound-saml-config");
exports.identityPlatformTenantOauthIdpConfig = require("./identity-platform-tenant-oauth-idp-config");
exports.integrationConnectorsConnection = require("./integration-connectors-connection");
exports.integrationConnectorsEndpointAttachment = require("./integration-connectors-endpoint-attachment");
exports.integrationConnectorsManagedZone = require("./integration-connectors-managed-zone");
exports.integrationsAuthConfig = require("./integrations-auth-config");
exports.integrationsClient = require("./integrations-client");
exports.kmsCryptoKey = require("./kms-crypto-key");
exports.kmsCryptoKeyIamBinding = require("./kms-crypto-key-iam-binding");
exports.kmsCryptoKeyIamMember = require("./kms-crypto-key-iam-member");
exports.kmsCryptoKeyIamPolicy = require("./kms-crypto-key-iam-policy");
exports.kmsCryptoKeyVersion = require("./kms-crypto-key-version");
exports.kmsEkmConnection = require("./kms-ekm-connection");
exports.kmsEkmConnectionIamBinding = require("./kms-ekm-connection-iam-binding");
exports.kmsEkmConnectionIamMember = require("./kms-ekm-connection-iam-member");
exports.kmsEkmConnectionIamPolicy = require("./kms-ekm-connection-iam-policy");
exports.kmsKeyRing = require("./kms-key-ring");
exports.kmsKeyRingIamBinding = require("./kms-key-ring-iam-binding");
exports.kmsKeyRingIamMember = require("./kms-key-ring-iam-member");
exports.kmsKeyRingIamPolicy = require("./kms-key-ring-iam-policy");
exports.kmsKeyRingImportJob = require("./kms-key-ring-import-job");
exports.kmsSecretCiphertext = require("./kms-secret-ciphertext");
exports.loggingBillingAccountBucketConfig = require("./logging-billing-account-bucket-config");
exports.loggingBillingAccountExclusion = require("./logging-billing-account-exclusion");
exports.loggingBillingAccountSink = require("./logging-billing-account-sink");
exports.loggingFolderBucketConfig = require("./logging-folder-bucket-config");
exports.loggingFolderExclusion = require("./logging-folder-exclusion");
exports.loggingFolderSettings = require("./logging-folder-settings");
exports.loggingFolderSink = require("./logging-folder-sink");
exports.loggingLinkedDataset = require("./logging-linked-dataset");
exports.loggingLogScope = require("./logging-log-scope");
exports.loggingLogView = require("./logging-log-view");
exports.loggingLogViewIamBinding = require("./logging-log-view-iam-binding");
exports.loggingLogViewIamMember = require("./logging-log-view-iam-member");
exports.loggingLogViewIamPolicy = require("./logging-log-view-iam-policy");
exports.loggingMetric = require("./logging-metric");
exports.loggingOrganizationBucketConfig = require("./logging-organization-bucket-config");
exports.loggingOrganizationExclusion = require("./logging-organization-exclusion");
exports.loggingOrganizationSettings = require("./logging-organization-settings");
exports.loggingOrganizationSink = require("./logging-organization-sink");
exports.loggingProjectBucketConfig = require("./logging-project-bucket-config");
exports.loggingProjectExclusion = require("./logging-project-exclusion");
exports.loggingProjectSink = require("./logging-project-sink");
exports.lookerInstance = require("./looker-instance");
exports.managedKafkaCluster = require("./managed-kafka-cluster");
exports.managedKafkaTopic = require("./managed-kafka-topic");
exports.memcacheInstance = require("./memcache-instance");
exports.memorystoreInstance = require("./memorystore-instance");
exports.migrationCenterGroup = require("./migration-center-group");
exports.migrationCenterPreferenceSet = require("./migration-center-preference-set");
exports.mlEngineModel = require("./ml-engine-model");
exports.monitoringAlertPolicy = require("./monitoring-alert-policy");
exports.monitoringCustomService = require("./monitoring-custom-service");
exports.monitoringDashboard = require("./monitoring-dashboard");
exports.monitoringGroup = require("./monitoring-group");
exports.monitoringMetricDescriptor = require("./monitoring-metric-descriptor");
exports.monitoringMonitoredProject = require("./monitoring-monitored-project");
exports.monitoringNotificationChannel = require("./monitoring-notification-channel");
exports.monitoringService = require("./monitoring-service");
exports.monitoringSlo = require("./monitoring-slo");
exports.monitoringUptimeCheckConfig = require("./monitoring-uptime-check-config");
exports.netappActiveDirectory = require("./netapp-active-directory");
exports.netappBackup = require("./netapp-backup");
exports.netappBackupPolicy = require("./netapp-backup-policy");
exports.netappBackupVault = require("./netapp-backup-vault");
exports.netappKmsconfig = require("./netapp-kmsconfig");
exports.netappStoragePool = require("./netapp-storage-pool");
exports.netappVolume = require("./netapp-volume");
exports.netappVolumeReplication = require("./netapp-volume-replication");
exports.netappVolumeSnapshot = require("./netapp-volume-snapshot");
exports.networkConnectivityGroup = require("./network-connectivity-group");
exports.networkConnectivityHub = require("./network-connectivity-hub");
exports.networkConnectivityInternalRange = require("./network-connectivity-internal-range");
exports.networkConnectivityPolicyBasedRoute = require("./network-connectivity-policy-based-route");
exports.networkConnectivityRegionalEndpoint = require("./network-connectivity-regional-endpoint");
exports.networkConnectivityServiceConnectionPolicy = require("./network-connectivity-service-connection-policy");
exports.networkConnectivitySpoke = require("./network-connectivity-spoke");
exports.networkManagementConnectivityTest = require("./network-management-connectivity-test");
exports.networkSecurityAddressGroup = require("./network-security-address-group");
exports.networkSecurityAddressGroupIamBinding = require("./network-security-address-group-iam-binding");
exports.networkSecurityAddressGroupIamMember = require("./network-security-address-group-iam-member");
exports.networkSecurityAddressGroupIamPolicy = require("./network-security-address-group-iam-policy");
exports.networkSecurityAuthzPolicy = require("./network-security-authz-policy");
exports.networkSecurityClientTlsPolicy = require("./network-security-client-tls-policy");
exports.networkSecurityFirewallEndpoint = require("./network-security-firewall-endpoint");
exports.networkSecurityFirewallEndpointAssociation = require("./network-security-firewall-endpoint-association");
exports.networkSecurityGatewaySecurityPolicy = require("./network-security-gateway-security-policy");
exports.networkSecurityGatewaySecurityPolicyRule = require("./network-security-gateway-security-policy-rule");
exports.networkSecuritySecurityProfile = require("./network-security-security-profile");
exports.networkSecuritySecurityProfileGroup = require("./network-security-security-profile-group");
exports.networkSecurityServerTlsPolicy = require("./network-security-server-tls-policy");
exports.networkSecurityTlsInspectionPolicy = require("./network-security-tls-inspection-policy");
exports.networkSecurityUrlLists = require("./network-security-url-lists");
exports.networkServicesAuthzExtension = require("./network-services-authz-extension");
exports.networkServicesEdgeCacheKeyset = require("./network-services-edge-cache-keyset");
exports.networkServicesEdgeCacheOrigin = require("./network-services-edge-cache-origin");
exports.networkServicesEdgeCacheService = require("./network-services-edge-cache-service");
exports.networkServicesGateway = require("./network-services-gateway");
exports.networkServicesLbRouteExtension = require("./network-services-lb-route-extension");
exports.networkServicesLbTrafficExtension = require("./network-services-lb-traffic-extension");
exports.notebooksEnvironment = require("./notebooks-environment");
exports.notebooksInstance = require("./notebooks-instance");
exports.notebooksInstanceIamBinding = require("./notebooks-instance-iam-binding");
exports.notebooksInstanceIamMember = require("./notebooks-instance-iam-member");
exports.notebooksInstanceIamPolicy = require("./notebooks-instance-iam-policy");
exports.notebooksLocation = require("./notebooks-location");
exports.notebooksRuntime = require("./notebooks-runtime");
exports.notebooksRuntimeIamBinding = require("./notebooks-runtime-iam-binding");
exports.notebooksRuntimeIamMember = require("./notebooks-runtime-iam-member");
exports.notebooksRuntimeIamPolicy = require("./notebooks-runtime-iam-policy");
exports.oracleDatabaseAutonomousDatabase = require("./oracle-database-autonomous-database");
exports.oracleDatabaseCloudExadataInfrastructure = require("./oracle-database-cloud-exadata-infrastructure");
exports.oracleDatabaseCloudVmCluster = require("./oracle-database-cloud-vm-cluster");
exports.orgPolicyCustomConstraint = require("./org-policy-custom-constraint");
exports.orgPolicyPolicy = require("./org-policy-policy");
exports.organizationAccessApprovalSettings = require("./organization-access-approval-settings");
exports.organizationIamAuditConfig = require("./organization-iam-audit-config");
exports.organizationIamBinding = require("./organization-iam-binding");
exports.organizationIamCustomRole = require("./organization-iam-custom-role");
exports.organizationIamMember = require("./organization-iam-member");
exports.organizationIamPolicy = require("./organization-iam-policy");
exports.organizationPolicy = require("./organization-policy");
exports.osConfigOsPolicyAssignment = require("./os-config-os-policy-assignment");
exports.osConfigPatchDeployment = require("./os-config-patch-deployment");
exports.osLoginSshPublicKey = require("./os-login-ssh-public-key");
exports.parallelstoreInstance = require("./parallelstore-instance");
exports.privatecaCaPool = require("./privateca-ca-pool");
exports.privatecaCaPoolIamBinding = require("./privateca-ca-pool-iam-binding");
exports.privatecaCaPoolIamMember = require("./privateca-ca-pool-iam-member");
exports.privatecaCaPoolIamPolicy = require("./privateca-ca-pool-iam-policy");
exports.privatecaCertificate = require("./privateca-certificate");
exports.privatecaCertificateAuthority = require("./privateca-certificate-authority");
exports.privatecaCertificateTemplate = require("./privateca-certificate-template");
exports.privatecaCertificateTemplateIamBinding = require("./privateca-certificate-template-iam-binding");
exports.privatecaCertificateTemplateIamMember = require("./privateca-certificate-template-iam-member");
exports.privatecaCertificateTemplateIamPolicy = require("./privateca-certificate-template-iam-policy");
exports.privilegedAccessManagerEntitlement = require("./privileged-access-manager-entitlement");
exports.project = require("./project");
exports.projectAccessApprovalSettings = require("./project-access-approval-settings");
exports.projectDefaultServiceAccounts = require("./project-default-service-accounts");
exports.projectIamAuditConfig = require("./project-iam-audit-config");
exports.projectIamBinding = require("./project-iam-binding");
exports.projectIamCustomRole = require("./project-iam-custom-role");
exports.projectIamMember = require("./project-iam-member");
exports.projectIamMemberRemove = require("./project-iam-member-remove");
exports.projectIamPolicy = require("./project-iam-policy");
exports.projectOrganizationPolicy = require("./project-organization-policy");
exports.projectService = require("./project-service");
exports.projectUsageExportBucket = require("./project-usage-export-bucket");
exports.publicCaExternalAccountKey = require("./public-ca-external-account-key");
exports.pubsubLiteReservation = require("./pubsub-lite-reservation");
exports.pubsubLiteSubscription = require("./pubsub-lite-subscription");
exports.pubsubLiteTopic = require("./pubsub-lite-topic");
exports.pubsubSchema = require("./pubsub-schema");
exports.pubsubSchemaIamBinding = require("./pubsub-schema-iam-binding");
exports.pubsubSchemaIamMember = require("./pubsub-schema-iam-member");
exports.pubsubSchemaIamPolicy = require("./pubsub-schema-iam-policy");
exports.pubsubSubscription = require("./pubsub-subscription");
exports.pubsubSubscriptionIamBinding = require("./pubsub-subscription-iam-binding");
exports.pubsubSubscriptionIamMember = require("./pubsub-subscription-iam-member");
exports.pubsubSubscriptionIamPolicy = require("./pubsub-subscription-iam-policy");
exports.pubsubTopic = require("./pubsub-topic");
exports.pubsubTopicIamBinding = require("./pubsub-topic-iam-binding");
exports.pubsubTopicIamMember = require("./pubsub-topic-iam-member");
exports.pubsubTopicIamPolicy = require("./pubsub-topic-iam-policy");
exports.recaptchaEnterpriseKey = require("./recaptcha-enterprise-key");
exports.redisCluster = require("./redis-cluster");
exports.redisInstance = require("./redis-instance");
exports.resourceManagerLien = require("./resource-manager-lien");
exports.sccEventThreatDetectionCustomModule = require("./scc-event-threat-detection-custom-module");
exports.sccFolderCustomModule = require("./scc-folder-custom-module");
exports.sccFolderNotificationConfig = require("./scc-folder-notification-config");
exports.sccFolderSccBigQueryExport = require("./scc-folder-scc-big-query-export");
exports.sccManagementFolderSecurityHealthAnalyticsCustomModule = require("./scc-management-folder-security-health-analytics-custom-module");
exports.sccManagementOrganizationEventThreatDetectionCustomModule = require("./scc-management-organization-event-threat-detection-custom-module");
exports.sccManagementOrganizationSecurityHealthAnalyticsCustomModule = require("./scc-management-organization-security-health-analytics-custom-module");
exports.sccManagementProjectSecurityHealthAnalyticsCustomModule = require("./scc-management-project-security-health-analytics-custom-module");
exports.sccMuteConfig = require("./scc-mute-config");
exports.sccNotificationConfig = require("./scc-notification-config");
exports.sccOrganizationCustomModule = require("./scc-organization-custom-module");
exports.sccOrganizationSccBigQueryExport = require("./scc-organization-scc-big-query-export");
exports.sccProjectCustomModule = require("./scc-project-custom-module");
exports.sccProjectNotificationConfig = require("./scc-project-notification-config");
exports.sccProjectSccBigQueryExport = require("./scc-project-scc-big-query-export");
exports.sccSource = require("./scc-source");
exports.sccSourceIamBinding = require("./scc-source-iam-binding");
exports.sccSourceIamMember = require("./scc-source-iam-member");
exports.sccSourceIamPolicy = require("./scc-source-iam-policy");
exports.sccV2FolderMuteConfig = require("./scc-v2-folder-mute-config");
exports.sccV2FolderNotificationConfig = require("./scc-v2-folder-notification-config");
exports.sccV2FolderSccBigQueryExport = require("./scc-v2-folder-scc-big-query-export");
exports.sccV2OrganizationMuteConfig = require("./scc-v2-organization-mute-config");
exports.sccV2OrganizationNotificationConfig = require("./scc-v2-organization-notification-config");
exports.sccV2OrganizationSccBigQueryExport = require("./scc-v2-organization-scc-big-query-export");
exports.sccV2OrganizationSccBigQueryExports = require("./scc-v2-organization-scc-big-query-exports");
exports.sccV2OrganizationSource = require("./scc-v2-organization-source");
exports.sccV2OrganizationSourceIamBinding = require("./scc-v2-organization-source-iam-binding");
exports.sccV2OrganizationSourceIamMember = require("./scc-v2-organization-source-iam-member");
exports.sccV2OrganizationSourceIamPolicy = require("./scc-v2-organization-source-iam-policy");
exports.sccV2ProjectMuteConfig = require("./scc-v2-project-mute-config");
exports.sccV2ProjectNotificationConfig = require("./scc-v2-project-notification-config");
exports.sccV2ProjectSccBigQueryExport = require("./scc-v2-project-scc-big-query-export");
exports.secretManagerRegionalSecret = require("./secret-manager-regional-secret");
exports.secretManagerRegionalSecretIamBinding = require("./secret-manager-regional-secret-iam-binding");
exports.secretManagerRegionalSecretIamMember = require("./secret-manager-regional-secret-iam-member");
exports.secretManagerRegionalSecretIamPolicy = require("./secret-manager-regional-secret-iam-policy");
exports.secretManagerRegionalSecretVersion = require("./secret-manager-regional-secret-version");
exports.secretManagerSecret = require("./secret-manager-secret");
exports.secretManagerSecretIamBinding = require("./secret-manager-secret-iam-binding");
exports.secretManagerSecretIamMember = require("./secret-manager-secret-iam-member");
exports.secretManagerSecretIamPolicy = require("./secret-manager-secret-iam-policy");
exports.secretManagerSecretVersion = require("./secret-manager-secret-version");
exports.secureSourceManagerBranchRule = require("./secure-source-manager-branch-rule");
exports.secureSourceManagerInstance = require("./secure-source-manager-instance");
exports.secureSourceManagerInstanceIamBinding = require("./secure-source-manager-instance-iam-binding");
exports.secureSourceManagerInstanceIamMember = require("./secure-source-manager-instance-iam-member");
exports.secureSourceManagerInstanceIamPolicy = require("./secure-source-manager-instance-iam-policy");
exports.secureSourceManagerRepository = require("./secure-source-manager-repository");
exports.secureSourceManagerRepositoryIamBinding = require("./secure-source-manager-repository-iam-binding");
exports.secureSourceManagerRepositoryIamMember = require("./secure-source-manager-repository-iam-member");
exports.secureSourceManagerRepositoryIamPolicy = require("./secure-source-manager-repository-iam-policy");
exports.securityposturePosture = require("./securityposture-posture");
exports.securityposturePostureDeployment = require("./securityposture-posture-deployment");
exports.serviceAccount = require("./service-account");
exports.serviceAccountIamBinding = require("./service-account-iam-binding");
exports.serviceAccountIamMember = require("./service-account-iam-member");
exports.serviceAccountIamPolicy = require("./service-account-iam-policy");
exports.serviceAccountKey = require("./service-account-key");
exports.serviceNetworkingConnection = require("./service-networking-connection");
exports.serviceNetworkingPeeredDnsDomain = require("./service-networking-peered-dns-domain");
exports.serviceNetworkingVpcServiceControls = require("./service-networking-vpc-service-controls");
exports.siteVerificationOwner = require("./site-verification-owner");
exports.siteVerificationWebResource = require("./site-verification-web-resource");
exports.sourcerepoRepository = require("./sourcerepo-repository");
exports.sourcerepoRepositoryIamBinding = require("./sourcerepo-repository-iam-binding");
exports.sourcerepoRepositoryIamMember = require("./sourcerepo-repository-iam-member");
exports.sourcerepoRepositoryIamPolicy = require("./sourcerepo-repository-iam-policy");
exports.spannerBackupSchedule = require("./spanner-backup-schedule");
exports.spannerDatabase = require("./spanner-database");
exports.spannerDatabaseIamBinding = require("./spanner-database-iam-binding");
exports.spannerDatabaseIamMember = require("./spanner-database-iam-member");
exports.spannerDatabaseIamPolicy = require("./spanner-database-iam-policy");
exports.spannerInstance = require("./spanner-instance");
exports.spannerInstanceConfig = require("./spanner-instance-config");
exports.spannerInstanceIamBinding = require("./spanner-instance-iam-binding");
exports.spannerInstanceIamMember = require("./spanner-instance-iam-member");
exports.spannerInstanceIamPolicy = require("./spanner-instance-iam-policy");
exports.sqlDatabase = require("./sql-database");
exports.sqlDatabaseInstance = require("./sql-database-instance");
exports.sqlSourceRepresentationInstance = require("./sql-source-representation-instance");
exports.sqlSslCert = require("./sql-ssl-cert");
exports.sqlUser = require("./sql-user");
exports.storageBucket = require("./storage-bucket");
exports.storageBucketAccessControl = require("./storage-bucket-access-control");
exports.storageBucketAcl = require("./storage-bucket-acl");
exports.storageBucketIamBinding = require("./storage-bucket-iam-binding");
exports.storageBucketIamMember = require("./storage-bucket-iam-member");
exports.storageBucketIamPolicy = require("./storage-bucket-iam-policy");
exports.storageBucketObject = require("./storage-bucket-object");
exports.storageDefaultObjectAccessControl = require("./storage-default-object-access-control");
exports.storageDefaultObjectAcl = require("./storage-default-object-acl");
exports.storageHmacKey = require("./storage-hmac-key");
exports.storageInsightsReportConfig = require("./storage-insights-report-config");
exports.storageManagedFolder = require("./storage-managed-folder");
exports.storageManagedFolderIamBinding = require("./storage-managed-folder-iam-binding");
exports.storageManagedFolderIamMember = require("./storage-managed-folder-iam-member");
exports.storageManagedFolderIamPolicy = require("./storage-managed-folder-iam-policy");
exports.storageNotification = require("./storage-notification");
exports.storageObjectAccessControl = require("./storage-object-access-control");
exports.storageObjectAcl = require("./storage-object-acl");
exports.storageTransferAgentPool = require("./storage-transfer-agent-pool");
exports.storageTransferJob = require("./storage-transfer-job");
exports.tagsLocationTagBinding = require("./tags-location-tag-binding");
exports.tagsTagBinding = require("./tags-tag-binding");
exports.tagsTagKey = require("./tags-tag-key");
exports.tagsTagKeyIamBinding = require("./tags-tag-key-iam-binding");
exports.tagsTagKeyIamMember = require("./tags-tag-key-iam-member");
exports.tagsTagKeyIamPolicy = require("./tags-tag-key-iam-policy");
exports.tagsTagValue = require("./tags-tag-value");
exports.tagsTagValueIamBinding = require("./tags-tag-value-iam-binding");
exports.tagsTagValueIamMember = require("./tags-tag-value-iam-member");
exports.tagsTagValueIamPolicy = require("./tags-tag-value-iam-policy");
exports.tpuNode = require("./tpu-node");
exports.transcoderJob = require("./transcoder-job");
exports.transcoderJobTemplate = require("./transcoder-job-template");
exports.vertexAiDataset = require("./vertex-ai-dataset");
exports.vertexAiDeploymentResourcePool = require("./vertex-ai-deployment-resource-pool");
exports.vertexAiEndpoint = require("./vertex-ai-endpoint");
exports.vertexAiFeatureGroup = require("./vertex-ai-feature-group");
exports.vertexAiFeatureGroupFeature = require("./vertex-ai-feature-group-feature");
exports.vertexAiFeatureOnlineStore = require("./vertex-ai-feature-online-store");
exports.vertexAiFeatureOnlineStoreFeatureview = require("./vertex-ai-feature-online-store-featureview");
exports.vertexAiFeaturestore = require("./vertex-ai-featurestore");
exports.vertexAiFeaturestoreEntitytype = require("./vertex-ai-featurestore-entitytype");
exports.vertexAiFeaturestoreEntitytypeFeature = require("./vertex-ai-featurestore-entitytype-feature");
exports.vertexAiIndex = require("./vertex-ai-index");
exports.vertexAiIndexEndpoint = require("./vertex-ai-index-endpoint");
exports.vertexAiIndexEndpointDeployedIndex = require("./vertex-ai-index-endpoint-deployed-index");
exports.vertexAiTensorboard = require("./vertex-ai-tensorboard");
exports.vmwareengineCluster = require("./vmwareengine-cluster");
exports.vmwareengineExternalAccessRule = require("./vmwareengine-external-access-rule");
exports.vmwareengineExternalAddress = require("./vmwareengine-external-address");
exports.vmwareengineNetwork = require("./vmwareengine-network");
exports.vmwareengineNetworkPeering = require("./vmwareengine-network-peering");
exports.vmwareengineNetworkPolicy = require("./vmwareengine-network-policy");
exports.vmwareenginePrivateCloud = require("./vmwareengine-private-cloud");
exports.vmwareengineSubnet = require("./vmwareengine-subnet");
exports.vpcAccessConnector = require("./vpc-access-connector");
exports.workbenchInstance = require("./workbench-instance");
exports.workbenchInstanceIamBinding = require("./workbench-instance-iam-binding");
exports.workbenchInstanceIamMember = require("./workbench-instance-iam-member");
exports.workbenchInstanceIamPolicy = require("./workbench-instance-iam-policy");
exports.workflowsWorkflow = require("./workflows-workflow");
exports.dataGoogleAccessApprovalFolderServiceAccount = require("./data-google-access-approval-folder-service-account");
exports.dataGoogleAccessApprovalOrganizationServiceAccount = require("./data-google-access-approval-organization-service-account");
exports.dataGoogleAccessApprovalProjectServiceAccount = require("./data-google-access-approval-project-service-account");
exports.dataGoogleAccessContextManagerAccessPolicy = require("./data-google-access-context-manager-access-policy");
exports.dataGoogleAccessContextManagerAccessPolicyIamPolicy = require("./data-google-access-context-manager-access-policy-iam-policy");
exports.dataGoogleActiveFolder = require("./data-google-active-folder");
exports.dataGoogleAlloydbLocations = require("./data-google-alloydb-locations");
exports.dataGoogleAlloydbSupportedDatabaseFlags = require("./data-google-alloydb-supported-database-flags");
exports.dataGoogleApigeeEnvironmentIamPolicy = require("./data-google-apigee-environment-iam-policy");
exports.dataGoogleAppEngineDefaultServiceAccount = require("./data-google-app-engine-default-service-account");
exports.dataGoogleApphubApplication = require("./data-google-apphub-application");
exports.dataGoogleApphubDiscoveredService = require("./data-google-apphub-discovered-service");
exports.dataGoogleApphubDiscoveredWorkload = require("./data-google-apphub-discovered-workload");
exports.dataGoogleArtifactRegistryDockerImage = require("./data-google-artifact-registry-docker-image");
exports.dataGoogleArtifactRegistryLocations = require("./data-google-artifact-registry-locations");
exports.dataGoogleArtifactRegistryRepository = require("./data-google-artifact-registry-repository");
exports.dataGoogleArtifactRegistryRepositoryIamPolicy = require("./data-google-artifact-registry-repository-iam-policy");
exports.dataGoogleBackupDrBackupVault = require("./data-google-backup-dr-backup-vault");
exports.dataGoogleBeyondcorpAppConnection = require("./data-google-beyondcorp-app-connection");
exports.dataGoogleBeyondcorpAppConnector = require("./data-google-beyondcorp-app-connector");
exports.dataGoogleBeyondcorpAppGateway = require("./data-google-beyondcorp-app-gateway");
exports.dataGoogleBigqueryAnalyticsHubDataExchangeIamPolicy = require("./data-google-bigquery-analytics-hub-data-exchange-iam-policy");
exports.dataGoogleBigqueryAnalyticsHubListingIamPolicy = require("./data-google-bigquery-analytics-hub-listing-iam-policy");
exports.dataGoogleBigqueryConnectionIamPolicy = require("./data-google-bigquery-connection-iam-policy");
exports.dataGoogleBigqueryDatapolicyDataPolicyIamPolicy = require("./data-google-bigquery-datapolicy-data-policy-iam-policy");
exports.dataGoogleBigqueryDataset = require("./data-google-bigquery-dataset");
exports.dataGoogleBigqueryDatasetIamPolicy = require("./data-google-bigquery-dataset-iam-policy");
exports.dataGoogleBigqueryDefaultServiceAccount = require("./data-google-bigquery-default-service-account");
exports.dataGoogleBigqueryTableIamPolicy = require("./data-google-bigquery-table-iam-policy");
exports.dataGoogleBigqueryTables = require("./data-google-bigquery-tables");
exports.dataGoogleBigtableInstanceIamPolicy = require("./data-google-bigtable-instance-iam-policy");
exports.dataGoogleBigtableTableIamPolicy = require("./data-google-bigtable-table-iam-policy");
exports.dataGoogleBillingAccount = require("./data-google-billing-account");
exports.dataGoogleBillingAccountIamPolicy = require("./data-google-billing-account-iam-policy");
exports.dataGoogleBinaryAuthorizationAttestorIamPolicy = require("./data-google-binary-authorization-attestor-iam-policy");
exports.dataGoogleCertificateManagerCertificateMap = require("./data-google-certificate-manager-certificate-map");
exports.dataGoogleCertificateManagerCertificates = require("./data-google-certificate-manager-certificates");
exports.dataGoogleClientConfig = require("./data-google-client-config");
exports.dataGoogleClientOpenidUserinfo = require("./data-google-client-openid-userinfo");
exports.dataGoogleCloudAssetSearchAllResources = require("./data-google-cloud-asset-search-all-resources");
exports.dataGoogleCloudIdentityGroupLookup = require("./data-google-cloud-identity-group-lookup");
exports.dataGoogleCloudIdentityGroupMemberships = require("./data-google-cloud-identity-group-memberships");
exports.dataGoogleCloudIdentityGroupTransitiveMemberships = require("./data-google-cloud-identity-group-transitive-memberships");
exports.dataGoogleCloudIdentityGroups = require("./data-google-cloud-identity-groups");
exports.dataGoogleCloudQuotasQuotaInfo = require("./data-google-cloud-quotas-quota-info");
exports.dataGoogleCloudQuotasQuotaInfos = require("./data-google-cloud-quotas-quota-infos");
exports.dataGoogleCloudRunLocations = require("./data-google-cloud-run-locations");
exports.dataGoogleCloudRunService = require("./data-google-cloud-run-service");
exports.dataGoogleCloudRunServiceIamPolicy = require("./data-google-cloud-run-service-iam-policy");
exports.dataGoogleCloudRunV2Job = require("./data-google-cloud-run-v2-job");
exports.dataGoogleCloudRunV2JobIamPolicy = require("./data-google-cloud-run-v2-job-iam-policy");
exports.dataGoogleCloudRunV2Service = require("./data-google-cloud-run-v2-service");
exports.dataGoogleCloudRunV2ServiceIamPolicy = require("./data-google-cloud-run-v2-service-iam-policy");
exports.dataGoogleCloudTasksQueueIamPolicy = require("./data-google-cloud-tasks-queue-iam-policy");
exports.dataGoogleCloudbuildTrigger = require("./data-google-cloudbuild-trigger");
exports.dataGoogleCloudbuildv2ConnectionIamPolicy = require("./data-google-cloudbuildv2-connection-iam-policy");
exports.dataGoogleClouddeployCustomTargetTypeIamPolicy = require("./data-google-clouddeploy-custom-target-type-iam-policy");
exports.dataGoogleClouddeployDeliveryPipelineIamPolicy = require("./data-google-clouddeploy-delivery-pipeline-iam-policy");
exports.dataGoogleClouddeployTargetIamPolicy = require("./data-google-clouddeploy-target-iam-policy");
exports.dataGoogleCloudfunctions2Function = require("./data-google-cloudfunctions2-function");
exports.dataGoogleCloudfunctions2FunctionIamPolicy = require("./data-google-cloudfunctions2-function-iam-policy");
exports.dataGoogleCloudfunctionsFunction = require("./data-google-cloudfunctions-function");
exports.dataGoogleCloudfunctionsFunctionIamPolicy = require("./data-google-cloudfunctions-function-iam-policy");
exports.dataGoogleComposerEnvironment = require("./data-google-composer-environment");
exports.dataGoogleComposerImageVersions = require("./data-google-composer-image-versions");
exports.dataGoogleComposerUserWorkloadsConfigMap = require("./data-google-composer-user-workloads-config-map");
exports.dataGoogleComposerUserWorkloadsSecret = require("./data-google-composer-user-workloads-secret");
exports.dataGoogleComputeAddress = require("./data-google-compute-address");
exports.dataGoogleComputeAddresses = require("./data-google-compute-addresses");
exports.dataGoogleComputeBackendBucket = require("./data-google-compute-backend-bucket");
exports.dataGoogleComputeBackendService = require("./data-google-compute-backend-service");
exports.dataGoogleComputeDefaultServiceAccount = require("./data-google-compute-default-service-account");
exports.dataGoogleComputeDisk = require("./data-google-compute-disk");
exports.dataGoogleComputeDiskIamPolicy = require("./data-google-compute-disk-iam-policy");
exports.dataGoogleComputeForwardingRule = require("./data-google-compute-forwarding-rule");
exports.dataGoogleComputeForwardingRules = require("./data-google-compute-forwarding-rules");
exports.dataGoogleComputeGlobalAddress = require("./data-google-compute-global-address");
exports.dataGoogleComputeGlobalForwardingRule = require("./data-google-compute-global-forwarding-rule");
exports.dataGoogleComputeHaVpnGateway = require("./data-google-compute-ha-vpn-gateway");
exports.dataGoogleComputeHealthCheck = require("./data-google-compute-health-check");
exports.dataGoogleComputeImage = require("./data-google-compute-image");
exports.dataGoogleComputeImageIamPolicy = require("./data-google-compute-image-iam-policy");
exports.dataGoogleComputeInstance = require("./data-google-compute-instance");
exports.dataGoogleComputeInstanceGroup = require("./data-google-compute-instance-group");
exports.dataGoogleComputeInstanceGroupManager = require("./data-google-compute-instance-group-manager");
exports.dataGoogleComputeInstanceGuestAttributes = require("./data-google-compute-instance-guest-attributes");
exports.dataGoogleComputeInstanceIamPolicy = require("./data-google-compute-instance-iam-policy");
exports.dataGoogleComputeInstanceSerialPort = require("./data-google-compute-instance-serial-port");
exports.dataGoogleComputeInstanceTemplate = require("./data-google-compute-instance-template");
exports.dataGoogleComputeLbIpRanges = require("./data-google-compute-lb-ip-ranges");
exports.dataGoogleComputeMachineTypes = require("./data-google-compute-machine-types");
exports.dataGoogleComputeNetwork = require("./data-google-compute-network");
exports.dataGoogleComputeNetworkEndpointGroup = require("./data-google-compute-network-endpoint-group");
exports.dataGoogleComputeNetworkPeering = require("./data-google-compute-network-peering");
exports.dataGoogleComputeNetworks = require("./data-google-compute-networks");
exports.dataGoogleComputeNodeTypes = require("./data-google-compute-node-types");
exports.dataGoogleComputeRegionDisk = require("./data-google-compute-region-disk");
exports.dataGoogleComputeRegionDiskIamPolicy = require("./data-google-compute-region-disk-iam-policy");
exports.dataGoogleComputeRegionInstanceGroup = require("./data-google-compute-region-instance-group");
exports.dataGoogleComputeRegionInstanceGroupManager = require("./data-google-compute-region-instance-group-manager");
exports.dataGoogleComputeRegionInstanceTemplate = require("./data-google-compute-region-instance-template");
exports.dataGoogleComputeRegionNetworkEndpointGroup = require("./data-google-compute-region-network-endpoint-group");
exports.dataGoogleComputeRegionSslCertificate = require("./data-google-compute-region-ssl-certificate");
exports.dataGoogleComputeRegions = require("./data-google-compute-regions");
exports.dataGoogleComputeReservation = require("./data-google-compute-reservation");
exports.dataGoogleComputeResourcePolicy = require("./data-google-compute-resource-policy");
exports.dataGoogleComputeRouter = require("./data-google-compute-router");
exports.dataGoogleComputeRouterNat = require("./data-google-compute-router-nat");
exports.dataGoogleComputeRouterStatus = require("./data-google-compute-router-status");
exports.dataGoogleComputeSecurityPolicy = require("./data-google-compute-security-policy");
exports.dataGoogleComputeSnapshot = require("./data-google-compute-snapshot");
exports.dataGoogleComputeSnapshotIamPolicy = require("./data-google-compute-snapshot-iam-policy");
exports.dataGoogleComputeSslCertificate = require("./data-google-compute-ssl-certificate");
exports.dataGoogleComputeSslPolicy = require("./data-google-compute-ssl-policy");
exports.dataGoogleComputeSubnetwork = require("./data-google-compute-subnetwork");
exports.dataGoogleComputeSubnetworkIamPolicy = require("./data-google-compute-subnetwork-iam-policy");
exports.dataGoogleComputeSubnetworks = require("./data-google-compute-subnetworks");
exports.dataGoogleComputeVpnGateway = require("./data-google-compute-vpn-gateway");
exports.dataGoogleComputeZones = require("./data-google-compute-zones");
exports.dataGoogleContainerAnalysisNoteIamPolicy = require("./data-google-container-analysis-note-iam-policy");
exports.dataGoogleContainerAttachedInstallManifest = require("./data-google-container-attached-install-manifest");
exports.dataGoogleContainerAttachedVersions = require("./data-google-container-attached-versions");
exports.dataGoogleContainerAwsVersions = require("./data-google-container-aws-versions");
exports.dataGoogleContainerAzureVersions = require("./data-google-container-azure-versions");
exports.dataGoogleContainerCluster = require("./data-google-container-cluster");
exports.dataGoogleContainerEngineVersions = require("./data-google-container-engine-versions");
exports.dataGoogleContainerRegistryImage = require("./data-google-container-registry-image");
exports.dataGoogleContainerRegistryRepository = require("./data-google-container-registry-repository");
exports.dataGoogleDataCatalogEntryGroupIamPolicy = require("./data-google-data-catalog-entry-group-iam-policy");
exports.dataGoogleDataCatalogPolicyTagIamPolicy = require("./data-google-data-catalog-policy-tag-iam-policy");
exports.dataGoogleDataCatalogTagTemplateIamPolicy = require("./data-google-data-catalog-tag-template-iam-policy");
exports.dataGoogleDataCatalogTaxonomyIamPolicy = require("./data-google-data-catalog-taxonomy-iam-policy");
exports.dataGoogleDataFusionInstanceIamPolicy = require("./data-google-data-fusion-instance-iam-policy");
exports.dataGoogleDataplexAspectTypeIamPolicy = require("./data-google-dataplex-aspect-type-iam-policy");
exports.dataGoogleDataplexAssetIamPolicy = require("./data-google-dataplex-asset-iam-policy");
exports.dataGoogleDataplexDatascanIamPolicy = require("./data-google-dataplex-datascan-iam-policy");
exports.dataGoogleDataplexEntryGroupIamPolicy = require("./data-google-dataplex-entry-group-iam-policy");
exports.dataGoogleDataplexEntryTypeIamPolicy = require("./data-google-dataplex-entry-type-iam-policy");
exports.dataGoogleDataplexLakeIamPolicy = require("./data-google-dataplex-lake-iam-policy");
exports.dataGoogleDataplexTaskIamPolicy = require("./data-google-dataplex-task-iam-policy");
exports.dataGoogleDataplexZoneIamPolicy = require("./data-google-dataplex-zone-iam-policy");
exports.dataGoogleDataprocAutoscalingPolicyIamPolicy = require("./data-google-dataproc-autoscaling-policy-iam-policy");
exports.dataGoogleDataprocClusterIamPolicy = require("./data-google-dataproc-cluster-iam-policy");
exports.dataGoogleDataprocJobIamPolicy = require("./data-google-dataproc-job-iam-policy");
exports.dataGoogleDataprocMetastoreFederationIamPolicy = require("./data-google-dataproc-metastore-federation-iam-policy");
exports.dataGoogleDataprocMetastoreService = require("./data-google-dataproc-metastore-service");
exports.dataGoogleDataprocMetastoreServiceIamPolicy = require("./data-google-dataproc-metastore-service-iam-policy");
exports.dataGoogleDatastreamStaticIps = require("./data-google-datastream-static-ips");
exports.dataGoogleDnsKeys = require("./data-google-dns-keys");
exports.dataGoogleDnsManagedZone = require("./data-google-dns-managed-zone");
exports.dataGoogleDnsManagedZoneIamPolicy = require("./data-google-dns-managed-zone-iam-policy");
exports.dataGoogleDnsManagedZones = require("./data-google-dns-managed-zones");
exports.dataGoogleDnsRecordSet = require("./data-google-dns-record-set");
exports.dataGoogleEndpointsServiceConsumersIamPolicy = require("./data-google-endpoints-service-consumers-iam-policy");
exports.dataGoogleEndpointsServiceIamPolicy = require("./data-google-endpoints-service-iam-policy");
exports.dataGoogleFilestoreInstance = require("./data-google-filestore-instance");
exports.dataGoogleFolder = require("./data-google-folder");
exports.dataGoogleFolderIamPolicy = require("./data-google-folder-iam-policy");
exports.dataGoogleFolderOrganizationPolicy = require("./data-google-folder-organization-policy");
exports.dataGoogleFolders = require("./data-google-folders");
exports.dataGoogleGkeBackupBackupPlanIamPolicy = require("./data-google-gke-backup-backup-plan-iam-policy");
exports.dataGoogleGkeBackupRestorePlanIamPolicy = require("./data-google-gke-backup-restore-plan-iam-policy");
exports.dataGoogleGkeHubFeatureIamPolicy = require("./data-google-gke-hub-feature-iam-policy");
exports.dataGoogleGkeHubMembershipBinding = require("./data-google-gke-hub-membership-binding");
exports.dataGoogleGkeHubMembershipIamPolicy = require("./data-google-gke-hub-membership-iam-policy");
exports.dataGoogleGkeHubScopeIamPolicy = require("./data-google-gke-hub-scope-iam-policy");
exports.dataGoogleHealthcareConsentStoreIamPolicy = require("./data-google-healthcare-consent-store-iam-policy");
exports.dataGoogleHealthcareDatasetIamPolicy = require("./data-google-healthcare-dataset-iam-policy");
exports.dataGoogleHealthcareDicomStoreIamPolicy = require("./data-google-healthcare-dicom-store-iam-policy");
exports.dataGoogleHealthcareFhirStoreIamPolicy = require("./data-google-healthcare-fhir-store-iam-policy");
exports.dataGoogleHealthcareHl7V2StoreIamPolicy = require("./data-google-healthcare-hl7-v2-store-iam-policy");
exports.dataGoogleIamPolicy = require("./data-google-iam-policy");
exports.dataGoogleIamRole = require("./data-google-iam-role");
exports.dataGoogleIamTestablePermissions = require("./data-google-iam-testable-permissions");
exports.dataGoogleIapAppEngineServiceIamPolicy = require("./data-google-iap-app-engine-service-iam-policy");
exports.dataGoogleIapAppEngineVersionIamPolicy = require("./data-google-iap-app-engine-version-iam-policy");
exports.dataGoogleIapClient = require("./data-google-iap-client");
exports.dataGoogleIapTunnelDestGroupIamPolicy = require("./data-google-iap-tunnel-dest-group-iam-policy");
exports.dataGoogleIapTunnelIamPolicy = require("./data-google-iap-tunnel-iam-policy");
exports.dataGoogleIapTunnelInstanceIamPolicy = require("./data-google-iap-tunnel-instance-iam-policy");
exports.dataGoogleIapWebBackendServiceIamPolicy = require("./data-google-iap-web-backend-service-iam-policy");
exports.dataGoogleIapWebIamPolicy = require("./data-google-iap-web-iam-policy");
exports.dataGoogleIapWebRegionBackendServiceIamPolicy = require("./data-google-iap-web-region-backend-service-iam-policy");
exports.dataGoogleIapWebTypeAppEngineIamPolicy = require("./data-google-iap-web-type-app-engine-iam-policy");
exports.dataGoogleIapWebTypeComputeIamPolicy = require("./data-google-iap-web-type-compute-iam-policy");
exports.dataGoogleKmsCryptoKey = require("./data-google-kms-crypto-key");
exports.dataGoogleKmsCryptoKeyIamPolicy = require("./data-google-kms-crypto-key-iam-policy");
exports.dataGoogleKmsCryptoKeyLatestVersion = require("./data-google-kms-crypto-key-latest-version");
exports.dataGoogleKmsCryptoKeyVersion = require("./data-google-kms-crypto-key-version");
exports.dataGoogleKmsCryptoKeyVersions = require("./data-google-kms-crypto-key-versions");
exports.dataGoogleKmsCryptoKeys = require("./data-google-kms-crypto-keys");
exports.dataGoogleKmsEkmConnectionIamPolicy = require("./data-google-kms-ekm-connection-iam-policy");
exports.dataGoogleKmsKeyRing = require("./data-google-kms-key-ring");
exports.dataGoogleKmsKeyRingIamPolicy = require("./data-google-kms-key-ring-iam-policy");
exports.dataGoogleKmsKeyRings = require("./data-google-kms-key-rings");
exports.dataGoogleKmsSecret = require("./data-google-kms-secret");
exports.dataGoogleKmsSecretCiphertext = require("./data-google-kms-secret-ciphertext");
exports.dataGoogleLoggingFolderSettings = require("./data-google-logging-folder-settings");
exports.dataGoogleLoggingLogViewIamPolicy = require("./data-google-logging-log-view-iam-policy");
exports.dataGoogleLoggingOrganizationSettings = require("./data-google-logging-organization-settings");
exports.dataGoogleLoggingProjectCmekSettings = require("./data-google-logging-project-cmek-settings");
exports.dataGoogleLoggingProjectSettings = require("./data-google-logging-project-settings");
exports.dataGoogleLoggingSink = require("./data-google-logging-sink");
exports.dataGoogleMonitoringAppEngineService = require("./data-google-monitoring-app-engine-service");
exports.dataGoogleMonitoringClusterIstioService = require("./data-google-monitoring-cluster-istio-service");
exports.dataGoogleMonitoringIstioCanonicalService = require("./data-google-monitoring-istio-canonical-service");
exports.dataGoogleMonitoringMeshIstioService = require("./data-google-monitoring-mesh-istio-service");
exports.dataGoogleMonitoringNotificationChannel = require("./data-google-monitoring-notification-channel");
exports.dataGoogleMonitoringUptimeCheckIps = require("./data-google-monitoring-uptime-check-ips");
exports.dataGoogleNetblockIpRanges = require("./data-google-netblock-ip-ranges");
exports.dataGoogleNetworkSecurityAddressGroupIamPolicy = require("./data-google-network-security-address-group-iam-policy");
exports.dataGoogleNotebooksInstanceIamPolicy = require("./data-google-notebooks-instance-iam-policy");
exports.dataGoogleNotebooksRuntimeIamPolicy = require("./data-google-notebooks-runtime-iam-policy");
exports.dataGoogleOracleDatabaseAutonomousDatabase = require("./data-google-oracle-database-autonomous-database");
exports.dataGoogleOracleDatabaseAutonomousDatabases = require("./data-google-oracle-database-autonomous-databases");
exports.dataGoogleOracleDatabaseCloudExadataInfrastructure = require("./data-google-oracle-database-cloud-exadata-infrastructure");
exports.dataGoogleOracleDatabaseCloudExadataInfrastructures = require("./data-google-oracle-database-cloud-exadata-infrastructures");
exports.dataGoogleOracleDatabaseCloudVmCluster = require("./data-google-oracle-database-cloud-vm-cluster");
exports.dataGoogleOracleDatabaseCloudVmClusters = require("./data-google-oracle-database-cloud-vm-clusters");
exports.dataGoogleOracleDatabaseDbNodes = require("./data-google-oracle-database-db-nodes");
exports.dataGoogleOracleDatabaseDbServers = require("./data-google-oracle-database-db-servers");
exports.dataGoogleOrganization = require("./data-google-organization");
exports.dataGoogleOrganizationIamPolicy = require("./data-google-organization-iam-policy");
exports.dataGooglePrivatecaCaPoolIamPolicy = require("./data-google-privateca-ca-pool-iam-policy");
exports.dataGooglePrivatecaCertificateAuthority = require("./data-google-privateca-certificate-authority");
exports.dataGooglePrivatecaCertificateTemplateIamPolicy = require("./data-google-privateca-certificate-template-iam-policy");
exports.dataGooglePrivilegedAccessManagerEntitlement = require("./data-google-privileged-access-manager-entitlement");
exports.dataGoogleProject = require("./data-google-project");
exports.dataGoogleProjectIamPolicy = require("./data-google-project-iam-policy");
exports.dataGoogleProjectOrganizationPolicy = require("./data-google-project-organization-policy");
exports.dataGoogleProjectService = require("./data-google-project-service");
exports.dataGoogleProjects = require("./data-google-projects");
exports.dataGooglePubsubSchemaIamPolicy = require("./data-google-pubsub-schema-iam-policy");
exports.dataGooglePubsubSubscription = require("./data-google-pubsub-subscription");
exports.dataGooglePubsubSubscriptionIamPolicy = require("./data-google-pubsub-subscription-iam-policy");
exports.dataGooglePubsubTopic = require("./data-google-pubsub-topic");
exports.dataGooglePubsubTopicIamPolicy = require("./data-google-pubsub-topic-iam-policy");
exports.dataGoogleRedisInstance = require("./data-google-redis-instance");
exports.dataGoogleSccSourceIamPolicy = require("./data-google-scc-source-iam-policy");
exports.dataGoogleSccV2OrganizationSourceIamPolicy = require("./data-google-scc-v2-organization-source-iam-policy");
exports.dataGoogleSecretManagerRegionalSecret = require("./data-google-secret-manager-regional-secret");
exports.dataGoogleSecretManagerRegionalSecretIamPolicy = require("./data-google-secret-manager-regional-secret-iam-policy");
exports.dataGoogleSecretManagerRegionalSecretVersion = require("./data-google-secret-manager-regional-secret-version");
exports.dataGoogleSecretManagerRegionalSecretVersionAccess = require("./data-google-secret-manager-regional-secret-version-access");
exports.dataGoogleSecretManagerRegionalSecrets = require("./data-google-secret-manager-regional-secrets");
exports.dataGoogleSecretManagerSecret = require("./data-google-secret-manager-secret");
exports.dataGoogleSecretManagerSecretIamPolicy = require("./data-google-secret-manager-secret-iam-policy");
exports.dataGoogleSecretManagerSecretVersion = require("./data-google-secret-manager-secret-version");
exports.dataGoogleSecretManagerSecretVersionAccess = require("./data-google-secret-manager-secret-version-access");
exports.dataGoogleSecretManagerSecrets = require("./data-google-secret-manager-secrets");
exports.dataGoogleSecureSourceManagerInstanceIamPolicy = require("./data-google-secure-source-manager-instance-iam-policy");
exports.dataGoogleSecureSourceManagerRepositoryIamPolicy = require("./data-google-secure-source-manager-repository-iam-policy");
exports.dataGoogleServiceAccount = require("./data-google-service-account");
exports.dataGoogleServiceAccountAccessToken = require("./data-google-service-account-access-token");
exports.dataGoogleServiceAccountIamPolicy = require("./data-google-service-account-iam-policy");
exports.dataGoogleServiceAccountIdToken = require("./data-google-service-account-id-token");
exports.dataGoogleServiceAccountJwt = require("./data-google-service-account-jwt");
exports.dataGoogleServiceAccountKey = require("./data-google-service-account-key");
exports.dataGoogleServiceAccounts = require("./data-google-service-accounts");
exports.dataGoogleServiceNetworkingPeeredDnsDomain = require("./data-google-service-networking-peered-dns-domain");
exports.dataGoogleSiteVerificationToken = require("./data-google-site-verification-token");
exports.dataGoogleSourcerepoRepository = require("./data-google-sourcerepo-repository");
exports.dataGoogleSourcerepoRepositoryIamPolicy = require("./data-google-sourcerepo-repository-iam-policy");
exports.dataGoogleSpannerDatabase = require("./data-google-spanner-database");
exports.dataGoogleSpannerDatabaseIamPolicy = require("./data-google-spanner-database-iam-policy");
exports.dataGoogleSpannerInstance = require("./data-google-spanner-instance");
exports.dataGoogleSpannerInstanceIamPolicy = require("./data-google-spanner-instance-iam-policy");
exports.dataGoogleSqlBackupRun = require("./data-google-sql-backup-run");
exports.dataGoogleSqlCaCerts = require("./data-google-sql-ca-certs");
exports.dataGoogleSqlDatabase = require("./data-google-sql-database");
exports.dataGoogleSqlDatabaseInstance = require("./data-google-sql-database-instance");
exports.dataGoogleSqlDatabaseInstanceLatestRecoveryTime = require("./data-google-sql-database-instance-latest-recovery-time");
exports.dataGoogleSqlDatabaseInstances = require("./data-google-sql-database-instances");
exports.dataGoogleSqlDatabases = require("./data-google-sql-databases");
exports.dataGoogleSqlTiers = require("./data-google-sql-tiers");
exports.dataGoogleStorageBucket = require("./data-google-storage-bucket");
exports.dataGoogleStorageBucketIamPolicy = require("./data-google-storage-bucket-iam-policy");
exports.dataGoogleStorageBucketObject = require("./data-google-storage-bucket-object");
exports.dataGoogleStorageBucketObjectContent = require("./data-google-storage-bucket-object-content");
exports.dataGoogleStorageBucketObjects = require("./data-google-storage-bucket-objects");
exports.dataGoogleStorageBuckets = require("./data-google-storage-buckets");
exports.dataGoogleStorageManagedFolderIamPolicy = require("./data-google-storage-managed-folder-iam-policy");
exports.dataGoogleStorageObjectSignedUrl = require("./data-google-storage-object-signed-url");
exports.dataGoogleStorageProjectServiceAccount = require("./data-google-storage-project-service-account");
exports.dataGoogleStorageTransferProjectServiceAccount = require("./data-google-storage-transfer-project-service-account");
exports.dataGoogleTagsTagKey = require("./data-google-tags-tag-key");
exports.dataGoogleTagsTagKeyIamPolicy = require("./data-google-tags-tag-key-iam-policy");
exports.dataGoogleTagsTagKeys = require("./data-google-tags-tag-keys");
exports.dataGoogleTagsTagValue = require("./data-google-tags-tag-value");
exports.dataGoogleTagsTagValueIamPolicy = require("./data-google-tags-tag-value-iam-policy");
exports.dataGoogleTagsTagValues = require("./data-google-tags-tag-values");
exports.dataGoogleTpuTensorflowVersions = require("./data-google-tpu-tensorflow-versions");
exports.dataGoogleVertexAiIndex = require("./data-google-vertex-ai-index");
exports.dataGoogleVmwareengineCluster = require("./data-google-vmwareengine-cluster");
exports.dataGoogleVmwareengineExternalAccessRule = require("./data-google-vmwareengine-external-access-rule");
exports.dataGoogleVmwareengineExternalAddress = require("./data-google-vmwareengine-external-address");
exports.dataGoogleVmwareengineNetwork = require("./data-google-vmwareengine-network");
exports.dataGoogleVmwareengineNetworkPeering = require("./data-google-vmwareengine-network-peering");
exports.dataGoogleVmwareengineNetworkPolicy = require("./data-google-vmwareengine-network-policy");
exports.dataGoogleVmwareengineNsxCredentials = require("./data-google-vmwareengine-nsx-credentials");
exports.dataGoogleVmwareenginePrivateCloud = require("./data-google-vmwareengine-private-cloud");
exports.dataGoogleVmwareengineSubnet = require("./data-google-vmwareengine-subnet");
exports.dataGoogleVmwareengineVcenterCredentials = require("./data-google-vmwareengine-vcenter-credentials");
exports.dataGoogleVpcAccessConnector = require("./data-google-vpc-access-connector");
exports.dataGoogleWorkbenchInstanceIamPolicy = require("./data-google-workbench-instance-iam-policy");
exports.provider = require("./provider");
//# sourceMappingURL=data:application/json;base64,