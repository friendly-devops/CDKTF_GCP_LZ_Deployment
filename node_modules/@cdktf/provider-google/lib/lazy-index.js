"use strict";
/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
// generated by cdktf get
Object.defineProperty(exports, 'accessContextManagerAccessLevel', { get: function () { return require('./access-context-manager-access-level'); } });
Object.defineProperty(exports, 'accessContextManagerAccessLevelCondition', { get: function () { return require('./access-context-manager-access-level-condition'); } });
Object.defineProperty(exports, 'accessContextManagerAccessLevels', { get: function () { return require('./access-context-manager-access-levels'); } });
Object.defineProperty(exports, 'accessContextManagerAccessPolicy', { get: function () { return require('./access-context-manager-access-policy'); } });
Object.defineProperty(exports, 'accessContextManagerAccessPolicyIamBinding', { get: function () { return require('./access-context-manager-access-policy-iam-binding'); } });
Object.defineProperty(exports, 'accessContextManagerAccessPolicyIamMember', { get: function () { return require('./access-context-manager-access-policy-iam-member'); } });
Object.defineProperty(exports, 'accessContextManagerAccessPolicyIamPolicy', { get: function () { return require('./access-context-manager-access-policy-iam-policy'); } });
Object.defineProperty(exports, 'accessContextManagerAuthorizedOrgsDesc', { get: function () { return require('./access-context-manager-authorized-orgs-desc'); } });
Object.defineProperty(exports, 'accessContextManagerEgressPolicy', { get: function () { return require('./access-context-manager-egress-policy'); } });
Object.defineProperty(exports, 'accessContextManagerGcpUserAccessBinding', { get: function () { return require('./access-context-manager-gcp-user-access-binding'); } });
Object.defineProperty(exports, 'accessContextManagerIngressPolicy', { get: function () { return require('./access-context-manager-ingress-policy'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeter', { get: function () { return require('./access-context-manager-service-perimeter'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeterDryRunEgressPolicy', { get: function () { return require('./access-context-manager-service-perimeter-dry-run-egress-policy'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeterDryRunIngressPolicy', { get: function () { return require('./access-context-manager-service-perimeter-dry-run-ingress-policy'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeterDryRunResource', { get: function () { return require('./access-context-manager-service-perimeter-dry-run-resource'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeterEgressPolicy', { get: function () { return require('./access-context-manager-service-perimeter-egress-policy'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeterIngressPolicy', { get: function () { return require('./access-context-manager-service-perimeter-ingress-policy'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeterResource', { get: function () { return require('./access-context-manager-service-perimeter-resource'); } });
Object.defineProperty(exports, 'accessContextManagerServicePerimeters', { get: function () { return require('./access-context-manager-service-perimeters'); } });
Object.defineProperty(exports, 'activeDirectoryDomain', { get: function () { return require('./active-directory-domain'); } });
Object.defineProperty(exports, 'activeDirectoryDomainTrust', { get: function () { return require('./active-directory-domain-trust'); } });
Object.defineProperty(exports, 'alloydbBackup', { get: function () { return require('./alloydb-backup'); } });
Object.defineProperty(exports, 'alloydbCluster', { get: function () { return require('./alloydb-cluster'); } });
Object.defineProperty(exports, 'alloydbInstance', { get: function () { return require('./alloydb-instance'); } });
Object.defineProperty(exports, 'alloydbUser', { get: function () { return require('./alloydb-user'); } });
Object.defineProperty(exports, 'apigeeAddonsConfig', { get: function () { return require('./apigee-addons-config'); } });
Object.defineProperty(exports, 'apigeeApi', { get: function () { return require('./apigee-api'); } });
Object.defineProperty(exports, 'apigeeAppGroup', { get: function () { return require('./apigee-app-group'); } });
Object.defineProperty(exports, 'apigeeDeveloper', { get: function () { return require('./apigee-developer'); } });
Object.defineProperty(exports, 'apigeeEndpointAttachment', { get: function () { return require('./apigee-endpoint-attachment'); } });
Object.defineProperty(exports, 'apigeeEnvKeystore', { get: function () { return require('./apigee-env-keystore'); } });
Object.defineProperty(exports, 'apigeeEnvReferences', { get: function () { return require('./apigee-env-references'); } });
Object.defineProperty(exports, 'apigeeEnvgroup', { get: function () { return require('./apigee-envgroup'); } });
Object.defineProperty(exports, 'apigeeEnvgroupAttachment', { get: function () { return require('./apigee-envgroup-attachment'); } });
Object.defineProperty(exports, 'apigeeEnvironment', { get: function () { return require('./apigee-environment'); } });
Object.defineProperty(exports, 'apigeeEnvironmentIamBinding', { get: function () { return require('./apigee-environment-iam-binding'); } });
Object.defineProperty(exports, 'apigeeEnvironmentIamMember', { get: function () { return require('./apigee-environment-iam-member'); } });
Object.defineProperty(exports, 'apigeeEnvironmentIamPolicy', { get: function () { return require('./apigee-environment-iam-policy'); } });
Object.defineProperty(exports, 'apigeeEnvironmentKeyvaluemaps', { get: function () { return require('./apigee-environment-keyvaluemaps'); } });
Object.defineProperty(exports, 'apigeeEnvironmentKeyvaluemapsEntries', { get: function () { return require('./apigee-environment-keyvaluemaps-entries'); } });
Object.defineProperty(exports, 'apigeeFlowhook', { get: function () { return require('./apigee-flowhook'); } });
Object.defineProperty(exports, 'apigeeInstance', { get: function () { return require('./apigee-instance'); } });
Object.defineProperty(exports, 'apigeeInstanceAttachment', { get: function () { return require('./apigee-instance-attachment'); } });
Object.defineProperty(exports, 'apigeeKeystoresAliasesKeyCertFile', { get: function () { return require('./apigee-keystores-aliases-key-cert-file'); } });
Object.defineProperty(exports, 'apigeeKeystoresAliasesPkcs12', { get: function () { return require('./apigee-keystores-aliases-pkcs12'); } });
Object.defineProperty(exports, 'apigeeKeystoresAliasesSelfSignedCert', { get: function () { return require('./apigee-keystores-aliases-self-signed-cert'); } });
Object.defineProperty(exports, 'apigeeNatAddress', { get: function () { return require('./apigee-nat-address'); } });
Object.defineProperty(exports, 'apigeeOrganization', { get: function () { return require('./apigee-organization'); } });
Object.defineProperty(exports, 'apigeeSharedflow', { get: function () { return require('./apigee-sharedflow'); } });
Object.defineProperty(exports, 'apigeeSharedflowDeployment', { get: function () { return require('./apigee-sharedflow-deployment'); } });
Object.defineProperty(exports, 'apigeeSyncAuthorization', { get: function () { return require('./apigee-sync-authorization'); } });
Object.defineProperty(exports, 'apigeeTargetServer', { get: function () { return require('./apigee-target-server'); } });
Object.defineProperty(exports, 'apikeysKey', { get: function () { return require('./apikeys-key'); } });
Object.defineProperty(exports, 'appEngineApplication', { get: function () { return require('./app-engine-application'); } });
Object.defineProperty(exports, 'appEngineApplicationUrlDispatchRules', { get: function () { return require('./app-engine-application-url-dispatch-rules'); } });
Object.defineProperty(exports, 'appEngineDomainMapping', { get: function () { return require('./app-engine-domain-mapping'); } });
Object.defineProperty(exports, 'appEngineFirewallRule', { get: function () { return require('./app-engine-firewall-rule'); } });
Object.defineProperty(exports, 'appEngineFlexibleAppVersion', { get: function () { return require('./app-engine-flexible-app-version'); } });
Object.defineProperty(exports, 'appEngineServiceNetworkSettings', { get: function () { return require('./app-engine-service-network-settings'); } });
Object.defineProperty(exports, 'appEngineServiceSplitTraffic', { get: function () { return require('./app-engine-service-split-traffic'); } });
Object.defineProperty(exports, 'appEngineStandardAppVersion', { get: function () { return require('./app-engine-standard-app-version'); } });
Object.defineProperty(exports, 'apphubApplication', { get: function () { return require('./apphub-application'); } });
Object.defineProperty(exports, 'apphubService', { get: function () { return require('./apphub-service'); } });
Object.defineProperty(exports, 'apphubServiceProjectAttachment', { get: function () { return require('./apphub-service-project-attachment'); } });
Object.defineProperty(exports, 'apphubWorkload', { get: function () { return require('./apphub-workload'); } });
Object.defineProperty(exports, 'artifactRegistryRepository', { get: function () { return require('./artifact-registry-repository'); } });
Object.defineProperty(exports, 'artifactRegistryRepositoryIamBinding', { get: function () { return require('./artifact-registry-repository-iam-binding'); } });
Object.defineProperty(exports, 'artifactRegistryRepositoryIamMember', { get: function () { return require('./artifact-registry-repository-iam-member'); } });
Object.defineProperty(exports, 'artifactRegistryRepositoryIamPolicy', { get: function () { return require('./artifact-registry-repository-iam-policy'); } });
Object.defineProperty(exports, 'assuredWorkloadsWorkload', { get: function () { return require('./assured-workloads-workload'); } });
Object.defineProperty(exports, 'backupDrBackupVault', { get: function () { return require('./backup-dr-backup-vault'); } });
Object.defineProperty(exports, 'beyondcorpAppConnection', { get: function () { return require('./beyondcorp-app-connection'); } });
Object.defineProperty(exports, 'beyondcorpAppConnector', { get: function () { return require('./beyondcorp-app-connector'); } });
Object.defineProperty(exports, 'beyondcorpAppGateway', { get: function () { return require('./beyondcorp-app-gateway'); } });
Object.defineProperty(exports, 'biglakeCatalog', { get: function () { return require('./biglake-catalog'); } });
Object.defineProperty(exports, 'biglakeDatabase', { get: function () { return require('./biglake-database'); } });
Object.defineProperty(exports, 'biglakeTable', { get: function () { return require('./biglake-table'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubDataExchange', { get: function () { return require('./bigquery-analytics-hub-data-exchange'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubDataExchangeIamBinding', { get: function () { return require('./bigquery-analytics-hub-data-exchange-iam-binding'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubDataExchangeIamMember', { get: function () { return require('./bigquery-analytics-hub-data-exchange-iam-member'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubDataExchangeIamPolicy', { get: function () { return require('./bigquery-analytics-hub-data-exchange-iam-policy'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubListing', { get: function () { return require('./bigquery-analytics-hub-listing'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubListingIamBinding', { get: function () { return require('./bigquery-analytics-hub-listing-iam-binding'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubListingIamMember', { get: function () { return require('./bigquery-analytics-hub-listing-iam-member'); } });
Object.defineProperty(exports, 'bigqueryAnalyticsHubListingIamPolicy', { get: function () { return require('./bigquery-analytics-hub-listing-iam-policy'); } });
Object.defineProperty(exports, 'bigqueryBiReservation', { get: function () { return require('./bigquery-bi-reservation'); } });
Object.defineProperty(exports, 'bigqueryCapacityCommitment', { get: function () { return require('./bigquery-capacity-commitment'); } });
Object.defineProperty(exports, 'bigqueryConnection', { get: function () { return require('./bigquery-connection'); } });
Object.defineProperty(exports, 'bigqueryConnectionIamBinding', { get: function () { return require('./bigquery-connection-iam-binding'); } });
Object.defineProperty(exports, 'bigqueryConnectionIamMember', { get: function () { return require('./bigquery-connection-iam-member'); } });
Object.defineProperty(exports, 'bigqueryConnectionIamPolicy', { get: function () { return require('./bigquery-connection-iam-policy'); } });
Object.defineProperty(exports, 'bigqueryDataTransferConfig', { get: function () { return require('./bigquery-data-transfer-config'); } });
Object.defineProperty(exports, 'bigqueryDatapolicyDataPolicy', { get: function () { return require('./bigquery-datapolicy-data-policy'); } });
Object.defineProperty(exports, 'bigqueryDatapolicyDataPolicyIamBinding', { get: function () { return require('./bigquery-datapolicy-data-policy-iam-binding'); } });
Object.defineProperty(exports, 'bigqueryDatapolicyDataPolicyIamMember', { get: function () { return require('./bigquery-datapolicy-data-policy-iam-member'); } });
Object.defineProperty(exports, 'bigqueryDatapolicyDataPolicyIamPolicy', { get: function () { return require('./bigquery-datapolicy-data-policy-iam-policy'); } });
Object.defineProperty(exports, 'bigqueryDataset', { get: function () { return require('./bigquery-dataset'); } });
Object.defineProperty(exports, 'bigqueryDatasetAccess', { get: function () { return require('./bigquery-dataset-access'); } });
Object.defineProperty(exports, 'bigqueryDatasetIamBinding', { get: function () { return require('./bigquery-dataset-iam-binding'); } });
Object.defineProperty(exports, 'bigqueryDatasetIamMember', { get: function () { return require('./bigquery-dataset-iam-member'); } });
Object.defineProperty(exports, 'bigqueryDatasetIamPolicy', { get: function () { return require('./bigquery-dataset-iam-policy'); } });
Object.defineProperty(exports, 'bigqueryJob', { get: function () { return require('./bigquery-job'); } });
Object.defineProperty(exports, 'bigqueryReservation', { get: function () { return require('./bigquery-reservation'); } });
Object.defineProperty(exports, 'bigqueryReservationAssignment', { get: function () { return require('./bigquery-reservation-assignment'); } });
Object.defineProperty(exports, 'bigqueryRoutine', { get: function () { return require('./bigquery-routine'); } });
Object.defineProperty(exports, 'bigqueryTable', { get: function () { return require('./bigquery-table'); } });
Object.defineProperty(exports, 'bigqueryTableIamBinding', { get: function () { return require('./bigquery-table-iam-binding'); } });
Object.defineProperty(exports, 'bigqueryTableIamMember', { get: function () { return require('./bigquery-table-iam-member'); } });
Object.defineProperty(exports, 'bigqueryTableIamPolicy', { get: function () { return require('./bigquery-table-iam-policy'); } });
Object.defineProperty(exports, 'bigtableAppProfile', { get: function () { return require('./bigtable-app-profile'); } });
Object.defineProperty(exports, 'bigtableAuthorizedView', { get: function () { return require('./bigtable-authorized-view'); } });
Object.defineProperty(exports, 'bigtableGcPolicy', { get: function () { return require('./bigtable-gc-policy'); } });
Object.defineProperty(exports, 'bigtableInstance', { get: function () { return require('./bigtable-instance'); } });
Object.defineProperty(exports, 'bigtableInstanceIamBinding', { get: function () { return require('./bigtable-instance-iam-binding'); } });
Object.defineProperty(exports, 'bigtableInstanceIamMember', { get: function () { return require('./bigtable-instance-iam-member'); } });
Object.defineProperty(exports, 'bigtableInstanceIamPolicy', { get: function () { return require('./bigtable-instance-iam-policy'); } });
Object.defineProperty(exports, 'bigtableTable', { get: function () { return require('./bigtable-table'); } });
Object.defineProperty(exports, 'bigtableTableIamBinding', { get: function () { return require('./bigtable-table-iam-binding'); } });
Object.defineProperty(exports, 'bigtableTableIamMember', { get: function () { return require('./bigtable-table-iam-member'); } });
Object.defineProperty(exports, 'bigtableTableIamPolicy', { get: function () { return require('./bigtable-table-iam-policy'); } });
Object.defineProperty(exports, 'billingAccountIamBinding', { get: function () { return require('./billing-account-iam-binding'); } });
Object.defineProperty(exports, 'billingAccountIamMember', { get: function () { return require('./billing-account-iam-member'); } });
Object.defineProperty(exports, 'billingAccountIamPolicy', { get: function () { return require('./billing-account-iam-policy'); } });
Object.defineProperty(exports, 'billingBudget', { get: function () { return require('./billing-budget'); } });
Object.defineProperty(exports, 'billingProjectInfo', { get: function () { return require('./billing-project-info'); } });
Object.defineProperty(exports, 'billingSubaccount', { get: function () { return require('./billing-subaccount'); } });
Object.defineProperty(exports, 'binaryAuthorizationAttestor', { get: function () { return require('./binary-authorization-attestor'); } });
Object.defineProperty(exports, 'binaryAuthorizationAttestorIamBinding', { get: function () { return require('./binary-authorization-attestor-iam-binding'); } });
Object.defineProperty(exports, 'binaryAuthorizationAttestorIamMember', { get: function () { return require('./binary-authorization-attestor-iam-member'); } });
Object.defineProperty(exports, 'binaryAuthorizationAttestorIamPolicy', { get: function () { return require('./binary-authorization-attestor-iam-policy'); } });
Object.defineProperty(exports, 'binaryAuthorizationPolicy', { get: function () { return require('./binary-authorization-policy'); } });
Object.defineProperty(exports, 'blockchainNodeEngineBlockchainNodes', { get: function () { return require('./blockchain-node-engine-blockchain-nodes'); } });
Object.defineProperty(exports, 'certificateManagerCertificate', { get: function () { return require('./certificate-manager-certificate'); } });
Object.defineProperty(exports, 'certificateManagerCertificateIssuanceConfig', { get: function () { return require('./certificate-manager-certificate-issuance-config'); } });
Object.defineProperty(exports, 'certificateManagerCertificateMap', { get: function () { return require('./certificate-manager-certificate-map'); } });
Object.defineProperty(exports, 'certificateManagerCertificateMapEntry', { get: function () { return require('./certificate-manager-certificate-map-entry'); } });
Object.defineProperty(exports, 'certificateManagerDnsAuthorization', { get: function () { return require('./certificate-manager-dns-authorization'); } });
Object.defineProperty(exports, 'certificateManagerTrustConfig', { get: function () { return require('./certificate-manager-trust-config'); } });
Object.defineProperty(exports, 'cloudAssetFolderFeed', { get: function () { return require('./cloud-asset-folder-feed'); } });
Object.defineProperty(exports, 'cloudAssetOrganizationFeed', { get: function () { return require('./cloud-asset-organization-feed'); } });
Object.defineProperty(exports, 'cloudAssetProjectFeed', { get: function () { return require('./cloud-asset-project-feed'); } });
Object.defineProperty(exports, 'cloudIdentityGroup', { get: function () { return require('./cloud-identity-group'); } });
Object.defineProperty(exports, 'cloudIdentityGroupMembership', { get: function () { return require('./cloud-identity-group-membership'); } });
Object.defineProperty(exports, 'cloudIdsEndpoint', { get: function () { return require('./cloud-ids-endpoint'); } });
Object.defineProperty(exports, 'cloudQuotasQuotaPreference', { get: function () { return require('./cloud-quotas-quota-preference'); } });
Object.defineProperty(exports, 'cloudRunDomainMapping', { get: function () { return require('./cloud-run-domain-mapping'); } });
Object.defineProperty(exports, 'cloudRunService', { get: function () { return require('./cloud-run-service'); } });
Object.defineProperty(exports, 'cloudRunServiceIamBinding', { get: function () { return require('./cloud-run-service-iam-binding'); } });
Object.defineProperty(exports, 'cloudRunServiceIamMember', { get: function () { return require('./cloud-run-service-iam-member'); } });
Object.defineProperty(exports, 'cloudRunServiceIamPolicy', { get: function () { return require('./cloud-run-service-iam-policy'); } });
Object.defineProperty(exports, 'cloudRunV2Job', { get: function () { return require('./cloud-run-v2-job'); } });
Object.defineProperty(exports, 'cloudRunV2JobIamBinding', { get: function () { return require('./cloud-run-v2-job-iam-binding'); } });
Object.defineProperty(exports, 'cloudRunV2JobIamMember', { get: function () { return require('./cloud-run-v2-job-iam-member'); } });
Object.defineProperty(exports, 'cloudRunV2JobIamPolicy', { get: function () { return require('./cloud-run-v2-job-iam-policy'); } });
Object.defineProperty(exports, 'cloudRunV2Service', { get: function () { return require('./cloud-run-v2-service'); } });
Object.defineProperty(exports, 'cloudRunV2ServiceIamBinding', { get: function () { return require('./cloud-run-v2-service-iam-binding'); } });
Object.defineProperty(exports, 'cloudRunV2ServiceIamMember', { get: function () { return require('./cloud-run-v2-service-iam-member'); } });
Object.defineProperty(exports, 'cloudRunV2ServiceIamPolicy', { get: function () { return require('./cloud-run-v2-service-iam-policy'); } });
Object.defineProperty(exports, 'cloudSchedulerJob', { get: function () { return require('./cloud-scheduler-job'); } });
Object.defineProperty(exports, 'cloudTasksQueue', { get: function () { return require('./cloud-tasks-queue'); } });
Object.defineProperty(exports, 'cloudTasksQueueIamBinding', { get: function () { return require('./cloud-tasks-queue-iam-binding'); } });
Object.defineProperty(exports, 'cloudTasksQueueIamMember', { get: function () { return require('./cloud-tasks-queue-iam-member'); } });
Object.defineProperty(exports, 'cloudTasksQueueIamPolicy', { get: function () { return require('./cloud-tasks-queue-iam-policy'); } });
Object.defineProperty(exports, 'cloudbuildBitbucketServerConfig', { get: function () { return require('./cloudbuild-bitbucket-server-config'); } });
Object.defineProperty(exports, 'cloudbuildTrigger', { get: function () { return require('./cloudbuild-trigger'); } });
Object.defineProperty(exports, 'cloudbuildWorkerPool', { get: function () { return require('./cloudbuild-worker-pool'); } });
Object.defineProperty(exports, 'cloudbuildv2Connection', { get: function () { return require('./cloudbuildv2-connection'); } });
Object.defineProperty(exports, 'cloudbuildv2ConnectionIamBinding', { get: function () { return require('./cloudbuildv2-connection-iam-binding'); } });
Object.defineProperty(exports, 'cloudbuildv2ConnectionIamMember', { get: function () { return require('./cloudbuildv2-connection-iam-member'); } });
Object.defineProperty(exports, 'cloudbuildv2ConnectionIamPolicy', { get: function () { return require('./cloudbuildv2-connection-iam-policy'); } });
Object.defineProperty(exports, 'cloudbuildv2Repository', { get: function () { return require('./cloudbuildv2-repository'); } });
Object.defineProperty(exports, 'clouddeployAutomation', { get: function () { return require('./clouddeploy-automation'); } });
Object.defineProperty(exports, 'clouddeployCustomTargetType', { get: function () { return require('./clouddeploy-custom-target-type'); } });
Object.defineProperty(exports, 'clouddeployCustomTargetTypeIamBinding', { get: function () { return require('./clouddeploy-custom-target-type-iam-binding'); } });
Object.defineProperty(exports, 'clouddeployCustomTargetTypeIamMember', { get: function () { return require('./clouddeploy-custom-target-type-iam-member'); } });
Object.defineProperty(exports, 'clouddeployCustomTargetTypeIamPolicy', { get: function () { return require('./clouddeploy-custom-target-type-iam-policy'); } });
Object.defineProperty(exports, 'clouddeployDeliveryPipeline', { get: function () { return require('./clouddeploy-delivery-pipeline'); } });
Object.defineProperty(exports, 'clouddeployDeliveryPipelineIamBinding', { get: function () { return require('./clouddeploy-delivery-pipeline-iam-binding'); } });
Object.defineProperty(exports, 'clouddeployDeliveryPipelineIamMember', { get: function () { return require('./clouddeploy-delivery-pipeline-iam-member'); } });
Object.defineProperty(exports, 'clouddeployDeliveryPipelineIamPolicy', { get: function () { return require('./clouddeploy-delivery-pipeline-iam-policy'); } });
Object.defineProperty(exports, 'clouddeployTarget', { get: function () { return require('./clouddeploy-target'); } });
Object.defineProperty(exports, 'clouddeployTargetIamBinding', { get: function () { return require('./clouddeploy-target-iam-binding'); } });
Object.defineProperty(exports, 'clouddeployTargetIamMember', { get: function () { return require('./clouddeploy-target-iam-member'); } });
Object.defineProperty(exports, 'clouddeployTargetIamPolicy', { get: function () { return require('./clouddeploy-target-iam-policy'); } });
Object.defineProperty(exports, 'clouddomainsRegistration', { get: function () { return require('./clouddomains-registration'); } });
Object.defineProperty(exports, 'cloudfunctions2Function', { get: function () { return require('./cloudfunctions2-function'); } });
Object.defineProperty(exports, 'cloudfunctions2FunctionIamBinding', { get: function () { return require('./cloudfunctions2-function-iam-binding'); } });
Object.defineProperty(exports, 'cloudfunctions2FunctionIamMember', { get: function () { return require('./cloudfunctions2-function-iam-member'); } });
Object.defineProperty(exports, 'cloudfunctions2FunctionIamPolicy', { get: function () { return require('./cloudfunctions2-function-iam-policy'); } });
Object.defineProperty(exports, 'cloudfunctionsFunction', { get: function () { return require('./cloudfunctions-function'); } });
Object.defineProperty(exports, 'cloudfunctionsFunctionIamBinding', { get: function () { return require('./cloudfunctions-function-iam-binding'); } });
Object.defineProperty(exports, 'cloudfunctionsFunctionIamMember', { get: function () { return require('./cloudfunctions-function-iam-member'); } });
Object.defineProperty(exports, 'cloudfunctionsFunctionIamPolicy', { get: function () { return require('./cloudfunctions-function-iam-policy'); } });
Object.defineProperty(exports, 'composerEnvironment', { get: function () { return require('./composer-environment'); } });
Object.defineProperty(exports, 'composerUserWorkloadsConfigMap', { get: function () { return require('./composer-user-workloads-config-map'); } });
Object.defineProperty(exports, 'composerUserWorkloadsSecret', { get: function () { return require('./composer-user-workloads-secret'); } });
Object.defineProperty(exports, 'computeAddress', { get: function () { return require('./compute-address'); } });
Object.defineProperty(exports, 'computeAttachedDisk', { get: function () { return require('./compute-attached-disk'); } });
Object.defineProperty(exports, 'computeAutoscaler', { get: function () { return require('./compute-autoscaler'); } });
Object.defineProperty(exports, 'computeBackendBucket', { get: function () { return require('./compute-backend-bucket'); } });
Object.defineProperty(exports, 'computeBackendBucketSignedUrlKey', { get: function () { return require('./compute-backend-bucket-signed-url-key'); } });
Object.defineProperty(exports, 'computeBackendService', { get: function () { return require('./compute-backend-service'); } });
Object.defineProperty(exports, 'computeBackendServiceSignedUrlKey', { get: function () { return require('./compute-backend-service-signed-url-key'); } });
Object.defineProperty(exports, 'computeDisk', { get: function () { return require('./compute-disk'); } });
Object.defineProperty(exports, 'computeDiskAsyncReplication', { get: function () { return require('./compute-disk-async-replication'); } });
Object.defineProperty(exports, 'computeDiskIamBinding', { get: function () { return require('./compute-disk-iam-binding'); } });
Object.defineProperty(exports, 'computeDiskIamMember', { get: function () { return require('./compute-disk-iam-member'); } });
Object.defineProperty(exports, 'computeDiskIamPolicy', { get: function () { return require('./compute-disk-iam-policy'); } });
Object.defineProperty(exports, 'computeDiskResourcePolicyAttachment', { get: function () { return require('./compute-disk-resource-policy-attachment'); } });
Object.defineProperty(exports, 'computeExternalVpnGateway', { get: function () { return require('./compute-external-vpn-gateway'); } });
Object.defineProperty(exports, 'computeFirewall', { get: function () { return require('./compute-firewall'); } });
Object.defineProperty(exports, 'computeFirewallPolicy', { get: function () { return require('./compute-firewall-policy'); } });
Object.defineProperty(exports, 'computeFirewallPolicyAssociation', { get: function () { return require('./compute-firewall-policy-association'); } });
Object.defineProperty(exports, 'computeFirewallPolicyRule', { get: function () { return require('./compute-firewall-policy-rule'); } });
Object.defineProperty(exports, 'computeForwardingRule', { get: function () { return require('./compute-forwarding-rule'); } });
Object.defineProperty(exports, 'computeGlobalAddress', { get: function () { return require('./compute-global-address'); } });
Object.defineProperty(exports, 'computeGlobalForwardingRule', { get: function () { return require('./compute-global-forwarding-rule'); } });
Object.defineProperty(exports, 'computeGlobalNetworkEndpoint', { get: function () { return require('./compute-global-network-endpoint'); } });
Object.defineProperty(exports, 'computeGlobalNetworkEndpointGroup', { get: function () { return require('./compute-global-network-endpoint-group'); } });
Object.defineProperty(exports, 'computeHaVpnGateway', { get: function () { return require('./compute-ha-vpn-gateway'); } });
Object.defineProperty(exports, 'computeHealthCheck', { get: function () { return require('./compute-health-check'); } });
Object.defineProperty(exports, 'computeHttpHealthCheck', { get: function () { return require('./compute-http-health-check'); } });
Object.defineProperty(exports, 'computeHttpsHealthCheck', { get: function () { return require('./compute-https-health-check'); } });
Object.defineProperty(exports, 'computeImage', { get: function () { return require('./compute-image'); } });
Object.defineProperty(exports, 'computeImageIamBinding', { get: function () { return require('./compute-image-iam-binding'); } });
Object.defineProperty(exports, 'computeImageIamMember', { get: function () { return require('./compute-image-iam-member'); } });
Object.defineProperty(exports, 'computeImageIamPolicy', { get: function () { return require('./compute-image-iam-policy'); } });
Object.defineProperty(exports, 'computeInstance', { get: function () { return require('./compute-instance'); } });
Object.defineProperty(exports, 'computeInstanceFromTemplate', { get: function () { return require('./compute-instance-from-template'); } });
Object.defineProperty(exports, 'computeInstanceGroup', { get: function () { return require('./compute-instance-group'); } });
Object.defineProperty(exports, 'computeInstanceGroupManager', { get: function () { return require('./compute-instance-group-manager'); } });
Object.defineProperty(exports, 'computeInstanceGroupMembership', { get: function () { return require('./compute-instance-group-membership'); } });
Object.defineProperty(exports, 'computeInstanceGroupNamedPort', { get: function () { return require('./compute-instance-group-named-port'); } });
Object.defineProperty(exports, 'computeInstanceIamBinding', { get: function () { return require('./compute-instance-iam-binding'); } });
Object.defineProperty(exports, 'computeInstanceIamMember', { get: function () { return require('./compute-instance-iam-member'); } });
Object.defineProperty(exports, 'computeInstanceIamPolicy', { get: function () { return require('./compute-instance-iam-policy'); } });
Object.defineProperty(exports, 'computeInstanceSettings', { get: function () { return require('./compute-instance-settings'); } });
Object.defineProperty(exports, 'computeInstanceTemplate', { get: function () { return require('./compute-instance-template'); } });
Object.defineProperty(exports, 'computeInterconnect', { get: function () { return require('./compute-interconnect'); } });
Object.defineProperty(exports, 'computeInterconnectAttachment', { get: function () { return require('./compute-interconnect-attachment'); } });
Object.defineProperty(exports, 'computeManagedSslCertificate', { get: function () { return require('./compute-managed-ssl-certificate'); } });
Object.defineProperty(exports, 'computeNetwork', { get: function () { return require('./compute-network'); } });
Object.defineProperty(exports, 'computeNetworkAttachment', { get: function () { return require('./compute-network-attachment'); } });
Object.defineProperty(exports, 'computeNetworkEndpoint', { get: function () { return require('./compute-network-endpoint'); } });
Object.defineProperty(exports, 'computeNetworkEndpointGroup', { get: function () { return require('./compute-network-endpoint-group'); } });
Object.defineProperty(exports, 'computeNetworkEndpoints', { get: function () { return require('./compute-network-endpoints'); } });
Object.defineProperty(exports, 'computeNetworkFirewallPolicy', { get: function () { return require('./compute-network-firewall-policy'); } });
Object.defineProperty(exports, 'computeNetworkFirewallPolicyAssociation', { get: function () { return require('./compute-network-firewall-policy-association'); } });
Object.defineProperty(exports, 'computeNetworkFirewallPolicyRule', { get: function () { return require('./compute-network-firewall-policy-rule'); } });
Object.defineProperty(exports, 'computeNetworkPeering', { get: function () { return require('./compute-network-peering'); } });
Object.defineProperty(exports, 'computeNetworkPeeringRoutesConfig', { get: function () { return require('./compute-network-peering-routes-config'); } });
Object.defineProperty(exports, 'computeNodeGroup', { get: function () { return require('./compute-node-group'); } });
Object.defineProperty(exports, 'computeNodeTemplate', { get: function () { return require('./compute-node-template'); } });
Object.defineProperty(exports, 'computePacketMirroring', { get: function () { return require('./compute-packet-mirroring'); } });
Object.defineProperty(exports, 'computePerInstanceConfig', { get: function () { return require('./compute-per-instance-config'); } });
Object.defineProperty(exports, 'computeProjectCloudArmorTier', { get: function () { return require('./compute-project-cloud-armor-tier'); } });
Object.defineProperty(exports, 'computeProjectDefaultNetworkTier', { get: function () { return require('./compute-project-default-network-tier'); } });
Object.defineProperty(exports, 'computeProjectMetadata', { get: function () { return require('./compute-project-metadata'); } });
Object.defineProperty(exports, 'computeProjectMetadataItem', { get: function () { return require('./compute-project-metadata-item'); } });
Object.defineProperty(exports, 'computePublicAdvertisedPrefix', { get: function () { return require('./compute-public-advertised-prefix'); } });
Object.defineProperty(exports, 'computePublicDelegatedPrefix', { get: function () { return require('./compute-public-delegated-prefix'); } });
Object.defineProperty(exports, 'computeRegionAutoscaler', { get: function () { return require('./compute-region-autoscaler'); } });
Object.defineProperty(exports, 'computeRegionBackendService', { get: function () { return require('./compute-region-backend-service'); } });
Object.defineProperty(exports, 'computeRegionCommitment', { get: function () { return require('./compute-region-commitment'); } });
Object.defineProperty(exports, 'computeRegionDisk', { get: function () { return require('./compute-region-disk'); } });
Object.defineProperty(exports, 'computeRegionDiskIamBinding', { get: function () { return require('./compute-region-disk-iam-binding'); } });
Object.defineProperty(exports, 'computeRegionDiskIamMember', { get: function () { return require('./compute-region-disk-iam-member'); } });
Object.defineProperty(exports, 'computeRegionDiskIamPolicy', { get: function () { return require('./compute-region-disk-iam-policy'); } });
Object.defineProperty(exports, 'computeRegionDiskResourcePolicyAttachment', { get: function () { return require('./compute-region-disk-resource-policy-attachment'); } });
Object.defineProperty(exports, 'computeRegionHealthCheck', { get: function () { return require('./compute-region-health-check'); } });
Object.defineProperty(exports, 'computeRegionInstanceGroupManager', { get: function () { return require('./compute-region-instance-group-manager'); } });
Object.defineProperty(exports, 'computeRegionInstanceTemplate', { get: function () { return require('./compute-region-instance-template'); } });
Object.defineProperty(exports, 'computeRegionNetworkEndpoint', { get: function () { return require('./compute-region-network-endpoint'); } });
Object.defineProperty(exports, 'computeRegionNetworkEndpointGroup', { get: function () { return require('./compute-region-network-endpoint-group'); } });
Object.defineProperty(exports, 'computeRegionNetworkFirewallPolicy', { get: function () { return require('./compute-region-network-firewall-policy'); } });
Object.defineProperty(exports, 'computeRegionNetworkFirewallPolicyAssociation', { get: function () { return require('./compute-region-network-firewall-policy-association'); } });
Object.defineProperty(exports, 'computeRegionNetworkFirewallPolicyRule', { get: function () { return require('./compute-region-network-firewall-policy-rule'); } });
Object.defineProperty(exports, 'computeRegionPerInstanceConfig', { get: function () { return require('./compute-region-per-instance-config'); } });
Object.defineProperty(exports, 'computeRegionSslCertificate', { get: function () { return require('./compute-region-ssl-certificate'); } });
Object.defineProperty(exports, 'computeRegionSslPolicy', { get: function () { return require('./compute-region-ssl-policy'); } });
Object.defineProperty(exports, 'computeRegionTargetHttpProxy', { get: function () { return require('./compute-region-target-http-proxy'); } });
Object.defineProperty(exports, 'computeRegionTargetHttpsProxy', { get: function () { return require('./compute-region-target-https-proxy'); } });
Object.defineProperty(exports, 'computeRegionTargetTcpProxy', { get: function () { return require('./compute-region-target-tcp-proxy'); } });
Object.defineProperty(exports, 'computeRegionUrlMap', { get: function () { return require('./compute-region-url-map'); } });
Object.defineProperty(exports, 'computeReservation', { get: function () { return require('./compute-reservation'); } });
Object.defineProperty(exports, 'computeResizeRequest', { get: function () { return require('./compute-resize-request'); } });
Object.defineProperty(exports, 'computeResourcePolicy', { get: function () { return require('./compute-resource-policy'); } });
Object.defineProperty(exports, 'computeRoute', { get: function () { return require('./compute-route'); } });
Object.defineProperty(exports, 'computeRouter', { get: function () { return require('./compute-router'); } });
Object.defineProperty(exports, 'computeRouterInterface', { get: function () { return require('./compute-router-interface'); } });
Object.defineProperty(exports, 'computeRouterNat', { get: function () { return require('./compute-router-nat'); } });
Object.defineProperty(exports, 'computeRouterNatAddress', { get: function () { return require('./compute-router-nat-address'); } });
Object.defineProperty(exports, 'computeRouterPeer', { get: function () { return require('./compute-router-peer'); } });
Object.defineProperty(exports, 'computeSecurityPolicy', { get: function () { return require('./compute-security-policy'); } });
Object.defineProperty(exports, 'computeSecurityPolicyRule', { get: function () { return require('./compute-security-policy-rule'); } });
Object.defineProperty(exports, 'computeServiceAttachment', { get: function () { return require('./compute-service-attachment'); } });
Object.defineProperty(exports, 'computeSharedVpcHostProject', { get: function () { return require('./compute-shared-vpc-host-project'); } });
Object.defineProperty(exports, 'computeSharedVpcServiceProject', { get: function () { return require('./compute-shared-vpc-service-project'); } });
Object.defineProperty(exports, 'computeSnapshot', { get: function () { return require('./compute-snapshot'); } });
Object.defineProperty(exports, 'computeSnapshotIamBinding', { get: function () { return require('./compute-snapshot-iam-binding'); } });
Object.defineProperty(exports, 'computeSnapshotIamMember', { get: function () { return require('./compute-snapshot-iam-member'); } });
Object.defineProperty(exports, 'computeSnapshotIamPolicy', { get: function () { return require('./compute-snapshot-iam-policy'); } });
Object.defineProperty(exports, 'computeSslCertificate', { get: function () { return require('./compute-ssl-certificate'); } });
Object.defineProperty(exports, 'computeSslPolicy', { get: function () { return require('./compute-ssl-policy'); } });
Object.defineProperty(exports, 'computeSubnetwork', { get: function () { return require('./compute-subnetwork'); } });
Object.defineProperty(exports, 'computeSubnetworkIamBinding', { get: function () { return require('./compute-subnetwork-iam-binding'); } });
Object.defineProperty(exports, 'computeSubnetworkIamMember', { get: function () { return require('./compute-subnetwork-iam-member'); } });
Object.defineProperty(exports, 'computeSubnetworkIamPolicy', { get: function () { return require('./compute-subnetwork-iam-policy'); } });
Object.defineProperty(exports, 'computeTargetGrpcProxy', { get: function () { return require('./compute-target-grpc-proxy'); } });
Object.defineProperty(exports, 'computeTargetHttpProxy', { get: function () { return require('./compute-target-http-proxy'); } });
Object.defineProperty(exports, 'computeTargetHttpsProxy', { get: function () { return require('./compute-target-https-proxy'); } });
Object.defineProperty(exports, 'computeTargetInstance', { get: function () { return require('./compute-target-instance'); } });
Object.defineProperty(exports, 'computeTargetPool', { get: function () { return require('./compute-target-pool'); } });
Object.defineProperty(exports, 'computeTargetSslProxy', { get: function () { return require('./compute-target-ssl-proxy'); } });
Object.defineProperty(exports, 'computeTargetTcpProxy', { get: function () { return require('./compute-target-tcp-proxy'); } });
Object.defineProperty(exports, 'computeUrlMap', { get: function () { return require('./compute-url-map'); } });
Object.defineProperty(exports, 'computeVpnGateway', { get: function () { return require('./compute-vpn-gateway'); } });
Object.defineProperty(exports, 'computeVpnTunnel', { get: function () { return require('./compute-vpn-tunnel'); } });
Object.defineProperty(exports, 'containerAnalysisNote', { get: function () { return require('./container-analysis-note'); } });
Object.defineProperty(exports, 'containerAnalysisNoteIamBinding', { get: function () { return require('./container-analysis-note-iam-binding'); } });
Object.defineProperty(exports, 'containerAnalysisNoteIamMember', { get: function () { return require('./container-analysis-note-iam-member'); } });
Object.defineProperty(exports, 'containerAnalysisNoteIamPolicy', { get: function () { return require('./container-analysis-note-iam-policy'); } });
Object.defineProperty(exports, 'containerAnalysisOccurrence', { get: function () { return require('./container-analysis-occurrence'); } });
Object.defineProperty(exports, 'containerAttachedCluster', { get: function () { return require('./container-attached-cluster'); } });
Object.defineProperty(exports, 'containerAwsCluster', { get: function () { return require('./container-aws-cluster'); } });
Object.defineProperty(exports, 'containerAwsNodePool', { get: function () { return require('./container-aws-node-pool'); } });
Object.defineProperty(exports, 'containerAzureClient', { get: function () { return require('./container-azure-client'); } });
Object.defineProperty(exports, 'containerAzureCluster', { get: function () { return require('./container-azure-cluster'); } });
Object.defineProperty(exports, 'containerAzureNodePool', { get: function () { return require('./container-azure-node-pool'); } });
Object.defineProperty(exports, 'containerCluster', { get: function () { return require('./container-cluster'); } });
Object.defineProperty(exports, 'containerNodePool', { get: function () { return require('./container-node-pool'); } });
Object.defineProperty(exports, 'containerRegistry', { get: function () { return require('./container-registry'); } });
Object.defineProperty(exports, 'dataCatalogEntry', { get: function () { return require('./data-catalog-entry'); } });
Object.defineProperty(exports, 'dataCatalogEntryGroup', { get: function () { return require('./data-catalog-entry-group'); } });
Object.defineProperty(exports, 'dataCatalogEntryGroupIamBinding', { get: function () { return require('./data-catalog-entry-group-iam-binding'); } });
Object.defineProperty(exports, 'dataCatalogEntryGroupIamMember', { get: function () { return require('./data-catalog-entry-group-iam-member'); } });
Object.defineProperty(exports, 'dataCatalogEntryGroupIamPolicy', { get: function () { return require('./data-catalog-entry-group-iam-policy'); } });
Object.defineProperty(exports, 'dataCatalogPolicyTag', { get: function () { return require('./data-catalog-policy-tag'); } });
Object.defineProperty(exports, 'dataCatalogPolicyTagIamBinding', { get: function () { return require('./data-catalog-policy-tag-iam-binding'); } });
Object.defineProperty(exports, 'dataCatalogPolicyTagIamMember', { get: function () { return require('./data-catalog-policy-tag-iam-member'); } });
Object.defineProperty(exports, 'dataCatalogPolicyTagIamPolicy', { get: function () { return require('./data-catalog-policy-tag-iam-policy'); } });
Object.defineProperty(exports, 'dataCatalogTag', { get: function () { return require('./data-catalog-tag'); } });
Object.defineProperty(exports, 'dataCatalogTagTemplate', { get: function () { return require('./data-catalog-tag-template'); } });
Object.defineProperty(exports, 'dataCatalogTagTemplateIamBinding', { get: function () { return require('./data-catalog-tag-template-iam-binding'); } });
Object.defineProperty(exports, 'dataCatalogTagTemplateIamMember', { get: function () { return require('./data-catalog-tag-template-iam-member'); } });
Object.defineProperty(exports, 'dataCatalogTagTemplateIamPolicy', { get: function () { return require('./data-catalog-tag-template-iam-policy'); } });
Object.defineProperty(exports, 'dataCatalogTaxonomy', { get: function () { return require('./data-catalog-taxonomy'); } });
Object.defineProperty(exports, 'dataCatalogTaxonomyIamBinding', { get: function () { return require('./data-catalog-taxonomy-iam-binding'); } });
Object.defineProperty(exports, 'dataCatalogTaxonomyIamMember', { get: function () { return require('./data-catalog-taxonomy-iam-member'); } });
Object.defineProperty(exports, 'dataCatalogTaxonomyIamPolicy', { get: function () { return require('./data-catalog-taxonomy-iam-policy'); } });
Object.defineProperty(exports, 'dataFusionInstance', { get: function () { return require('./data-fusion-instance'); } });
Object.defineProperty(exports, 'dataFusionInstanceIamBinding', { get: function () { return require('./data-fusion-instance-iam-binding'); } });
Object.defineProperty(exports, 'dataFusionInstanceIamMember', { get: function () { return require('./data-fusion-instance-iam-member'); } });
Object.defineProperty(exports, 'dataFusionInstanceIamPolicy', { get: function () { return require('./data-fusion-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataLossPreventionDeidentifyTemplate', { get: function () { return require('./data-loss-prevention-deidentify-template'); } });
Object.defineProperty(exports, 'dataLossPreventionDiscoveryConfig', { get: function () { return require('./data-loss-prevention-discovery-config'); } });
Object.defineProperty(exports, 'dataLossPreventionInspectTemplate', { get: function () { return require('./data-loss-prevention-inspect-template'); } });
Object.defineProperty(exports, 'dataLossPreventionJobTrigger', { get: function () { return require('./data-loss-prevention-job-trigger'); } });
Object.defineProperty(exports, 'dataLossPreventionStoredInfoType', { get: function () { return require('./data-loss-prevention-stored-info-type'); } });
Object.defineProperty(exports, 'dataPipelinePipeline', { get: function () { return require('./data-pipeline-pipeline'); } });
Object.defineProperty(exports, 'databaseMigrationServiceConnectionProfile', { get: function () { return require('./database-migration-service-connection-profile'); } });
Object.defineProperty(exports, 'databaseMigrationServiceMigrationJob', { get: function () { return require('./database-migration-service-migration-job'); } });
Object.defineProperty(exports, 'databaseMigrationServicePrivateConnection', { get: function () { return require('./database-migration-service-private-connection'); } });
Object.defineProperty(exports, 'dataflowJob', { get: function () { return require('./dataflow-job'); } });
Object.defineProperty(exports, 'dataplexAspectType', { get: function () { return require('./dataplex-aspect-type'); } });
Object.defineProperty(exports, 'dataplexAspectTypeIamBinding', { get: function () { return require('./dataplex-aspect-type-iam-binding'); } });
Object.defineProperty(exports, 'dataplexAspectTypeIamMember', { get: function () { return require('./dataplex-aspect-type-iam-member'); } });
Object.defineProperty(exports, 'dataplexAspectTypeIamPolicy', { get: function () { return require('./dataplex-aspect-type-iam-policy'); } });
Object.defineProperty(exports, 'dataplexAsset', { get: function () { return require('./dataplex-asset'); } });
Object.defineProperty(exports, 'dataplexAssetIamBinding', { get: function () { return require('./dataplex-asset-iam-binding'); } });
Object.defineProperty(exports, 'dataplexAssetIamMember', { get: function () { return require('./dataplex-asset-iam-member'); } });
Object.defineProperty(exports, 'dataplexAssetIamPolicy', { get: function () { return require('./dataplex-asset-iam-policy'); } });
Object.defineProperty(exports, 'dataplexDatascan', { get: function () { return require('./dataplex-datascan'); } });
Object.defineProperty(exports, 'dataplexDatascanIamBinding', { get: function () { return require('./dataplex-datascan-iam-binding'); } });
Object.defineProperty(exports, 'dataplexDatascanIamMember', { get: function () { return require('./dataplex-datascan-iam-member'); } });
Object.defineProperty(exports, 'dataplexDatascanIamPolicy', { get: function () { return require('./dataplex-datascan-iam-policy'); } });
Object.defineProperty(exports, 'dataplexEntryGroup', { get: function () { return require('./dataplex-entry-group'); } });
Object.defineProperty(exports, 'dataplexEntryGroupIamBinding', { get: function () { return require('./dataplex-entry-group-iam-binding'); } });
Object.defineProperty(exports, 'dataplexEntryGroupIamMember', { get: function () { return require('./dataplex-entry-group-iam-member'); } });
Object.defineProperty(exports, 'dataplexEntryGroupIamPolicy', { get: function () { return require('./dataplex-entry-group-iam-policy'); } });
Object.defineProperty(exports, 'dataplexEntryType', { get: function () { return require('./dataplex-entry-type'); } });
Object.defineProperty(exports, 'dataplexEntryTypeIamBinding', { get: function () { return require('./dataplex-entry-type-iam-binding'); } });
Object.defineProperty(exports, 'dataplexEntryTypeIamMember', { get: function () { return require('./dataplex-entry-type-iam-member'); } });
Object.defineProperty(exports, 'dataplexEntryTypeIamPolicy', { get: function () { return require('./dataplex-entry-type-iam-policy'); } });
Object.defineProperty(exports, 'dataplexLake', { get: function () { return require('./dataplex-lake'); } });
Object.defineProperty(exports, 'dataplexLakeIamBinding', { get: function () { return require('./dataplex-lake-iam-binding'); } });
Object.defineProperty(exports, 'dataplexLakeIamMember', { get: function () { return require('./dataplex-lake-iam-member'); } });
Object.defineProperty(exports, 'dataplexLakeIamPolicy', { get: function () { return require('./dataplex-lake-iam-policy'); } });
Object.defineProperty(exports, 'dataplexTask', { get: function () { return require('./dataplex-task'); } });
Object.defineProperty(exports, 'dataplexTaskIamBinding', { get: function () { return require('./dataplex-task-iam-binding'); } });
Object.defineProperty(exports, 'dataplexTaskIamMember', { get: function () { return require('./dataplex-task-iam-member'); } });
Object.defineProperty(exports, 'dataplexTaskIamPolicy', { get: function () { return require('./dataplex-task-iam-policy'); } });
Object.defineProperty(exports, 'dataplexZone', { get: function () { return require('./dataplex-zone'); } });
Object.defineProperty(exports, 'dataplexZoneIamBinding', { get: function () { return require('./dataplex-zone-iam-binding'); } });
Object.defineProperty(exports, 'dataplexZoneIamMember', { get: function () { return require('./dataplex-zone-iam-member'); } });
Object.defineProperty(exports, 'dataplexZoneIamPolicy', { get: function () { return require('./dataplex-zone-iam-policy'); } });
Object.defineProperty(exports, 'dataprocAutoscalingPolicy', { get: function () { return require('./dataproc-autoscaling-policy'); } });
Object.defineProperty(exports, 'dataprocAutoscalingPolicyIamBinding', { get: function () { return require('./dataproc-autoscaling-policy-iam-binding'); } });
Object.defineProperty(exports, 'dataprocAutoscalingPolicyIamMember', { get: function () { return require('./dataproc-autoscaling-policy-iam-member'); } });
Object.defineProperty(exports, 'dataprocAutoscalingPolicyIamPolicy', { get: function () { return require('./dataproc-autoscaling-policy-iam-policy'); } });
Object.defineProperty(exports, 'dataprocBatch', { get: function () { return require('./dataproc-batch'); } });
Object.defineProperty(exports, 'dataprocCluster', { get: function () { return require('./dataproc-cluster'); } });
Object.defineProperty(exports, 'dataprocClusterIamBinding', { get: function () { return require('./dataproc-cluster-iam-binding'); } });
Object.defineProperty(exports, 'dataprocClusterIamMember', { get: function () { return require('./dataproc-cluster-iam-member'); } });
Object.defineProperty(exports, 'dataprocClusterIamPolicy', { get: function () { return require('./dataproc-cluster-iam-policy'); } });
Object.defineProperty(exports, 'dataprocGdcApplicationEnvironment', { get: function () { return require('./dataproc-gdc-application-environment'); } });
Object.defineProperty(exports, 'dataprocGdcServiceInstance', { get: function () { return require('./dataproc-gdc-service-instance'); } });
Object.defineProperty(exports, 'dataprocGdcSparkApplication', { get: function () { return require('./dataproc-gdc-spark-application'); } });
Object.defineProperty(exports, 'dataprocJob', { get: function () { return require('./dataproc-job'); } });
Object.defineProperty(exports, 'dataprocJobIamBinding', { get: function () { return require('./dataproc-job-iam-binding'); } });
Object.defineProperty(exports, 'dataprocJobIamMember', { get: function () { return require('./dataproc-job-iam-member'); } });
Object.defineProperty(exports, 'dataprocJobIamPolicy', { get: function () { return require('./dataproc-job-iam-policy'); } });
Object.defineProperty(exports, 'dataprocMetastoreFederation', { get: function () { return require('./dataproc-metastore-federation'); } });
Object.defineProperty(exports, 'dataprocMetastoreFederationIamBinding', { get: function () { return require('./dataproc-metastore-federation-iam-binding'); } });
Object.defineProperty(exports, 'dataprocMetastoreFederationIamMember', { get: function () { return require('./dataproc-metastore-federation-iam-member'); } });
Object.defineProperty(exports, 'dataprocMetastoreFederationIamPolicy', { get: function () { return require('./dataproc-metastore-federation-iam-policy'); } });
Object.defineProperty(exports, 'dataprocMetastoreService', { get: function () { return require('./dataproc-metastore-service'); } });
Object.defineProperty(exports, 'dataprocMetastoreServiceIamBinding', { get: function () { return require('./dataproc-metastore-service-iam-binding'); } });
Object.defineProperty(exports, 'dataprocMetastoreServiceIamMember', { get: function () { return require('./dataproc-metastore-service-iam-member'); } });
Object.defineProperty(exports, 'dataprocMetastoreServiceIamPolicy', { get: function () { return require('./dataproc-metastore-service-iam-policy'); } });
Object.defineProperty(exports, 'dataprocWorkflowTemplate', { get: function () { return require('./dataproc-workflow-template'); } });
Object.defineProperty(exports, 'datastreamConnectionProfile', { get: function () { return require('./datastream-connection-profile'); } });
Object.defineProperty(exports, 'datastreamPrivateConnection', { get: function () { return require('./datastream-private-connection'); } });
Object.defineProperty(exports, 'datastreamStream', { get: function () { return require('./datastream-stream'); } });
Object.defineProperty(exports, 'deploymentManagerDeployment', { get: function () { return require('./deployment-manager-deployment'); } });
Object.defineProperty(exports, 'dialogflowAgent', { get: function () { return require('./dialogflow-agent'); } });
Object.defineProperty(exports, 'dialogflowCxAgent', { get: function () { return require('./dialogflow-cx-agent'); } });
Object.defineProperty(exports, 'dialogflowCxEntityType', { get: function () { return require('./dialogflow-cx-entity-type'); } });
Object.defineProperty(exports, 'dialogflowCxEnvironment', { get: function () { return require('./dialogflow-cx-environment'); } });
Object.defineProperty(exports, 'dialogflowCxFlow', { get: function () { return require('./dialogflow-cx-flow'); } });
Object.defineProperty(exports, 'dialogflowCxIntent', { get: function () { return require('./dialogflow-cx-intent'); } });
Object.defineProperty(exports, 'dialogflowCxPage', { get: function () { return require('./dialogflow-cx-page'); } });
Object.defineProperty(exports, 'dialogflowCxSecuritySettings', { get: function () { return require('./dialogflow-cx-security-settings'); } });
Object.defineProperty(exports, 'dialogflowCxTestCase', { get: function () { return require('./dialogflow-cx-test-case'); } });
Object.defineProperty(exports, 'dialogflowCxVersion', { get: function () { return require('./dialogflow-cx-version'); } });
Object.defineProperty(exports, 'dialogflowCxWebhook', { get: function () { return require('./dialogflow-cx-webhook'); } });
Object.defineProperty(exports, 'dialogflowEntityType', { get: function () { return require('./dialogflow-entity-type'); } });
Object.defineProperty(exports, 'dialogflowFulfillment', { get: function () { return require('./dialogflow-fulfillment'); } });
Object.defineProperty(exports, 'dialogflowIntent', { get: function () { return require('./dialogflow-intent'); } });
Object.defineProperty(exports, 'discoveryEngineChatEngine', { get: function () { return require('./discovery-engine-chat-engine'); } });
Object.defineProperty(exports, 'discoveryEngineDataStore', { get: function () { return require('./discovery-engine-data-store'); } });
Object.defineProperty(exports, 'discoveryEngineSchema', { get: function () { return require('./discovery-engine-schema'); } });
Object.defineProperty(exports, 'discoveryEngineSearchEngine', { get: function () { return require('./discovery-engine-search-engine'); } });
Object.defineProperty(exports, 'discoveryEngineTargetSite', { get: function () { return require('./discovery-engine-target-site'); } });
Object.defineProperty(exports, 'dnsManagedZone', { get: function () { return require('./dns-managed-zone'); } });
Object.defineProperty(exports, 'dnsManagedZoneIamBinding', { get: function () { return require('./dns-managed-zone-iam-binding'); } });
Object.defineProperty(exports, 'dnsManagedZoneIamMember', { get: function () { return require('./dns-managed-zone-iam-member'); } });
Object.defineProperty(exports, 'dnsManagedZoneIamPolicy', { get: function () { return require('./dns-managed-zone-iam-policy'); } });
Object.defineProperty(exports, 'dnsPolicy', { get: function () { return require('./dns-policy'); } });
Object.defineProperty(exports, 'dnsRecordSet', { get: function () { return require('./dns-record-set'); } });
Object.defineProperty(exports, 'dnsResponsePolicy', { get: function () { return require('./dns-response-policy'); } });
Object.defineProperty(exports, 'dnsResponsePolicyRule', { get: function () { return require('./dns-response-policy-rule'); } });
Object.defineProperty(exports, 'documentAiProcessor', { get: function () { return require('./document-ai-processor'); } });
Object.defineProperty(exports, 'documentAiProcessorDefaultVersion', { get: function () { return require('./document-ai-processor-default-version'); } });
Object.defineProperty(exports, 'documentAiWarehouseDocumentSchema', { get: function () { return require('./document-ai-warehouse-document-schema'); } });
Object.defineProperty(exports, 'documentAiWarehouseLocation', { get: function () { return require('./document-ai-warehouse-location'); } });
Object.defineProperty(exports, 'edgecontainerCluster', { get: function () { return require('./edgecontainer-cluster'); } });
Object.defineProperty(exports, 'edgecontainerNodePool', { get: function () { return require('./edgecontainer-node-pool'); } });
Object.defineProperty(exports, 'edgecontainerVpnConnection', { get: function () { return require('./edgecontainer-vpn-connection'); } });
Object.defineProperty(exports, 'edgenetworkNetwork', { get: function () { return require('./edgenetwork-network'); } });
Object.defineProperty(exports, 'edgenetworkSubnet', { get: function () { return require('./edgenetwork-subnet'); } });
Object.defineProperty(exports, 'endpointsService', { get: function () { return require('./endpoints-service'); } });
Object.defineProperty(exports, 'endpointsServiceConsumersIamBinding', { get: function () { return require('./endpoints-service-consumers-iam-binding'); } });
Object.defineProperty(exports, 'endpointsServiceConsumersIamMember', { get: function () { return require('./endpoints-service-consumers-iam-member'); } });
Object.defineProperty(exports, 'endpointsServiceConsumersIamPolicy', { get: function () { return require('./endpoints-service-consumers-iam-policy'); } });
Object.defineProperty(exports, 'endpointsServiceIamBinding', { get: function () { return require('./endpoints-service-iam-binding'); } });
Object.defineProperty(exports, 'endpointsServiceIamMember', { get: function () { return require('./endpoints-service-iam-member'); } });
Object.defineProperty(exports, 'endpointsServiceIamPolicy', { get: function () { return require('./endpoints-service-iam-policy'); } });
Object.defineProperty(exports, 'essentialContactsContact', { get: function () { return require('./essential-contacts-contact'); } });
Object.defineProperty(exports, 'eventarcChannel', { get: function () { return require('./eventarc-channel'); } });
Object.defineProperty(exports, 'eventarcGoogleChannelConfig', { get: function () { return require('./eventarc-google-channel-config'); } });
Object.defineProperty(exports, 'eventarcTrigger', { get: function () { return require('./eventarc-trigger'); } });
Object.defineProperty(exports, 'filestoreBackup', { get: function () { return require('./filestore-backup'); } });
Object.defineProperty(exports, 'filestoreInstance', { get: function () { return require('./filestore-instance'); } });
Object.defineProperty(exports, 'filestoreSnapshot', { get: function () { return require('./filestore-snapshot'); } });
Object.defineProperty(exports, 'firebaseAppCheckAppAttestConfig', { get: function () { return require('./firebase-app-check-app-attest-config'); } });
Object.defineProperty(exports, 'firebaseAppCheckDebugToken', { get: function () { return require('./firebase-app-check-debug-token'); } });
Object.defineProperty(exports, 'firebaseAppCheckDeviceCheckConfig', { get: function () { return require('./firebase-app-check-device-check-config'); } });
Object.defineProperty(exports, 'firebaseAppCheckPlayIntegrityConfig', { get: function () { return require('./firebase-app-check-play-integrity-config'); } });
Object.defineProperty(exports, 'firebaseAppCheckRecaptchaEnterpriseConfig', { get: function () { return require('./firebase-app-check-recaptcha-enterprise-config'); } });
Object.defineProperty(exports, 'firebaseAppCheckRecaptchaV3Config', { get: function () { return require('./firebase-app-check-recaptcha-v3-config'); } });
Object.defineProperty(exports, 'firebaseAppCheckServiceConfig', { get: function () { return require('./firebase-app-check-service-config'); } });
Object.defineProperty(exports, 'firebaserulesRelease', { get: function () { return require('./firebaserules-release'); } });
Object.defineProperty(exports, 'firebaserulesRuleset', { get: function () { return require('./firebaserules-ruleset'); } });
Object.defineProperty(exports, 'firestoreBackupSchedule', { get: function () { return require('./firestore-backup-schedule'); } });
Object.defineProperty(exports, 'firestoreDatabase', { get: function () { return require('./firestore-database'); } });
Object.defineProperty(exports, 'firestoreDocument', { get: function () { return require('./firestore-document'); } });
Object.defineProperty(exports, 'firestoreField', { get: function () { return require('./firestore-field'); } });
Object.defineProperty(exports, 'firestoreIndex', { get: function () { return require('./firestore-index'); } });
Object.defineProperty(exports, 'folder', { get: function () { return require('./folder'); } });
Object.defineProperty(exports, 'folderAccessApprovalSettings', { get: function () { return require('./folder-access-approval-settings'); } });
Object.defineProperty(exports, 'folderIamAuditConfig', { get: function () { return require('./folder-iam-audit-config'); } });
Object.defineProperty(exports, 'folderIamBinding', { get: function () { return require('./folder-iam-binding'); } });
Object.defineProperty(exports, 'folderIamMember', { get: function () { return require('./folder-iam-member'); } });
Object.defineProperty(exports, 'folderIamPolicy', { get: function () { return require('./folder-iam-policy'); } });
Object.defineProperty(exports, 'folderOrganizationPolicy', { get: function () { return require('./folder-organization-policy'); } });
Object.defineProperty(exports, 'gkeBackupBackupPlan', { get: function () { return require('./gke-backup-backup-plan'); } });
Object.defineProperty(exports, 'gkeBackupBackupPlanIamBinding', { get: function () { return require('./gke-backup-backup-plan-iam-binding'); } });
Object.defineProperty(exports, 'gkeBackupBackupPlanIamMember', { get: function () { return require('./gke-backup-backup-plan-iam-member'); } });
Object.defineProperty(exports, 'gkeBackupBackupPlanIamPolicy', { get: function () { return require('./gke-backup-backup-plan-iam-policy'); } });
Object.defineProperty(exports, 'gkeBackupRestorePlan', { get: function () { return require('./gke-backup-restore-plan'); } });
Object.defineProperty(exports, 'gkeBackupRestorePlanIamBinding', { get: function () { return require('./gke-backup-restore-plan-iam-binding'); } });
Object.defineProperty(exports, 'gkeBackupRestorePlanIamMember', { get: function () { return require('./gke-backup-restore-plan-iam-member'); } });
Object.defineProperty(exports, 'gkeBackupRestorePlanIamPolicy', { get: function () { return require('./gke-backup-restore-plan-iam-policy'); } });
Object.defineProperty(exports, 'gkeHubFeature', { get: function () { return require('./gke-hub-feature'); } });
Object.defineProperty(exports, 'gkeHubFeatureIamBinding', { get: function () { return require('./gke-hub-feature-iam-binding'); } });
Object.defineProperty(exports, 'gkeHubFeatureIamMember', { get: function () { return require('./gke-hub-feature-iam-member'); } });
Object.defineProperty(exports, 'gkeHubFeatureIamPolicy', { get: function () { return require('./gke-hub-feature-iam-policy'); } });
Object.defineProperty(exports, 'gkeHubFeatureMembership', { get: function () { return require('./gke-hub-feature-membership'); } });
Object.defineProperty(exports, 'gkeHubFleet', { get: function () { return require('./gke-hub-fleet'); } });
Object.defineProperty(exports, 'gkeHubMembership', { get: function () { return require('./gke-hub-membership'); } });
Object.defineProperty(exports, 'gkeHubMembershipBinding', { get: function () { return require('./gke-hub-membership-binding'); } });
Object.defineProperty(exports, 'gkeHubMembershipIamBinding', { get: function () { return require('./gke-hub-membership-iam-binding'); } });
Object.defineProperty(exports, 'gkeHubMembershipIamMember', { get: function () { return require('./gke-hub-membership-iam-member'); } });
Object.defineProperty(exports, 'gkeHubMembershipIamPolicy', { get: function () { return require('./gke-hub-membership-iam-policy'); } });
Object.defineProperty(exports, 'gkeHubNamespace', { get: function () { return require('./gke-hub-namespace'); } });
Object.defineProperty(exports, 'gkeHubScope', { get: function () { return require('./gke-hub-scope'); } });
Object.defineProperty(exports, 'gkeHubScopeIamBinding', { get: function () { return require('./gke-hub-scope-iam-binding'); } });
Object.defineProperty(exports, 'gkeHubScopeIamMember', { get: function () { return require('./gke-hub-scope-iam-member'); } });
Object.defineProperty(exports, 'gkeHubScopeIamPolicy', { get: function () { return require('./gke-hub-scope-iam-policy'); } });
Object.defineProperty(exports, 'gkeHubScopeRbacRoleBinding', { get: function () { return require('./gke-hub-scope-rbac-role-binding'); } });
Object.defineProperty(exports, 'gkeonpremBareMetalAdminCluster', { get: function () { return require('./gkeonprem-bare-metal-admin-cluster'); } });
Object.defineProperty(exports, 'gkeonpremBareMetalCluster', { get: function () { return require('./gkeonprem-bare-metal-cluster'); } });
Object.defineProperty(exports, 'gkeonpremBareMetalNodePool', { get: function () { return require('./gkeonprem-bare-metal-node-pool'); } });
Object.defineProperty(exports, 'gkeonpremVmwareCluster', { get: function () { return require('./gkeonprem-vmware-cluster'); } });
Object.defineProperty(exports, 'gkeonpremVmwareNodePool', { get: function () { return require('./gkeonprem-vmware-node-pool'); } });
Object.defineProperty(exports, 'healthcareConsentStore', { get: function () { return require('./healthcare-consent-store'); } });
Object.defineProperty(exports, 'healthcareConsentStoreIamBinding', { get: function () { return require('./healthcare-consent-store-iam-binding'); } });
Object.defineProperty(exports, 'healthcareConsentStoreIamMember', { get: function () { return require('./healthcare-consent-store-iam-member'); } });
Object.defineProperty(exports, 'healthcareConsentStoreIamPolicy', { get: function () { return require('./healthcare-consent-store-iam-policy'); } });
Object.defineProperty(exports, 'healthcareDataset', { get: function () { return require('./healthcare-dataset'); } });
Object.defineProperty(exports, 'healthcareDatasetIamBinding', { get: function () { return require('./healthcare-dataset-iam-binding'); } });
Object.defineProperty(exports, 'healthcareDatasetIamMember', { get: function () { return require('./healthcare-dataset-iam-member'); } });
Object.defineProperty(exports, 'healthcareDatasetIamPolicy', { get: function () { return require('./healthcare-dataset-iam-policy'); } });
Object.defineProperty(exports, 'healthcareDicomStore', { get: function () { return require('./healthcare-dicom-store'); } });
Object.defineProperty(exports, 'healthcareDicomStoreIamBinding', { get: function () { return require('./healthcare-dicom-store-iam-binding'); } });
Object.defineProperty(exports, 'healthcareDicomStoreIamMember', { get: function () { return require('./healthcare-dicom-store-iam-member'); } });
Object.defineProperty(exports, 'healthcareDicomStoreIamPolicy', { get: function () { return require('./healthcare-dicom-store-iam-policy'); } });
Object.defineProperty(exports, 'healthcareFhirStore', { get: function () { return require('./healthcare-fhir-store'); } });
Object.defineProperty(exports, 'healthcareFhirStoreIamBinding', { get: function () { return require('./healthcare-fhir-store-iam-binding'); } });
Object.defineProperty(exports, 'healthcareFhirStoreIamMember', { get: function () { return require('./healthcare-fhir-store-iam-member'); } });
Object.defineProperty(exports, 'healthcareFhirStoreIamPolicy', { get: function () { return require('./healthcare-fhir-store-iam-policy'); } });
Object.defineProperty(exports, 'healthcareHl7V2Store', { get: function () { return require('./healthcare-hl7-v2-store'); } });
Object.defineProperty(exports, 'healthcareHl7V2StoreIamBinding', { get: function () { return require('./healthcare-hl7-v2-store-iam-binding'); } });
Object.defineProperty(exports, 'healthcareHl7V2StoreIamMember', { get: function () { return require('./healthcare-hl7-v2-store-iam-member'); } });
Object.defineProperty(exports, 'healthcareHl7V2StoreIamPolicy', { get: function () { return require('./healthcare-hl7-v2-store-iam-policy'); } });
Object.defineProperty(exports, 'healthcarePipelineJob', { get: function () { return require('./healthcare-pipeline-job'); } });
Object.defineProperty(exports, 'healthcareWorkspace', { get: function () { return require('./healthcare-workspace'); } });
Object.defineProperty(exports, 'iamAccessBoundaryPolicy', { get: function () { return require('./iam-access-boundary-policy'); } });
Object.defineProperty(exports, 'iamDenyPolicy', { get: function () { return require('./iam-deny-policy'); } });
Object.defineProperty(exports, 'iamFoldersPolicyBinding', { get: function () { return require('./iam-folders-policy-binding'); } });
Object.defineProperty(exports, 'iamOrganizationsPolicyBinding', { get: function () { return require('./iam-organizations-policy-binding'); } });
Object.defineProperty(exports, 'iamPrincipalAccessBoundaryPolicy', { get: function () { return require('./iam-principal-access-boundary-policy'); } });
Object.defineProperty(exports, 'iamProjectsPolicyBinding', { get: function () { return require('./iam-projects-policy-binding'); } });
Object.defineProperty(exports, 'iamWorkforcePool', { get: function () { return require('./iam-workforce-pool'); } });
Object.defineProperty(exports, 'iamWorkforcePoolProvider', { get: function () { return require('./iam-workforce-pool-provider'); } });
Object.defineProperty(exports, 'iamWorkloadIdentityPool', { get: function () { return require('./iam-workload-identity-pool'); } });
Object.defineProperty(exports, 'iamWorkloadIdentityPoolProvider', { get: function () { return require('./iam-workload-identity-pool-provider'); } });
Object.defineProperty(exports, 'iapAppEngineServiceIamBinding', { get: function () { return require('./iap-app-engine-service-iam-binding'); } });
Object.defineProperty(exports, 'iapAppEngineServiceIamMember', { get: function () { return require('./iap-app-engine-service-iam-member'); } });
Object.defineProperty(exports, 'iapAppEngineServiceIamPolicy', { get: function () { return require('./iap-app-engine-service-iam-policy'); } });
Object.defineProperty(exports, 'iapAppEngineVersionIamBinding', { get: function () { return require('./iap-app-engine-version-iam-binding'); } });
Object.defineProperty(exports, 'iapAppEngineVersionIamMember', { get: function () { return require('./iap-app-engine-version-iam-member'); } });
Object.defineProperty(exports, 'iapAppEngineVersionIamPolicy', { get: function () { return require('./iap-app-engine-version-iam-policy'); } });
Object.defineProperty(exports, 'iapBrand', { get: function () { return require('./iap-brand'); } });
Object.defineProperty(exports, 'iapClient', { get: function () { return require('./iap-client'); } });
Object.defineProperty(exports, 'iapSettings', { get: function () { return require('./iap-settings'); } });
Object.defineProperty(exports, 'iapTunnelDestGroup', { get: function () { return require('./iap-tunnel-dest-group'); } });
Object.defineProperty(exports, 'iapTunnelDestGroupIamBinding', { get: function () { return require('./iap-tunnel-dest-group-iam-binding'); } });
Object.defineProperty(exports, 'iapTunnelDestGroupIamMember', { get: function () { return require('./iap-tunnel-dest-group-iam-member'); } });
Object.defineProperty(exports, 'iapTunnelDestGroupIamPolicy', { get: function () { return require('./iap-tunnel-dest-group-iam-policy'); } });
Object.defineProperty(exports, 'iapTunnelIamBinding', { get: function () { return require('./iap-tunnel-iam-binding'); } });
Object.defineProperty(exports, 'iapTunnelIamMember', { get: function () { return require('./iap-tunnel-iam-member'); } });
Object.defineProperty(exports, 'iapTunnelIamPolicy', { get: function () { return require('./iap-tunnel-iam-policy'); } });
Object.defineProperty(exports, 'iapTunnelInstanceIamBinding', { get: function () { return require('./iap-tunnel-instance-iam-binding'); } });
Object.defineProperty(exports, 'iapTunnelInstanceIamMember', { get: function () { return require('./iap-tunnel-instance-iam-member'); } });
Object.defineProperty(exports, 'iapTunnelInstanceIamPolicy', { get: function () { return require('./iap-tunnel-instance-iam-policy'); } });
Object.defineProperty(exports, 'iapWebBackendServiceIamBinding', { get: function () { return require('./iap-web-backend-service-iam-binding'); } });
Object.defineProperty(exports, 'iapWebBackendServiceIamMember', { get: function () { return require('./iap-web-backend-service-iam-member'); } });
Object.defineProperty(exports, 'iapWebBackendServiceIamPolicy', { get: function () { return require('./iap-web-backend-service-iam-policy'); } });
Object.defineProperty(exports, 'iapWebIamBinding', { get: function () { return require('./iap-web-iam-binding'); } });
Object.defineProperty(exports, 'iapWebIamMember', { get: function () { return require('./iap-web-iam-member'); } });
Object.defineProperty(exports, 'iapWebIamPolicy', { get: function () { return require('./iap-web-iam-policy'); } });
Object.defineProperty(exports, 'iapWebRegionBackendServiceIamBinding', { get: function () { return require('./iap-web-region-backend-service-iam-binding'); } });
Object.defineProperty(exports, 'iapWebRegionBackendServiceIamMember', { get: function () { return require('./iap-web-region-backend-service-iam-member'); } });
Object.defineProperty(exports, 'iapWebRegionBackendServiceIamPolicy', { get: function () { return require('./iap-web-region-backend-service-iam-policy'); } });
Object.defineProperty(exports, 'iapWebTypeAppEngineIamBinding', { get: function () { return require('./iap-web-type-app-engine-iam-binding'); } });
Object.defineProperty(exports, 'iapWebTypeAppEngineIamMember', { get: function () { return require('./iap-web-type-app-engine-iam-member'); } });
Object.defineProperty(exports, 'iapWebTypeAppEngineIamPolicy', { get: function () { return require('./iap-web-type-app-engine-iam-policy'); } });
Object.defineProperty(exports, 'iapWebTypeComputeIamBinding', { get: function () { return require('./iap-web-type-compute-iam-binding'); } });
Object.defineProperty(exports, 'iapWebTypeComputeIamMember', { get: function () { return require('./iap-web-type-compute-iam-member'); } });
Object.defineProperty(exports, 'iapWebTypeComputeIamPolicy', { get: function () { return require('./iap-web-type-compute-iam-policy'); } });
Object.defineProperty(exports, 'identityPlatformConfig', { get: function () { return require('./identity-platform-config'); } });
Object.defineProperty(exports, 'identityPlatformDefaultSupportedIdpConfig', { get: function () { return require('./identity-platform-default-supported-idp-config'); } });
Object.defineProperty(exports, 'identityPlatformInboundSamlConfig', { get: function () { return require('./identity-platform-inbound-saml-config'); } });
Object.defineProperty(exports, 'identityPlatformOauthIdpConfig', { get: function () { return require('./identity-platform-oauth-idp-config'); } });
Object.defineProperty(exports, 'identityPlatformTenant', { get: function () { return require('./identity-platform-tenant'); } });
Object.defineProperty(exports, 'identityPlatformTenantDefaultSupportedIdpConfig', { get: function () { return require('./identity-platform-tenant-default-supported-idp-config'); } });
Object.defineProperty(exports, 'identityPlatformTenantInboundSamlConfig', { get: function () { return require('./identity-platform-tenant-inbound-saml-config'); } });
Object.defineProperty(exports, 'identityPlatformTenantOauthIdpConfig', { get: function () { return require('./identity-platform-tenant-oauth-idp-config'); } });
Object.defineProperty(exports, 'integrationConnectorsConnection', { get: function () { return require('./integration-connectors-connection'); } });
Object.defineProperty(exports, 'integrationConnectorsEndpointAttachment', { get: function () { return require('./integration-connectors-endpoint-attachment'); } });
Object.defineProperty(exports, 'integrationConnectorsManagedZone', { get: function () { return require('./integration-connectors-managed-zone'); } });
Object.defineProperty(exports, 'integrationsAuthConfig', { get: function () { return require('./integrations-auth-config'); } });
Object.defineProperty(exports, 'integrationsClient', { get: function () { return require('./integrations-client'); } });
Object.defineProperty(exports, 'kmsCryptoKey', { get: function () { return require('./kms-crypto-key'); } });
Object.defineProperty(exports, 'kmsCryptoKeyIamBinding', { get: function () { return require('./kms-crypto-key-iam-binding'); } });
Object.defineProperty(exports, 'kmsCryptoKeyIamMember', { get: function () { return require('./kms-crypto-key-iam-member'); } });
Object.defineProperty(exports, 'kmsCryptoKeyIamPolicy', { get: function () { return require('./kms-crypto-key-iam-policy'); } });
Object.defineProperty(exports, 'kmsCryptoKeyVersion', { get: function () { return require('./kms-crypto-key-version'); } });
Object.defineProperty(exports, 'kmsEkmConnection', { get: function () { return require('./kms-ekm-connection'); } });
Object.defineProperty(exports, 'kmsEkmConnectionIamBinding', { get: function () { return require('./kms-ekm-connection-iam-binding'); } });
Object.defineProperty(exports, 'kmsEkmConnectionIamMember', { get: function () { return require('./kms-ekm-connection-iam-member'); } });
Object.defineProperty(exports, 'kmsEkmConnectionIamPolicy', { get: function () { return require('./kms-ekm-connection-iam-policy'); } });
Object.defineProperty(exports, 'kmsKeyRing', { get: function () { return require('./kms-key-ring'); } });
Object.defineProperty(exports, 'kmsKeyRingIamBinding', { get: function () { return require('./kms-key-ring-iam-binding'); } });
Object.defineProperty(exports, 'kmsKeyRingIamMember', { get: function () { return require('./kms-key-ring-iam-member'); } });
Object.defineProperty(exports, 'kmsKeyRingIamPolicy', { get: function () { return require('./kms-key-ring-iam-policy'); } });
Object.defineProperty(exports, 'kmsKeyRingImportJob', { get: function () { return require('./kms-key-ring-import-job'); } });
Object.defineProperty(exports, 'kmsSecretCiphertext', { get: function () { return require('./kms-secret-ciphertext'); } });
Object.defineProperty(exports, 'loggingBillingAccountBucketConfig', { get: function () { return require('./logging-billing-account-bucket-config'); } });
Object.defineProperty(exports, 'loggingBillingAccountExclusion', { get: function () { return require('./logging-billing-account-exclusion'); } });
Object.defineProperty(exports, 'loggingBillingAccountSink', { get: function () { return require('./logging-billing-account-sink'); } });
Object.defineProperty(exports, 'loggingFolderBucketConfig', { get: function () { return require('./logging-folder-bucket-config'); } });
Object.defineProperty(exports, 'loggingFolderExclusion', { get: function () { return require('./logging-folder-exclusion'); } });
Object.defineProperty(exports, 'loggingFolderSettings', { get: function () { return require('./logging-folder-settings'); } });
Object.defineProperty(exports, 'loggingFolderSink', { get: function () { return require('./logging-folder-sink'); } });
Object.defineProperty(exports, 'loggingLinkedDataset', { get: function () { return require('./logging-linked-dataset'); } });
Object.defineProperty(exports, 'loggingLogScope', { get: function () { return require('./logging-log-scope'); } });
Object.defineProperty(exports, 'loggingLogView', { get: function () { return require('./logging-log-view'); } });
Object.defineProperty(exports, 'loggingLogViewIamBinding', { get: function () { return require('./logging-log-view-iam-binding'); } });
Object.defineProperty(exports, 'loggingLogViewIamMember', { get: function () { return require('./logging-log-view-iam-member'); } });
Object.defineProperty(exports, 'loggingLogViewIamPolicy', { get: function () { return require('./logging-log-view-iam-policy'); } });
Object.defineProperty(exports, 'loggingMetric', { get: function () { return require('./logging-metric'); } });
Object.defineProperty(exports, 'loggingOrganizationBucketConfig', { get: function () { return require('./logging-organization-bucket-config'); } });
Object.defineProperty(exports, 'loggingOrganizationExclusion', { get: function () { return require('./logging-organization-exclusion'); } });
Object.defineProperty(exports, 'loggingOrganizationSettings', { get: function () { return require('./logging-organization-settings'); } });
Object.defineProperty(exports, 'loggingOrganizationSink', { get: function () { return require('./logging-organization-sink'); } });
Object.defineProperty(exports, 'loggingProjectBucketConfig', { get: function () { return require('./logging-project-bucket-config'); } });
Object.defineProperty(exports, 'loggingProjectExclusion', { get: function () { return require('./logging-project-exclusion'); } });
Object.defineProperty(exports, 'loggingProjectSink', { get: function () { return require('./logging-project-sink'); } });
Object.defineProperty(exports, 'lookerInstance', { get: function () { return require('./looker-instance'); } });
Object.defineProperty(exports, 'managedKafkaCluster', { get: function () { return require('./managed-kafka-cluster'); } });
Object.defineProperty(exports, 'managedKafkaTopic', { get: function () { return require('./managed-kafka-topic'); } });
Object.defineProperty(exports, 'memcacheInstance', { get: function () { return require('./memcache-instance'); } });
Object.defineProperty(exports, 'memorystoreInstance', { get: function () { return require('./memorystore-instance'); } });
Object.defineProperty(exports, 'migrationCenterGroup', { get: function () { return require('./migration-center-group'); } });
Object.defineProperty(exports, 'migrationCenterPreferenceSet', { get: function () { return require('./migration-center-preference-set'); } });
Object.defineProperty(exports, 'mlEngineModel', { get: function () { return require('./ml-engine-model'); } });
Object.defineProperty(exports, 'monitoringAlertPolicy', { get: function () { return require('./monitoring-alert-policy'); } });
Object.defineProperty(exports, 'monitoringCustomService', { get: function () { return require('./monitoring-custom-service'); } });
Object.defineProperty(exports, 'monitoringDashboard', { get: function () { return require('./monitoring-dashboard'); } });
Object.defineProperty(exports, 'monitoringGroup', { get: function () { return require('./monitoring-group'); } });
Object.defineProperty(exports, 'monitoringMetricDescriptor', { get: function () { return require('./monitoring-metric-descriptor'); } });
Object.defineProperty(exports, 'monitoringMonitoredProject', { get: function () { return require('./monitoring-monitored-project'); } });
Object.defineProperty(exports, 'monitoringNotificationChannel', { get: function () { return require('./monitoring-notification-channel'); } });
Object.defineProperty(exports, 'monitoringService', { get: function () { return require('./monitoring-service'); } });
Object.defineProperty(exports, 'monitoringSlo', { get: function () { return require('./monitoring-slo'); } });
Object.defineProperty(exports, 'monitoringUptimeCheckConfig', { get: function () { return require('./monitoring-uptime-check-config'); } });
Object.defineProperty(exports, 'netappActiveDirectory', { get: function () { return require('./netapp-active-directory'); } });
Object.defineProperty(exports, 'netappBackup', { get: function () { return require('./netapp-backup'); } });
Object.defineProperty(exports, 'netappBackupPolicy', { get: function () { return require('./netapp-backup-policy'); } });
Object.defineProperty(exports, 'netappBackupVault', { get: function () { return require('./netapp-backup-vault'); } });
Object.defineProperty(exports, 'netappKmsconfig', { get: function () { return require('./netapp-kmsconfig'); } });
Object.defineProperty(exports, 'netappStoragePool', { get: function () { return require('./netapp-storage-pool'); } });
Object.defineProperty(exports, 'netappVolume', { get: function () { return require('./netapp-volume'); } });
Object.defineProperty(exports, 'netappVolumeReplication', { get: function () { return require('./netapp-volume-replication'); } });
Object.defineProperty(exports, 'netappVolumeSnapshot', { get: function () { return require('./netapp-volume-snapshot'); } });
Object.defineProperty(exports, 'networkConnectivityGroup', { get: function () { return require('./network-connectivity-group'); } });
Object.defineProperty(exports, 'networkConnectivityHub', { get: function () { return require('./network-connectivity-hub'); } });
Object.defineProperty(exports, 'networkConnectivityInternalRange', { get: function () { return require('./network-connectivity-internal-range'); } });
Object.defineProperty(exports, 'networkConnectivityPolicyBasedRoute', { get: function () { return require('./network-connectivity-policy-based-route'); } });
Object.defineProperty(exports, 'networkConnectivityRegionalEndpoint', { get: function () { return require('./network-connectivity-regional-endpoint'); } });
Object.defineProperty(exports, 'networkConnectivityServiceConnectionPolicy', { get: function () { return require('./network-connectivity-service-connection-policy'); } });
Object.defineProperty(exports, 'networkConnectivitySpoke', { get: function () { return require('./network-connectivity-spoke'); } });
Object.defineProperty(exports, 'networkManagementConnectivityTest', { get: function () { return require('./network-management-connectivity-test'); } });
Object.defineProperty(exports, 'networkSecurityAddressGroup', { get: function () { return require('./network-security-address-group'); } });
Object.defineProperty(exports, 'networkSecurityAddressGroupIamBinding', { get: function () { return require('./network-security-address-group-iam-binding'); } });
Object.defineProperty(exports, 'networkSecurityAddressGroupIamMember', { get: function () { return require('./network-security-address-group-iam-member'); } });
Object.defineProperty(exports, 'networkSecurityAddressGroupIamPolicy', { get: function () { return require('./network-security-address-group-iam-policy'); } });
Object.defineProperty(exports, 'networkSecurityAuthzPolicy', { get: function () { return require('./network-security-authz-policy'); } });
Object.defineProperty(exports, 'networkSecurityClientTlsPolicy', { get: function () { return require('./network-security-client-tls-policy'); } });
Object.defineProperty(exports, 'networkSecurityFirewallEndpoint', { get: function () { return require('./network-security-firewall-endpoint'); } });
Object.defineProperty(exports, 'networkSecurityFirewallEndpointAssociation', { get: function () { return require('./network-security-firewall-endpoint-association'); } });
Object.defineProperty(exports, 'networkSecurityGatewaySecurityPolicy', { get: function () { return require('./network-security-gateway-security-policy'); } });
Object.defineProperty(exports, 'networkSecurityGatewaySecurityPolicyRule', { get: function () { return require('./network-security-gateway-security-policy-rule'); } });
Object.defineProperty(exports, 'networkSecuritySecurityProfile', { get: function () { return require('./network-security-security-profile'); } });
Object.defineProperty(exports, 'networkSecuritySecurityProfileGroup', { get: function () { return require('./network-security-security-profile-group'); } });
Object.defineProperty(exports, 'networkSecurityServerTlsPolicy', { get: function () { return require('./network-security-server-tls-policy'); } });
Object.defineProperty(exports, 'networkSecurityTlsInspectionPolicy', { get: function () { return require('./network-security-tls-inspection-policy'); } });
Object.defineProperty(exports, 'networkSecurityUrlLists', { get: function () { return require('./network-security-url-lists'); } });
Object.defineProperty(exports, 'networkServicesAuthzExtension', { get: function () { return require('./network-services-authz-extension'); } });
Object.defineProperty(exports, 'networkServicesEdgeCacheKeyset', { get: function () { return require('./network-services-edge-cache-keyset'); } });
Object.defineProperty(exports, 'networkServicesEdgeCacheOrigin', { get: function () { return require('./network-services-edge-cache-origin'); } });
Object.defineProperty(exports, 'networkServicesEdgeCacheService', { get: function () { return require('./network-services-edge-cache-service'); } });
Object.defineProperty(exports, 'networkServicesGateway', { get: function () { return require('./network-services-gateway'); } });
Object.defineProperty(exports, 'networkServicesLbRouteExtension', { get: function () { return require('./network-services-lb-route-extension'); } });
Object.defineProperty(exports, 'networkServicesLbTrafficExtension', { get: function () { return require('./network-services-lb-traffic-extension'); } });
Object.defineProperty(exports, 'notebooksEnvironment', { get: function () { return require('./notebooks-environment'); } });
Object.defineProperty(exports, 'notebooksInstance', { get: function () { return require('./notebooks-instance'); } });
Object.defineProperty(exports, 'notebooksInstanceIamBinding', { get: function () { return require('./notebooks-instance-iam-binding'); } });
Object.defineProperty(exports, 'notebooksInstanceIamMember', { get: function () { return require('./notebooks-instance-iam-member'); } });
Object.defineProperty(exports, 'notebooksInstanceIamPolicy', { get: function () { return require('./notebooks-instance-iam-policy'); } });
Object.defineProperty(exports, 'notebooksLocation', { get: function () { return require('./notebooks-location'); } });
Object.defineProperty(exports, 'notebooksRuntime', { get: function () { return require('./notebooks-runtime'); } });
Object.defineProperty(exports, 'notebooksRuntimeIamBinding', { get: function () { return require('./notebooks-runtime-iam-binding'); } });
Object.defineProperty(exports, 'notebooksRuntimeIamMember', { get: function () { return require('./notebooks-runtime-iam-member'); } });
Object.defineProperty(exports, 'notebooksRuntimeIamPolicy', { get: function () { return require('./notebooks-runtime-iam-policy'); } });
Object.defineProperty(exports, 'oracleDatabaseAutonomousDatabase', { get: function () { return require('./oracle-database-autonomous-database'); } });
Object.defineProperty(exports, 'oracleDatabaseCloudExadataInfrastructure', { get: function () { return require('./oracle-database-cloud-exadata-infrastructure'); } });
Object.defineProperty(exports, 'oracleDatabaseCloudVmCluster', { get: function () { return require('./oracle-database-cloud-vm-cluster'); } });
Object.defineProperty(exports, 'orgPolicyCustomConstraint', { get: function () { return require('./org-policy-custom-constraint'); } });
Object.defineProperty(exports, 'orgPolicyPolicy', { get: function () { return require('./org-policy-policy'); } });
Object.defineProperty(exports, 'organizationAccessApprovalSettings', { get: function () { return require('./organization-access-approval-settings'); } });
Object.defineProperty(exports, 'organizationIamAuditConfig', { get: function () { return require('./organization-iam-audit-config'); } });
Object.defineProperty(exports, 'organizationIamBinding', { get: function () { return require('./organization-iam-binding'); } });
Object.defineProperty(exports, 'organizationIamCustomRole', { get: function () { return require('./organization-iam-custom-role'); } });
Object.defineProperty(exports, 'organizationIamMember', { get: function () { return require('./organization-iam-member'); } });
Object.defineProperty(exports, 'organizationIamPolicy', { get: function () { return require('./organization-iam-policy'); } });
Object.defineProperty(exports, 'organizationPolicy', { get: function () { return require('./organization-policy'); } });
Object.defineProperty(exports, 'osConfigOsPolicyAssignment', { get: function () { return require('./os-config-os-policy-assignment'); } });
Object.defineProperty(exports, 'osConfigPatchDeployment', { get: function () { return require('./os-config-patch-deployment'); } });
Object.defineProperty(exports, 'osLoginSshPublicKey', { get: function () { return require('./os-login-ssh-public-key'); } });
Object.defineProperty(exports, 'parallelstoreInstance', { get: function () { return require('./parallelstore-instance'); } });
Object.defineProperty(exports, 'privatecaCaPool', { get: function () { return require('./privateca-ca-pool'); } });
Object.defineProperty(exports, 'privatecaCaPoolIamBinding', { get: function () { return require('./privateca-ca-pool-iam-binding'); } });
Object.defineProperty(exports, 'privatecaCaPoolIamMember', { get: function () { return require('./privateca-ca-pool-iam-member'); } });
Object.defineProperty(exports, 'privatecaCaPoolIamPolicy', { get: function () { return require('./privateca-ca-pool-iam-policy'); } });
Object.defineProperty(exports, 'privatecaCertificate', { get: function () { return require('./privateca-certificate'); } });
Object.defineProperty(exports, 'privatecaCertificateAuthority', { get: function () { return require('./privateca-certificate-authority'); } });
Object.defineProperty(exports, 'privatecaCertificateTemplate', { get: function () { return require('./privateca-certificate-template'); } });
Object.defineProperty(exports, 'privatecaCertificateTemplateIamBinding', { get: function () { return require('./privateca-certificate-template-iam-binding'); } });
Object.defineProperty(exports, 'privatecaCertificateTemplateIamMember', { get: function () { return require('./privateca-certificate-template-iam-member'); } });
Object.defineProperty(exports, 'privatecaCertificateTemplateIamPolicy', { get: function () { return require('./privateca-certificate-template-iam-policy'); } });
Object.defineProperty(exports, 'privilegedAccessManagerEntitlement', { get: function () { return require('./privileged-access-manager-entitlement'); } });
Object.defineProperty(exports, 'project', { get: function () { return require('./project'); } });
Object.defineProperty(exports, 'projectAccessApprovalSettings', { get: function () { return require('./project-access-approval-settings'); } });
Object.defineProperty(exports, 'projectDefaultServiceAccounts', { get: function () { return require('./project-default-service-accounts'); } });
Object.defineProperty(exports, 'projectIamAuditConfig', { get: function () { return require('./project-iam-audit-config'); } });
Object.defineProperty(exports, 'projectIamBinding', { get: function () { return require('./project-iam-binding'); } });
Object.defineProperty(exports, 'projectIamCustomRole', { get: function () { return require('./project-iam-custom-role'); } });
Object.defineProperty(exports, 'projectIamMember', { get: function () { return require('./project-iam-member'); } });
Object.defineProperty(exports, 'projectIamMemberRemove', { get: function () { return require('./project-iam-member-remove'); } });
Object.defineProperty(exports, 'projectIamPolicy', { get: function () { return require('./project-iam-policy'); } });
Object.defineProperty(exports, 'projectOrganizationPolicy', { get: function () { return require('./project-organization-policy'); } });
Object.defineProperty(exports, 'projectService', { get: function () { return require('./project-service'); } });
Object.defineProperty(exports, 'projectUsageExportBucket', { get: function () { return require('./project-usage-export-bucket'); } });
Object.defineProperty(exports, 'publicCaExternalAccountKey', { get: function () { return require('./public-ca-external-account-key'); } });
Object.defineProperty(exports, 'pubsubLiteReservation', { get: function () { return require('./pubsub-lite-reservation'); } });
Object.defineProperty(exports, 'pubsubLiteSubscription', { get: function () { return require('./pubsub-lite-subscription'); } });
Object.defineProperty(exports, 'pubsubLiteTopic', { get: function () { return require('./pubsub-lite-topic'); } });
Object.defineProperty(exports, 'pubsubSchema', { get: function () { return require('./pubsub-schema'); } });
Object.defineProperty(exports, 'pubsubSchemaIamBinding', { get: function () { return require('./pubsub-schema-iam-binding'); } });
Object.defineProperty(exports, 'pubsubSchemaIamMember', { get: function () { return require('./pubsub-schema-iam-member'); } });
Object.defineProperty(exports, 'pubsubSchemaIamPolicy', { get: function () { return require('./pubsub-schema-iam-policy'); } });
Object.defineProperty(exports, 'pubsubSubscription', { get: function () { return require('./pubsub-subscription'); } });
Object.defineProperty(exports, 'pubsubSubscriptionIamBinding', { get: function () { return require('./pubsub-subscription-iam-binding'); } });
Object.defineProperty(exports, 'pubsubSubscriptionIamMember', { get: function () { return require('./pubsub-subscription-iam-member'); } });
Object.defineProperty(exports, 'pubsubSubscriptionIamPolicy', { get: function () { return require('./pubsub-subscription-iam-policy'); } });
Object.defineProperty(exports, 'pubsubTopic', { get: function () { return require('./pubsub-topic'); } });
Object.defineProperty(exports, 'pubsubTopicIamBinding', { get: function () { return require('./pubsub-topic-iam-binding'); } });
Object.defineProperty(exports, 'pubsubTopicIamMember', { get: function () { return require('./pubsub-topic-iam-member'); } });
Object.defineProperty(exports, 'pubsubTopicIamPolicy', { get: function () { return require('./pubsub-topic-iam-policy'); } });
Object.defineProperty(exports, 'recaptchaEnterpriseKey', { get: function () { return require('./recaptcha-enterprise-key'); } });
Object.defineProperty(exports, 'redisCluster', { get: function () { return require('./redis-cluster'); } });
Object.defineProperty(exports, 'redisInstance', { get: function () { return require('./redis-instance'); } });
Object.defineProperty(exports, 'resourceManagerLien', { get: function () { return require('./resource-manager-lien'); } });
Object.defineProperty(exports, 'sccEventThreatDetectionCustomModule', { get: function () { return require('./scc-event-threat-detection-custom-module'); } });
Object.defineProperty(exports, 'sccFolderCustomModule', { get: function () { return require('./scc-folder-custom-module'); } });
Object.defineProperty(exports, 'sccFolderNotificationConfig', { get: function () { return require('./scc-folder-notification-config'); } });
Object.defineProperty(exports, 'sccFolderSccBigQueryExport', { get: function () { return require('./scc-folder-scc-big-query-export'); } });
Object.defineProperty(exports, 'sccManagementFolderSecurityHealthAnalyticsCustomModule', { get: function () { return require('./scc-management-folder-security-health-analytics-custom-module'); } });
Object.defineProperty(exports, 'sccManagementOrganizationEventThreatDetectionCustomModule', { get: function () { return require('./scc-management-organization-event-threat-detection-custom-module'); } });
Object.defineProperty(exports, 'sccManagementOrganizationSecurityHealthAnalyticsCustomModule', { get: function () { return require('./scc-management-organization-security-health-analytics-custom-module'); } });
Object.defineProperty(exports, 'sccManagementProjectSecurityHealthAnalyticsCustomModule', { get: function () { return require('./scc-management-project-security-health-analytics-custom-module'); } });
Object.defineProperty(exports, 'sccMuteConfig', { get: function () { return require('./scc-mute-config'); } });
Object.defineProperty(exports, 'sccNotificationConfig', { get: function () { return require('./scc-notification-config'); } });
Object.defineProperty(exports, 'sccOrganizationCustomModule', { get: function () { return require('./scc-organization-custom-module'); } });
Object.defineProperty(exports, 'sccOrganizationSccBigQueryExport', { get: function () { return require('./scc-organization-scc-big-query-export'); } });
Object.defineProperty(exports, 'sccProjectCustomModule', { get: function () { return require('./scc-project-custom-module'); } });
Object.defineProperty(exports, 'sccProjectNotificationConfig', { get: function () { return require('./scc-project-notification-config'); } });
Object.defineProperty(exports, 'sccProjectSccBigQueryExport', { get: function () { return require('./scc-project-scc-big-query-export'); } });
Object.defineProperty(exports, 'sccSource', { get: function () { return require('./scc-source'); } });
Object.defineProperty(exports, 'sccSourceIamBinding', { get: function () { return require('./scc-source-iam-binding'); } });
Object.defineProperty(exports, 'sccSourceIamMember', { get: function () { return require('./scc-source-iam-member'); } });
Object.defineProperty(exports, 'sccSourceIamPolicy', { get: function () { return require('./scc-source-iam-policy'); } });
Object.defineProperty(exports, 'sccV2FolderMuteConfig', { get: function () { return require('./scc-v2-folder-mute-config'); } });
Object.defineProperty(exports, 'sccV2FolderNotificationConfig', { get: function () { return require('./scc-v2-folder-notification-config'); } });
Object.defineProperty(exports, 'sccV2FolderSccBigQueryExport', { get: function () { return require('./scc-v2-folder-scc-big-query-export'); } });
Object.defineProperty(exports, 'sccV2OrganizationMuteConfig', { get: function () { return require('./scc-v2-organization-mute-config'); } });
Object.defineProperty(exports, 'sccV2OrganizationNotificationConfig', { get: function () { return require('./scc-v2-organization-notification-config'); } });
Object.defineProperty(exports, 'sccV2OrganizationSccBigQueryExport', { get: function () { return require('./scc-v2-organization-scc-big-query-export'); } });
Object.defineProperty(exports, 'sccV2OrganizationSccBigQueryExports', { get: function () { return require('./scc-v2-organization-scc-big-query-exports'); } });
Object.defineProperty(exports, 'sccV2OrganizationSource', { get: function () { return require('./scc-v2-organization-source'); } });
Object.defineProperty(exports, 'sccV2OrganizationSourceIamBinding', { get: function () { return require('./scc-v2-organization-source-iam-binding'); } });
Object.defineProperty(exports, 'sccV2OrganizationSourceIamMember', { get: function () { return require('./scc-v2-organization-source-iam-member'); } });
Object.defineProperty(exports, 'sccV2OrganizationSourceIamPolicy', { get: function () { return require('./scc-v2-organization-source-iam-policy'); } });
Object.defineProperty(exports, 'sccV2ProjectMuteConfig', { get: function () { return require('./scc-v2-project-mute-config'); } });
Object.defineProperty(exports, 'sccV2ProjectNotificationConfig', { get: function () { return require('./scc-v2-project-notification-config'); } });
Object.defineProperty(exports, 'sccV2ProjectSccBigQueryExport', { get: function () { return require('./scc-v2-project-scc-big-query-export'); } });
Object.defineProperty(exports, 'secretManagerRegionalSecret', { get: function () { return require('./secret-manager-regional-secret'); } });
Object.defineProperty(exports, 'secretManagerRegionalSecretIamBinding', { get: function () { return require('./secret-manager-regional-secret-iam-binding'); } });
Object.defineProperty(exports, 'secretManagerRegionalSecretIamMember', { get: function () { return require('./secret-manager-regional-secret-iam-member'); } });
Object.defineProperty(exports, 'secretManagerRegionalSecretIamPolicy', { get: function () { return require('./secret-manager-regional-secret-iam-policy'); } });
Object.defineProperty(exports, 'secretManagerRegionalSecretVersion', { get: function () { return require('./secret-manager-regional-secret-version'); } });
Object.defineProperty(exports, 'secretManagerSecret', { get: function () { return require('./secret-manager-secret'); } });
Object.defineProperty(exports, 'secretManagerSecretIamBinding', { get: function () { return require('./secret-manager-secret-iam-binding'); } });
Object.defineProperty(exports, 'secretManagerSecretIamMember', { get: function () { return require('./secret-manager-secret-iam-member'); } });
Object.defineProperty(exports, 'secretManagerSecretIamPolicy', { get: function () { return require('./secret-manager-secret-iam-policy'); } });
Object.defineProperty(exports, 'secretManagerSecretVersion', { get: function () { return require('./secret-manager-secret-version'); } });
Object.defineProperty(exports, 'secureSourceManagerBranchRule', { get: function () { return require('./secure-source-manager-branch-rule'); } });
Object.defineProperty(exports, 'secureSourceManagerInstance', { get: function () { return require('./secure-source-manager-instance'); } });
Object.defineProperty(exports, 'secureSourceManagerInstanceIamBinding', { get: function () { return require('./secure-source-manager-instance-iam-binding'); } });
Object.defineProperty(exports, 'secureSourceManagerInstanceIamMember', { get: function () { return require('./secure-source-manager-instance-iam-member'); } });
Object.defineProperty(exports, 'secureSourceManagerInstanceIamPolicy', { get: function () { return require('./secure-source-manager-instance-iam-policy'); } });
Object.defineProperty(exports, 'secureSourceManagerRepository', { get: function () { return require('./secure-source-manager-repository'); } });
Object.defineProperty(exports, 'secureSourceManagerRepositoryIamBinding', { get: function () { return require('./secure-source-manager-repository-iam-binding'); } });
Object.defineProperty(exports, 'secureSourceManagerRepositoryIamMember', { get: function () { return require('./secure-source-manager-repository-iam-member'); } });
Object.defineProperty(exports, 'secureSourceManagerRepositoryIamPolicy', { get: function () { return require('./secure-source-manager-repository-iam-policy'); } });
Object.defineProperty(exports, 'securityposturePosture', { get: function () { return require('./securityposture-posture'); } });
Object.defineProperty(exports, 'securityposturePostureDeployment', { get: function () { return require('./securityposture-posture-deployment'); } });
Object.defineProperty(exports, 'serviceAccount', { get: function () { return require('./service-account'); } });
Object.defineProperty(exports, 'serviceAccountIamBinding', { get: function () { return require('./service-account-iam-binding'); } });
Object.defineProperty(exports, 'serviceAccountIamMember', { get: function () { return require('./service-account-iam-member'); } });
Object.defineProperty(exports, 'serviceAccountIamPolicy', { get: function () { return require('./service-account-iam-policy'); } });
Object.defineProperty(exports, 'serviceAccountKey', { get: function () { return require('./service-account-key'); } });
Object.defineProperty(exports, 'serviceNetworkingConnection', { get: function () { return require('./service-networking-connection'); } });
Object.defineProperty(exports, 'serviceNetworkingPeeredDnsDomain', { get: function () { return require('./service-networking-peered-dns-domain'); } });
Object.defineProperty(exports, 'serviceNetworkingVpcServiceControls', { get: function () { return require('./service-networking-vpc-service-controls'); } });
Object.defineProperty(exports, 'siteVerificationOwner', { get: function () { return require('./site-verification-owner'); } });
Object.defineProperty(exports, 'siteVerificationWebResource', { get: function () { return require('./site-verification-web-resource'); } });
Object.defineProperty(exports, 'sourcerepoRepository', { get: function () { return require('./sourcerepo-repository'); } });
Object.defineProperty(exports, 'sourcerepoRepositoryIamBinding', { get: function () { return require('./sourcerepo-repository-iam-binding'); } });
Object.defineProperty(exports, 'sourcerepoRepositoryIamMember', { get: function () { return require('./sourcerepo-repository-iam-member'); } });
Object.defineProperty(exports, 'sourcerepoRepositoryIamPolicy', { get: function () { return require('./sourcerepo-repository-iam-policy'); } });
Object.defineProperty(exports, 'spannerBackupSchedule', { get: function () { return require('./spanner-backup-schedule'); } });
Object.defineProperty(exports, 'spannerDatabase', { get: function () { return require('./spanner-database'); } });
Object.defineProperty(exports, 'spannerDatabaseIamBinding', { get: function () { return require('./spanner-database-iam-binding'); } });
Object.defineProperty(exports, 'spannerDatabaseIamMember', { get: function () { return require('./spanner-database-iam-member'); } });
Object.defineProperty(exports, 'spannerDatabaseIamPolicy', { get: function () { return require('./spanner-database-iam-policy'); } });
Object.defineProperty(exports, 'spannerInstance', { get: function () { return require('./spanner-instance'); } });
Object.defineProperty(exports, 'spannerInstanceConfig', { get: function () { return require('./spanner-instance-config'); } });
Object.defineProperty(exports, 'spannerInstanceIamBinding', { get: function () { return require('./spanner-instance-iam-binding'); } });
Object.defineProperty(exports, 'spannerInstanceIamMember', { get: function () { return require('./spanner-instance-iam-member'); } });
Object.defineProperty(exports, 'spannerInstanceIamPolicy', { get: function () { return require('./spanner-instance-iam-policy'); } });
Object.defineProperty(exports, 'sqlDatabase', { get: function () { return require('./sql-database'); } });
Object.defineProperty(exports, 'sqlDatabaseInstance', { get: function () { return require('./sql-database-instance'); } });
Object.defineProperty(exports, 'sqlSourceRepresentationInstance', { get: function () { return require('./sql-source-representation-instance'); } });
Object.defineProperty(exports, 'sqlSslCert', { get: function () { return require('./sql-ssl-cert'); } });
Object.defineProperty(exports, 'sqlUser', { get: function () { return require('./sql-user'); } });
Object.defineProperty(exports, 'storageBucket', { get: function () { return require('./storage-bucket'); } });
Object.defineProperty(exports, 'storageBucketAccessControl', { get: function () { return require('./storage-bucket-access-control'); } });
Object.defineProperty(exports, 'storageBucketAcl', { get: function () { return require('./storage-bucket-acl'); } });
Object.defineProperty(exports, 'storageBucketIamBinding', { get: function () { return require('./storage-bucket-iam-binding'); } });
Object.defineProperty(exports, 'storageBucketIamMember', { get: function () { return require('./storage-bucket-iam-member'); } });
Object.defineProperty(exports, 'storageBucketIamPolicy', { get: function () { return require('./storage-bucket-iam-policy'); } });
Object.defineProperty(exports, 'storageBucketObject', { get: function () { return require('./storage-bucket-object'); } });
Object.defineProperty(exports, 'storageDefaultObjectAccessControl', { get: function () { return require('./storage-default-object-access-control'); } });
Object.defineProperty(exports, 'storageDefaultObjectAcl', { get: function () { return require('./storage-default-object-acl'); } });
Object.defineProperty(exports, 'storageHmacKey', { get: function () { return require('./storage-hmac-key'); } });
Object.defineProperty(exports, 'storageInsightsReportConfig', { get: function () { return require('./storage-insights-report-config'); } });
Object.defineProperty(exports, 'storageManagedFolder', { get: function () { return require('./storage-managed-folder'); } });
Object.defineProperty(exports, 'storageManagedFolderIamBinding', { get: function () { return require('./storage-managed-folder-iam-binding'); } });
Object.defineProperty(exports, 'storageManagedFolderIamMember', { get: function () { return require('./storage-managed-folder-iam-member'); } });
Object.defineProperty(exports, 'storageManagedFolderIamPolicy', { get: function () { return require('./storage-managed-folder-iam-policy'); } });
Object.defineProperty(exports, 'storageNotification', { get: function () { return require('./storage-notification'); } });
Object.defineProperty(exports, 'storageObjectAccessControl', { get: function () { return require('./storage-object-access-control'); } });
Object.defineProperty(exports, 'storageObjectAcl', { get: function () { return require('./storage-object-acl'); } });
Object.defineProperty(exports, 'storageTransferAgentPool', { get: function () { return require('./storage-transfer-agent-pool'); } });
Object.defineProperty(exports, 'storageTransferJob', { get: function () { return require('./storage-transfer-job'); } });
Object.defineProperty(exports, 'tagsLocationTagBinding', { get: function () { return require('./tags-location-tag-binding'); } });
Object.defineProperty(exports, 'tagsTagBinding', { get: function () { return require('./tags-tag-binding'); } });
Object.defineProperty(exports, 'tagsTagKey', { get: function () { return require('./tags-tag-key'); } });
Object.defineProperty(exports, 'tagsTagKeyIamBinding', { get: function () { return require('./tags-tag-key-iam-binding'); } });
Object.defineProperty(exports, 'tagsTagKeyIamMember', { get: function () { return require('./tags-tag-key-iam-member'); } });
Object.defineProperty(exports, 'tagsTagKeyIamPolicy', { get: function () { return require('./tags-tag-key-iam-policy'); } });
Object.defineProperty(exports, 'tagsTagValue', { get: function () { return require('./tags-tag-value'); } });
Object.defineProperty(exports, 'tagsTagValueIamBinding', { get: function () { return require('./tags-tag-value-iam-binding'); } });
Object.defineProperty(exports, 'tagsTagValueIamMember', { get: function () { return require('./tags-tag-value-iam-member'); } });
Object.defineProperty(exports, 'tagsTagValueIamPolicy', { get: function () { return require('./tags-tag-value-iam-policy'); } });
Object.defineProperty(exports, 'tpuNode', { get: function () { return require('./tpu-node'); } });
Object.defineProperty(exports, 'transcoderJob', { get: function () { return require('./transcoder-job'); } });
Object.defineProperty(exports, 'transcoderJobTemplate', { get: function () { return require('./transcoder-job-template'); } });
Object.defineProperty(exports, 'vertexAiDataset', { get: function () { return require('./vertex-ai-dataset'); } });
Object.defineProperty(exports, 'vertexAiDeploymentResourcePool', { get: function () { return require('./vertex-ai-deployment-resource-pool'); } });
Object.defineProperty(exports, 'vertexAiEndpoint', { get: function () { return require('./vertex-ai-endpoint'); } });
Object.defineProperty(exports, 'vertexAiFeatureGroup', { get: function () { return require('./vertex-ai-feature-group'); } });
Object.defineProperty(exports, 'vertexAiFeatureGroupFeature', { get: function () { return require('./vertex-ai-feature-group-feature'); } });
Object.defineProperty(exports, 'vertexAiFeatureOnlineStore', { get: function () { return require('./vertex-ai-feature-online-store'); } });
Object.defineProperty(exports, 'vertexAiFeatureOnlineStoreFeatureview', { get: function () { return require('./vertex-ai-feature-online-store-featureview'); } });
Object.defineProperty(exports, 'vertexAiFeaturestore', { get: function () { return require('./vertex-ai-featurestore'); } });
Object.defineProperty(exports, 'vertexAiFeaturestoreEntitytype', { get: function () { return require('./vertex-ai-featurestore-entitytype'); } });
Object.defineProperty(exports, 'vertexAiFeaturestoreEntitytypeFeature', { get: function () { return require('./vertex-ai-featurestore-entitytype-feature'); } });
Object.defineProperty(exports, 'vertexAiIndex', { get: function () { return require('./vertex-ai-index'); } });
Object.defineProperty(exports, 'vertexAiIndexEndpoint', { get: function () { return require('./vertex-ai-index-endpoint'); } });
Object.defineProperty(exports, 'vertexAiIndexEndpointDeployedIndex', { get: function () { return require('./vertex-ai-index-endpoint-deployed-index'); } });
Object.defineProperty(exports, 'vertexAiTensorboard', { get: function () { return require('./vertex-ai-tensorboard'); } });
Object.defineProperty(exports, 'vmwareengineCluster', { get: function () { return require('./vmwareengine-cluster'); } });
Object.defineProperty(exports, 'vmwareengineExternalAccessRule', { get: function () { return require('./vmwareengine-external-access-rule'); } });
Object.defineProperty(exports, 'vmwareengineExternalAddress', { get: function () { return require('./vmwareengine-external-address'); } });
Object.defineProperty(exports, 'vmwareengineNetwork', { get: function () { return require('./vmwareengine-network'); } });
Object.defineProperty(exports, 'vmwareengineNetworkPeering', { get: function () { return require('./vmwareengine-network-peering'); } });
Object.defineProperty(exports, 'vmwareengineNetworkPolicy', { get: function () { return require('./vmwareengine-network-policy'); } });
Object.defineProperty(exports, 'vmwareenginePrivateCloud', { get: function () { return require('./vmwareengine-private-cloud'); } });
Object.defineProperty(exports, 'vmwareengineSubnet', { get: function () { return require('./vmwareengine-subnet'); } });
Object.defineProperty(exports, 'vpcAccessConnector', { get: function () { return require('./vpc-access-connector'); } });
Object.defineProperty(exports, 'workbenchInstance', { get: function () { return require('./workbench-instance'); } });
Object.defineProperty(exports, 'workbenchInstanceIamBinding', { get: function () { return require('./workbench-instance-iam-binding'); } });
Object.defineProperty(exports, 'workbenchInstanceIamMember', { get: function () { return require('./workbench-instance-iam-member'); } });
Object.defineProperty(exports, 'workbenchInstanceIamPolicy', { get: function () { return require('./workbench-instance-iam-policy'); } });
Object.defineProperty(exports, 'workflowsWorkflow', { get: function () { return require('./workflows-workflow'); } });
Object.defineProperty(exports, 'dataGoogleAccessApprovalFolderServiceAccount', { get: function () { return require('./data-google-access-approval-folder-service-account'); } });
Object.defineProperty(exports, 'dataGoogleAccessApprovalOrganizationServiceAccount', { get: function () { return require('./data-google-access-approval-organization-service-account'); } });
Object.defineProperty(exports, 'dataGoogleAccessApprovalProjectServiceAccount', { get: function () { return require('./data-google-access-approval-project-service-account'); } });
Object.defineProperty(exports, 'dataGoogleAccessContextManagerAccessPolicy', { get: function () { return require('./data-google-access-context-manager-access-policy'); } });
Object.defineProperty(exports, 'dataGoogleAccessContextManagerAccessPolicyIamPolicy', { get: function () { return require('./data-google-access-context-manager-access-policy-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleActiveFolder', { get: function () { return require('./data-google-active-folder'); } });
Object.defineProperty(exports, 'dataGoogleAlloydbLocations', { get: function () { return require('./data-google-alloydb-locations'); } });
Object.defineProperty(exports, 'dataGoogleAlloydbSupportedDatabaseFlags', { get: function () { return require('./data-google-alloydb-supported-database-flags'); } });
Object.defineProperty(exports, 'dataGoogleApigeeEnvironmentIamPolicy', { get: function () { return require('./data-google-apigee-environment-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleAppEngineDefaultServiceAccount', { get: function () { return require('./data-google-app-engine-default-service-account'); } });
Object.defineProperty(exports, 'dataGoogleApphubApplication', { get: function () { return require('./data-google-apphub-application'); } });
Object.defineProperty(exports, 'dataGoogleApphubDiscoveredService', { get: function () { return require('./data-google-apphub-discovered-service'); } });
Object.defineProperty(exports, 'dataGoogleApphubDiscoveredWorkload', { get: function () { return require('./data-google-apphub-discovered-workload'); } });
Object.defineProperty(exports, 'dataGoogleArtifactRegistryDockerImage', { get: function () { return require('./data-google-artifact-registry-docker-image'); } });
Object.defineProperty(exports, 'dataGoogleArtifactRegistryLocations', { get: function () { return require('./data-google-artifact-registry-locations'); } });
Object.defineProperty(exports, 'dataGoogleArtifactRegistryRepository', { get: function () { return require('./data-google-artifact-registry-repository'); } });
Object.defineProperty(exports, 'dataGoogleArtifactRegistryRepositoryIamPolicy', { get: function () { return require('./data-google-artifact-registry-repository-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBackupDrBackupVault', { get: function () { return require('./data-google-backup-dr-backup-vault'); } });
Object.defineProperty(exports, 'dataGoogleBeyondcorpAppConnection', { get: function () { return require('./data-google-beyondcorp-app-connection'); } });
Object.defineProperty(exports, 'dataGoogleBeyondcorpAppConnector', { get: function () { return require('./data-google-beyondcorp-app-connector'); } });
Object.defineProperty(exports, 'dataGoogleBeyondcorpAppGateway', { get: function () { return require('./data-google-beyondcorp-app-gateway'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryAnalyticsHubDataExchangeIamPolicy', { get: function () { return require('./data-google-bigquery-analytics-hub-data-exchange-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryAnalyticsHubListingIamPolicy', { get: function () { return require('./data-google-bigquery-analytics-hub-listing-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryConnectionIamPolicy', { get: function () { return require('./data-google-bigquery-connection-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryDatapolicyDataPolicyIamPolicy', { get: function () { return require('./data-google-bigquery-datapolicy-data-policy-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryDataset', { get: function () { return require('./data-google-bigquery-dataset'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryDatasetIamPolicy', { get: function () { return require('./data-google-bigquery-dataset-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryDefaultServiceAccount', { get: function () { return require('./data-google-bigquery-default-service-account'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryTableIamPolicy', { get: function () { return require('./data-google-bigquery-table-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigqueryTables', { get: function () { return require('./data-google-bigquery-tables'); } });
Object.defineProperty(exports, 'dataGoogleBigtableInstanceIamPolicy', { get: function () { return require('./data-google-bigtable-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBigtableTableIamPolicy', { get: function () { return require('./data-google-bigtable-table-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBillingAccount', { get: function () { return require('./data-google-billing-account'); } });
Object.defineProperty(exports, 'dataGoogleBillingAccountIamPolicy', { get: function () { return require('./data-google-billing-account-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleBinaryAuthorizationAttestorIamPolicy', { get: function () { return require('./data-google-binary-authorization-attestor-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCertificateManagerCertificateMap', { get: function () { return require('./data-google-certificate-manager-certificate-map'); } });
Object.defineProperty(exports, 'dataGoogleCertificateManagerCertificates', { get: function () { return require('./data-google-certificate-manager-certificates'); } });
Object.defineProperty(exports, 'dataGoogleClientConfig', { get: function () { return require('./data-google-client-config'); } });
Object.defineProperty(exports, 'dataGoogleClientOpenidUserinfo', { get: function () { return require('./data-google-client-openid-userinfo'); } });
Object.defineProperty(exports, 'dataGoogleCloudAssetSearchAllResources', { get: function () { return require('./data-google-cloud-asset-search-all-resources'); } });
Object.defineProperty(exports, 'dataGoogleCloudIdentityGroupLookup', { get: function () { return require('./data-google-cloud-identity-group-lookup'); } });
Object.defineProperty(exports, 'dataGoogleCloudIdentityGroupMemberships', { get: function () { return require('./data-google-cloud-identity-group-memberships'); } });
Object.defineProperty(exports, 'dataGoogleCloudIdentityGroupTransitiveMemberships', { get: function () { return require('./data-google-cloud-identity-group-transitive-memberships'); } });
Object.defineProperty(exports, 'dataGoogleCloudIdentityGroups', { get: function () { return require('./data-google-cloud-identity-groups'); } });
Object.defineProperty(exports, 'dataGoogleCloudQuotasQuotaInfo', { get: function () { return require('./data-google-cloud-quotas-quota-info'); } });
Object.defineProperty(exports, 'dataGoogleCloudQuotasQuotaInfos', { get: function () { return require('./data-google-cloud-quotas-quota-infos'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunLocations', { get: function () { return require('./data-google-cloud-run-locations'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunService', { get: function () { return require('./data-google-cloud-run-service'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunServiceIamPolicy', { get: function () { return require('./data-google-cloud-run-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunV2Job', { get: function () { return require('./data-google-cloud-run-v2-job'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunV2JobIamPolicy', { get: function () { return require('./data-google-cloud-run-v2-job-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunV2Service', { get: function () { return require('./data-google-cloud-run-v2-service'); } });
Object.defineProperty(exports, 'dataGoogleCloudRunV2ServiceIamPolicy', { get: function () { return require('./data-google-cloud-run-v2-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCloudTasksQueueIamPolicy', { get: function () { return require('./data-google-cloud-tasks-queue-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCloudbuildTrigger', { get: function () { return require('./data-google-cloudbuild-trigger'); } });
Object.defineProperty(exports, 'dataGoogleCloudbuildv2ConnectionIamPolicy', { get: function () { return require('./data-google-cloudbuildv2-connection-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleClouddeployCustomTargetTypeIamPolicy', { get: function () { return require('./data-google-clouddeploy-custom-target-type-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleClouddeployDeliveryPipelineIamPolicy', { get: function () { return require('./data-google-clouddeploy-delivery-pipeline-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleClouddeployTargetIamPolicy', { get: function () { return require('./data-google-clouddeploy-target-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCloudfunctions2Function', { get: function () { return require('./data-google-cloudfunctions2-function'); } });
Object.defineProperty(exports, 'dataGoogleCloudfunctions2FunctionIamPolicy', { get: function () { return require('./data-google-cloudfunctions2-function-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleCloudfunctionsFunction', { get: function () { return require('./data-google-cloudfunctions-function'); } });
Object.defineProperty(exports, 'dataGoogleCloudfunctionsFunctionIamPolicy', { get: function () { return require('./data-google-cloudfunctions-function-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComposerEnvironment', { get: function () { return require('./data-google-composer-environment'); } });
Object.defineProperty(exports, 'dataGoogleComposerImageVersions', { get: function () { return require('./data-google-composer-image-versions'); } });
Object.defineProperty(exports, 'dataGoogleComposerUserWorkloadsConfigMap', { get: function () { return require('./data-google-composer-user-workloads-config-map'); } });
Object.defineProperty(exports, 'dataGoogleComposerUserWorkloadsSecret', { get: function () { return require('./data-google-composer-user-workloads-secret'); } });
Object.defineProperty(exports, 'dataGoogleComputeAddress', { get: function () { return require('./data-google-compute-address'); } });
Object.defineProperty(exports, 'dataGoogleComputeAddresses', { get: function () { return require('./data-google-compute-addresses'); } });
Object.defineProperty(exports, 'dataGoogleComputeBackendBucket', { get: function () { return require('./data-google-compute-backend-bucket'); } });
Object.defineProperty(exports, 'dataGoogleComputeBackendService', { get: function () { return require('./data-google-compute-backend-service'); } });
Object.defineProperty(exports, 'dataGoogleComputeDefaultServiceAccount', { get: function () { return require('./data-google-compute-default-service-account'); } });
Object.defineProperty(exports, 'dataGoogleComputeDisk', { get: function () { return require('./data-google-compute-disk'); } });
Object.defineProperty(exports, 'dataGoogleComputeDiskIamPolicy', { get: function () { return require('./data-google-compute-disk-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeForwardingRule', { get: function () { return require('./data-google-compute-forwarding-rule'); } });
Object.defineProperty(exports, 'dataGoogleComputeForwardingRules', { get: function () { return require('./data-google-compute-forwarding-rules'); } });
Object.defineProperty(exports, 'dataGoogleComputeGlobalAddress', { get: function () { return require('./data-google-compute-global-address'); } });
Object.defineProperty(exports, 'dataGoogleComputeGlobalForwardingRule', { get: function () { return require('./data-google-compute-global-forwarding-rule'); } });
Object.defineProperty(exports, 'dataGoogleComputeHaVpnGateway', { get: function () { return require('./data-google-compute-ha-vpn-gateway'); } });
Object.defineProperty(exports, 'dataGoogleComputeHealthCheck', { get: function () { return require('./data-google-compute-health-check'); } });
Object.defineProperty(exports, 'dataGoogleComputeImage', { get: function () { return require('./data-google-compute-image'); } });
Object.defineProperty(exports, 'dataGoogleComputeImageIamPolicy', { get: function () { return require('./data-google-compute-image-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstance', { get: function () { return require('./data-google-compute-instance'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstanceGroup', { get: function () { return require('./data-google-compute-instance-group'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstanceGroupManager', { get: function () { return require('./data-google-compute-instance-group-manager'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstanceGuestAttributes', { get: function () { return require('./data-google-compute-instance-guest-attributes'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstanceIamPolicy', { get: function () { return require('./data-google-compute-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstanceSerialPort', { get: function () { return require('./data-google-compute-instance-serial-port'); } });
Object.defineProperty(exports, 'dataGoogleComputeInstanceTemplate', { get: function () { return require('./data-google-compute-instance-template'); } });
Object.defineProperty(exports, 'dataGoogleComputeLbIpRanges', { get: function () { return require('./data-google-compute-lb-ip-ranges'); } });
Object.defineProperty(exports, 'dataGoogleComputeMachineTypes', { get: function () { return require('./data-google-compute-machine-types'); } });
Object.defineProperty(exports, 'dataGoogleComputeNetwork', { get: function () { return require('./data-google-compute-network'); } });
Object.defineProperty(exports, 'dataGoogleComputeNetworkEndpointGroup', { get: function () { return require('./data-google-compute-network-endpoint-group'); } });
Object.defineProperty(exports, 'dataGoogleComputeNetworkPeering', { get: function () { return require('./data-google-compute-network-peering'); } });
Object.defineProperty(exports, 'dataGoogleComputeNetworks', { get: function () { return require('./data-google-compute-networks'); } });
Object.defineProperty(exports, 'dataGoogleComputeNodeTypes', { get: function () { return require('./data-google-compute-node-types'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionDisk', { get: function () { return require('./data-google-compute-region-disk'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionDiskIamPolicy', { get: function () { return require('./data-google-compute-region-disk-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionInstanceGroup', { get: function () { return require('./data-google-compute-region-instance-group'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionInstanceGroupManager', { get: function () { return require('./data-google-compute-region-instance-group-manager'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionInstanceTemplate', { get: function () { return require('./data-google-compute-region-instance-template'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionNetworkEndpointGroup', { get: function () { return require('./data-google-compute-region-network-endpoint-group'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegionSslCertificate', { get: function () { return require('./data-google-compute-region-ssl-certificate'); } });
Object.defineProperty(exports, 'dataGoogleComputeRegions', { get: function () { return require('./data-google-compute-regions'); } });
Object.defineProperty(exports, 'dataGoogleComputeReservation', { get: function () { return require('./data-google-compute-reservation'); } });
Object.defineProperty(exports, 'dataGoogleComputeResourcePolicy', { get: function () { return require('./data-google-compute-resource-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeRouter', { get: function () { return require('./data-google-compute-router'); } });
Object.defineProperty(exports, 'dataGoogleComputeRouterNat', { get: function () { return require('./data-google-compute-router-nat'); } });
Object.defineProperty(exports, 'dataGoogleComputeRouterStatus', { get: function () { return require('./data-google-compute-router-status'); } });
Object.defineProperty(exports, 'dataGoogleComputeSecurityPolicy', { get: function () { return require('./data-google-compute-security-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeSnapshot', { get: function () { return require('./data-google-compute-snapshot'); } });
Object.defineProperty(exports, 'dataGoogleComputeSnapshotIamPolicy', { get: function () { return require('./data-google-compute-snapshot-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeSslCertificate', { get: function () { return require('./data-google-compute-ssl-certificate'); } });
Object.defineProperty(exports, 'dataGoogleComputeSslPolicy', { get: function () { return require('./data-google-compute-ssl-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeSubnetwork', { get: function () { return require('./data-google-compute-subnetwork'); } });
Object.defineProperty(exports, 'dataGoogleComputeSubnetworkIamPolicy', { get: function () { return require('./data-google-compute-subnetwork-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleComputeSubnetworks', { get: function () { return require('./data-google-compute-subnetworks'); } });
Object.defineProperty(exports, 'dataGoogleComputeVpnGateway', { get: function () { return require('./data-google-compute-vpn-gateway'); } });
Object.defineProperty(exports, 'dataGoogleComputeZones', { get: function () { return require('./data-google-compute-zones'); } });
Object.defineProperty(exports, 'dataGoogleContainerAnalysisNoteIamPolicy', { get: function () { return require('./data-google-container-analysis-note-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleContainerAttachedInstallManifest', { get: function () { return require('./data-google-container-attached-install-manifest'); } });
Object.defineProperty(exports, 'dataGoogleContainerAttachedVersions', { get: function () { return require('./data-google-container-attached-versions'); } });
Object.defineProperty(exports, 'dataGoogleContainerAwsVersions', { get: function () { return require('./data-google-container-aws-versions'); } });
Object.defineProperty(exports, 'dataGoogleContainerAzureVersions', { get: function () { return require('./data-google-container-azure-versions'); } });
Object.defineProperty(exports, 'dataGoogleContainerCluster', { get: function () { return require('./data-google-container-cluster'); } });
Object.defineProperty(exports, 'dataGoogleContainerEngineVersions', { get: function () { return require('./data-google-container-engine-versions'); } });
Object.defineProperty(exports, 'dataGoogleContainerRegistryImage', { get: function () { return require('./data-google-container-registry-image'); } });
Object.defineProperty(exports, 'dataGoogleContainerRegistryRepository', { get: function () { return require('./data-google-container-registry-repository'); } });
Object.defineProperty(exports, 'dataGoogleDataCatalogEntryGroupIamPolicy', { get: function () { return require('./data-google-data-catalog-entry-group-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataCatalogPolicyTagIamPolicy', { get: function () { return require('./data-google-data-catalog-policy-tag-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataCatalogTagTemplateIamPolicy', { get: function () { return require('./data-google-data-catalog-tag-template-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataCatalogTaxonomyIamPolicy', { get: function () { return require('./data-google-data-catalog-taxonomy-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataFusionInstanceIamPolicy', { get: function () { return require('./data-google-data-fusion-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexAspectTypeIamPolicy', { get: function () { return require('./data-google-dataplex-aspect-type-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexAssetIamPolicy', { get: function () { return require('./data-google-dataplex-asset-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexDatascanIamPolicy', { get: function () { return require('./data-google-dataplex-datascan-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexEntryGroupIamPolicy', { get: function () { return require('./data-google-dataplex-entry-group-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexEntryTypeIamPolicy', { get: function () { return require('./data-google-dataplex-entry-type-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexLakeIamPolicy', { get: function () { return require('./data-google-dataplex-lake-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexTaskIamPolicy', { get: function () { return require('./data-google-dataplex-task-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataplexZoneIamPolicy', { get: function () { return require('./data-google-dataplex-zone-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataprocAutoscalingPolicyIamPolicy', { get: function () { return require('./data-google-dataproc-autoscaling-policy-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataprocClusterIamPolicy', { get: function () { return require('./data-google-dataproc-cluster-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataprocJobIamPolicy', { get: function () { return require('./data-google-dataproc-job-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataprocMetastoreFederationIamPolicy', { get: function () { return require('./data-google-dataproc-metastore-federation-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDataprocMetastoreService', { get: function () { return require('./data-google-dataproc-metastore-service'); } });
Object.defineProperty(exports, 'dataGoogleDataprocMetastoreServiceIamPolicy', { get: function () { return require('./data-google-dataproc-metastore-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDatastreamStaticIps', { get: function () { return require('./data-google-datastream-static-ips'); } });
Object.defineProperty(exports, 'dataGoogleDnsKeys', { get: function () { return require('./data-google-dns-keys'); } });
Object.defineProperty(exports, 'dataGoogleDnsManagedZone', { get: function () { return require('./data-google-dns-managed-zone'); } });
Object.defineProperty(exports, 'dataGoogleDnsManagedZoneIamPolicy', { get: function () { return require('./data-google-dns-managed-zone-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleDnsManagedZones', { get: function () { return require('./data-google-dns-managed-zones'); } });
Object.defineProperty(exports, 'dataGoogleDnsRecordSet', { get: function () { return require('./data-google-dns-record-set'); } });
Object.defineProperty(exports, 'dataGoogleEndpointsServiceConsumersIamPolicy', { get: function () { return require('./data-google-endpoints-service-consumers-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleEndpointsServiceIamPolicy', { get: function () { return require('./data-google-endpoints-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleFilestoreInstance', { get: function () { return require('./data-google-filestore-instance'); } });
Object.defineProperty(exports, 'dataGoogleFolder', { get: function () { return require('./data-google-folder'); } });
Object.defineProperty(exports, 'dataGoogleFolderIamPolicy', { get: function () { return require('./data-google-folder-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleFolderOrganizationPolicy', { get: function () { return require('./data-google-folder-organization-policy'); } });
Object.defineProperty(exports, 'dataGoogleFolders', { get: function () { return require('./data-google-folders'); } });
Object.defineProperty(exports, 'dataGoogleGkeBackupBackupPlanIamPolicy', { get: function () { return require('./data-google-gke-backup-backup-plan-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleGkeBackupRestorePlanIamPolicy', { get: function () { return require('./data-google-gke-backup-restore-plan-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleGkeHubFeatureIamPolicy', { get: function () { return require('./data-google-gke-hub-feature-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleGkeHubMembershipBinding', { get: function () { return require('./data-google-gke-hub-membership-binding'); } });
Object.defineProperty(exports, 'dataGoogleGkeHubMembershipIamPolicy', { get: function () { return require('./data-google-gke-hub-membership-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleGkeHubScopeIamPolicy', { get: function () { return require('./data-google-gke-hub-scope-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleHealthcareConsentStoreIamPolicy', { get: function () { return require('./data-google-healthcare-consent-store-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleHealthcareDatasetIamPolicy', { get: function () { return require('./data-google-healthcare-dataset-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleHealthcareDicomStoreIamPolicy', { get: function () { return require('./data-google-healthcare-dicom-store-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleHealthcareFhirStoreIamPolicy', { get: function () { return require('./data-google-healthcare-fhir-store-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleHealthcareHl7V2StoreIamPolicy', { get: function () { return require('./data-google-healthcare-hl7-v2-store-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIamPolicy', { get: function () { return require('./data-google-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIamRole', { get: function () { return require('./data-google-iam-role'); } });
Object.defineProperty(exports, 'dataGoogleIamTestablePermissions', { get: function () { return require('./data-google-iam-testable-permissions'); } });
Object.defineProperty(exports, 'dataGoogleIapAppEngineServiceIamPolicy', { get: function () { return require('./data-google-iap-app-engine-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapAppEngineVersionIamPolicy', { get: function () { return require('./data-google-iap-app-engine-version-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapClient', { get: function () { return require('./data-google-iap-client'); } });
Object.defineProperty(exports, 'dataGoogleIapTunnelDestGroupIamPolicy', { get: function () { return require('./data-google-iap-tunnel-dest-group-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapTunnelIamPolicy', { get: function () { return require('./data-google-iap-tunnel-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapTunnelInstanceIamPolicy', { get: function () { return require('./data-google-iap-tunnel-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapWebBackendServiceIamPolicy', { get: function () { return require('./data-google-iap-web-backend-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapWebIamPolicy', { get: function () { return require('./data-google-iap-web-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapWebRegionBackendServiceIamPolicy', { get: function () { return require('./data-google-iap-web-region-backend-service-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapWebTypeAppEngineIamPolicy', { get: function () { return require('./data-google-iap-web-type-app-engine-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleIapWebTypeComputeIamPolicy', { get: function () { return require('./data-google-iap-web-type-compute-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleKmsCryptoKey', { get: function () { return require('./data-google-kms-crypto-key'); } });
Object.defineProperty(exports, 'dataGoogleKmsCryptoKeyIamPolicy', { get: function () { return require('./data-google-kms-crypto-key-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleKmsCryptoKeyLatestVersion', { get: function () { return require('./data-google-kms-crypto-key-latest-version'); } });
Object.defineProperty(exports, 'dataGoogleKmsCryptoKeyVersion', { get: function () { return require('./data-google-kms-crypto-key-version'); } });
Object.defineProperty(exports, 'dataGoogleKmsCryptoKeyVersions', { get: function () { return require('./data-google-kms-crypto-key-versions'); } });
Object.defineProperty(exports, 'dataGoogleKmsCryptoKeys', { get: function () { return require('./data-google-kms-crypto-keys'); } });
Object.defineProperty(exports, 'dataGoogleKmsEkmConnectionIamPolicy', { get: function () { return require('./data-google-kms-ekm-connection-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleKmsKeyRing', { get: function () { return require('./data-google-kms-key-ring'); } });
Object.defineProperty(exports, 'dataGoogleKmsKeyRingIamPolicy', { get: function () { return require('./data-google-kms-key-ring-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleKmsKeyRings', { get: function () { return require('./data-google-kms-key-rings'); } });
Object.defineProperty(exports, 'dataGoogleKmsSecret', { get: function () { return require('./data-google-kms-secret'); } });
Object.defineProperty(exports, 'dataGoogleKmsSecretCiphertext', { get: function () { return require('./data-google-kms-secret-ciphertext'); } });
Object.defineProperty(exports, 'dataGoogleLoggingFolderSettings', { get: function () { return require('./data-google-logging-folder-settings'); } });
Object.defineProperty(exports, 'dataGoogleLoggingLogViewIamPolicy', { get: function () { return require('./data-google-logging-log-view-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleLoggingOrganizationSettings', { get: function () { return require('./data-google-logging-organization-settings'); } });
Object.defineProperty(exports, 'dataGoogleLoggingProjectCmekSettings', { get: function () { return require('./data-google-logging-project-cmek-settings'); } });
Object.defineProperty(exports, 'dataGoogleLoggingProjectSettings', { get: function () { return require('./data-google-logging-project-settings'); } });
Object.defineProperty(exports, 'dataGoogleLoggingSink', { get: function () { return require('./data-google-logging-sink'); } });
Object.defineProperty(exports, 'dataGoogleMonitoringAppEngineService', { get: function () { return require('./data-google-monitoring-app-engine-service'); } });
Object.defineProperty(exports, 'dataGoogleMonitoringClusterIstioService', { get: function () { return require('./data-google-monitoring-cluster-istio-service'); } });
Object.defineProperty(exports, 'dataGoogleMonitoringIstioCanonicalService', { get: function () { return require('./data-google-monitoring-istio-canonical-service'); } });
Object.defineProperty(exports, 'dataGoogleMonitoringMeshIstioService', { get: function () { return require('./data-google-monitoring-mesh-istio-service'); } });
Object.defineProperty(exports, 'dataGoogleMonitoringNotificationChannel', { get: function () { return require('./data-google-monitoring-notification-channel'); } });
Object.defineProperty(exports, 'dataGoogleMonitoringUptimeCheckIps', { get: function () { return require('./data-google-monitoring-uptime-check-ips'); } });
Object.defineProperty(exports, 'dataGoogleNetblockIpRanges', { get: function () { return require('./data-google-netblock-ip-ranges'); } });
Object.defineProperty(exports, 'dataGoogleNetworkSecurityAddressGroupIamPolicy', { get: function () { return require('./data-google-network-security-address-group-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleNotebooksInstanceIamPolicy', { get: function () { return require('./data-google-notebooks-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleNotebooksRuntimeIamPolicy', { get: function () { return require('./data-google-notebooks-runtime-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseAutonomousDatabase', { get: function () { return require('./data-google-oracle-database-autonomous-database'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseAutonomousDatabases', { get: function () { return require('./data-google-oracle-database-autonomous-databases'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseCloudExadataInfrastructure', { get: function () { return require('./data-google-oracle-database-cloud-exadata-infrastructure'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseCloudExadataInfrastructures', { get: function () { return require('./data-google-oracle-database-cloud-exadata-infrastructures'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseCloudVmCluster', { get: function () { return require('./data-google-oracle-database-cloud-vm-cluster'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseCloudVmClusters', { get: function () { return require('./data-google-oracle-database-cloud-vm-clusters'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseDbNodes', { get: function () { return require('./data-google-oracle-database-db-nodes'); } });
Object.defineProperty(exports, 'dataGoogleOracleDatabaseDbServers', { get: function () { return require('./data-google-oracle-database-db-servers'); } });
Object.defineProperty(exports, 'dataGoogleOrganization', { get: function () { return require('./data-google-organization'); } });
Object.defineProperty(exports, 'dataGoogleOrganizationIamPolicy', { get: function () { return require('./data-google-organization-iam-policy'); } });
Object.defineProperty(exports, 'dataGooglePrivatecaCaPoolIamPolicy', { get: function () { return require('./data-google-privateca-ca-pool-iam-policy'); } });
Object.defineProperty(exports, 'dataGooglePrivatecaCertificateAuthority', { get: function () { return require('./data-google-privateca-certificate-authority'); } });
Object.defineProperty(exports, 'dataGooglePrivatecaCertificateTemplateIamPolicy', { get: function () { return require('./data-google-privateca-certificate-template-iam-policy'); } });
Object.defineProperty(exports, 'dataGooglePrivilegedAccessManagerEntitlement', { get: function () { return require('./data-google-privileged-access-manager-entitlement'); } });
Object.defineProperty(exports, 'dataGoogleProject', { get: function () { return require('./data-google-project'); } });
Object.defineProperty(exports, 'dataGoogleProjectIamPolicy', { get: function () { return require('./data-google-project-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleProjectOrganizationPolicy', { get: function () { return require('./data-google-project-organization-policy'); } });
Object.defineProperty(exports, 'dataGoogleProjectService', { get: function () { return require('./data-google-project-service'); } });
Object.defineProperty(exports, 'dataGoogleProjects', { get: function () { return require('./data-google-projects'); } });
Object.defineProperty(exports, 'dataGooglePubsubSchemaIamPolicy', { get: function () { return require('./data-google-pubsub-schema-iam-policy'); } });
Object.defineProperty(exports, 'dataGooglePubsubSubscription', { get: function () { return require('./data-google-pubsub-subscription'); } });
Object.defineProperty(exports, 'dataGooglePubsubSubscriptionIamPolicy', { get: function () { return require('./data-google-pubsub-subscription-iam-policy'); } });
Object.defineProperty(exports, 'dataGooglePubsubTopic', { get: function () { return require('./data-google-pubsub-topic'); } });
Object.defineProperty(exports, 'dataGooglePubsubTopicIamPolicy', { get: function () { return require('./data-google-pubsub-topic-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleRedisInstance', { get: function () { return require('./data-google-redis-instance'); } });
Object.defineProperty(exports, 'dataGoogleSccSourceIamPolicy', { get: function () { return require('./data-google-scc-source-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSccV2OrganizationSourceIamPolicy', { get: function () { return require('./data-google-scc-v2-organization-source-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerRegionalSecret', { get: function () { return require('./data-google-secret-manager-regional-secret'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerRegionalSecretIamPolicy', { get: function () { return require('./data-google-secret-manager-regional-secret-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerRegionalSecretVersion', { get: function () { return require('./data-google-secret-manager-regional-secret-version'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerRegionalSecretVersionAccess', { get: function () { return require('./data-google-secret-manager-regional-secret-version-access'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerRegionalSecrets', { get: function () { return require('./data-google-secret-manager-regional-secrets'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerSecret', { get: function () { return require('./data-google-secret-manager-secret'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerSecretIamPolicy', { get: function () { return require('./data-google-secret-manager-secret-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerSecretVersion', { get: function () { return require('./data-google-secret-manager-secret-version'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerSecretVersionAccess', { get: function () { return require('./data-google-secret-manager-secret-version-access'); } });
Object.defineProperty(exports, 'dataGoogleSecretManagerSecrets', { get: function () { return require('./data-google-secret-manager-secrets'); } });
Object.defineProperty(exports, 'dataGoogleSecureSourceManagerInstanceIamPolicy', { get: function () { return require('./data-google-secure-source-manager-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSecureSourceManagerRepositoryIamPolicy', { get: function () { return require('./data-google-secure-source-manager-repository-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccount', { get: function () { return require('./data-google-service-account'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccountAccessToken', { get: function () { return require('./data-google-service-account-access-token'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccountIamPolicy', { get: function () { return require('./data-google-service-account-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccountIdToken', { get: function () { return require('./data-google-service-account-id-token'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccountJwt', { get: function () { return require('./data-google-service-account-jwt'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccountKey', { get: function () { return require('./data-google-service-account-key'); } });
Object.defineProperty(exports, 'dataGoogleServiceAccounts', { get: function () { return require('./data-google-service-accounts'); } });
Object.defineProperty(exports, 'dataGoogleServiceNetworkingPeeredDnsDomain', { get: function () { return require('./data-google-service-networking-peered-dns-domain'); } });
Object.defineProperty(exports, 'dataGoogleSiteVerificationToken', { get: function () { return require('./data-google-site-verification-token'); } });
Object.defineProperty(exports, 'dataGoogleSourcerepoRepository', { get: function () { return require('./data-google-sourcerepo-repository'); } });
Object.defineProperty(exports, 'dataGoogleSourcerepoRepositoryIamPolicy', { get: function () { return require('./data-google-sourcerepo-repository-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSpannerDatabase', { get: function () { return require('./data-google-spanner-database'); } });
Object.defineProperty(exports, 'dataGoogleSpannerDatabaseIamPolicy', { get: function () { return require('./data-google-spanner-database-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSpannerInstance', { get: function () { return require('./data-google-spanner-instance'); } });
Object.defineProperty(exports, 'dataGoogleSpannerInstanceIamPolicy', { get: function () { return require('./data-google-spanner-instance-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleSqlBackupRun', { get: function () { return require('./data-google-sql-backup-run'); } });
Object.defineProperty(exports, 'dataGoogleSqlCaCerts', { get: function () { return require('./data-google-sql-ca-certs'); } });
Object.defineProperty(exports, 'dataGoogleSqlDatabase', { get: function () { return require('./data-google-sql-database'); } });
Object.defineProperty(exports, 'dataGoogleSqlDatabaseInstance', { get: function () { return require('./data-google-sql-database-instance'); } });
Object.defineProperty(exports, 'dataGoogleSqlDatabaseInstanceLatestRecoveryTime', { get: function () { return require('./data-google-sql-database-instance-latest-recovery-time'); } });
Object.defineProperty(exports, 'dataGoogleSqlDatabaseInstances', { get: function () { return require('./data-google-sql-database-instances'); } });
Object.defineProperty(exports, 'dataGoogleSqlDatabases', { get: function () { return require('./data-google-sql-databases'); } });
Object.defineProperty(exports, 'dataGoogleSqlTiers', { get: function () { return require('./data-google-sql-tiers'); } });
Object.defineProperty(exports, 'dataGoogleStorageBucket', { get: function () { return require('./data-google-storage-bucket'); } });
Object.defineProperty(exports, 'dataGoogleStorageBucketIamPolicy', { get: function () { return require('./data-google-storage-bucket-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleStorageBucketObject', { get: function () { return require('./data-google-storage-bucket-object'); } });
Object.defineProperty(exports, 'dataGoogleStorageBucketObjectContent', { get: function () { return require('./data-google-storage-bucket-object-content'); } });
Object.defineProperty(exports, 'dataGoogleStorageBucketObjects', { get: function () { return require('./data-google-storage-bucket-objects'); } });
Object.defineProperty(exports, 'dataGoogleStorageBuckets', { get: function () { return require('./data-google-storage-buckets'); } });
Object.defineProperty(exports, 'dataGoogleStorageManagedFolderIamPolicy', { get: function () { return require('./data-google-storage-managed-folder-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleStorageObjectSignedUrl', { get: function () { return require('./data-google-storage-object-signed-url'); } });
Object.defineProperty(exports, 'dataGoogleStorageProjectServiceAccount', { get: function () { return require('./data-google-storage-project-service-account'); } });
Object.defineProperty(exports, 'dataGoogleStorageTransferProjectServiceAccount', { get: function () { return require('./data-google-storage-transfer-project-service-account'); } });
Object.defineProperty(exports, 'dataGoogleTagsTagKey', { get: function () { return require('./data-google-tags-tag-key'); } });
Object.defineProperty(exports, 'dataGoogleTagsTagKeyIamPolicy', { get: function () { return require('./data-google-tags-tag-key-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleTagsTagKeys', { get: function () { return require('./data-google-tags-tag-keys'); } });
Object.defineProperty(exports, 'dataGoogleTagsTagValue', { get: function () { return require('./data-google-tags-tag-value'); } });
Object.defineProperty(exports, 'dataGoogleTagsTagValueIamPolicy', { get: function () { return require('./data-google-tags-tag-value-iam-policy'); } });
Object.defineProperty(exports, 'dataGoogleTagsTagValues', { get: function () { return require('./data-google-tags-tag-values'); } });
Object.defineProperty(exports, 'dataGoogleTpuTensorflowVersions', { get: function () { return require('./data-google-tpu-tensorflow-versions'); } });
Object.defineProperty(exports, 'dataGoogleVertexAiIndex', { get: function () { return require('./data-google-vertex-ai-index'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineCluster', { get: function () { return require('./data-google-vmwareengine-cluster'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineExternalAccessRule', { get: function () { return require('./data-google-vmwareengine-external-access-rule'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineExternalAddress', { get: function () { return require('./data-google-vmwareengine-external-address'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineNetwork', { get: function () { return require('./data-google-vmwareengine-network'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineNetworkPeering', { get: function () { return require('./data-google-vmwareengine-network-peering'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineNetworkPolicy', { get: function () { return require('./data-google-vmwareengine-network-policy'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineNsxCredentials', { get: function () { return require('./data-google-vmwareengine-nsx-credentials'); } });
Object.defineProperty(exports, 'dataGoogleVmwareenginePrivateCloud', { get: function () { return require('./data-google-vmwareengine-private-cloud'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineSubnet', { get: function () { return require('./data-google-vmwareengine-subnet'); } });
Object.defineProperty(exports, 'dataGoogleVmwareengineVcenterCredentials', { get: function () { return require('./data-google-vmwareengine-vcenter-credentials'); } });
Object.defineProperty(exports, 'dataGoogleVpcAccessConnector', { get: function () { return require('./data-google-vpc-access-connector'); } });
Object.defineProperty(exports, 'dataGoogleWorkbenchInstanceIamPolicy', { get: function () { return require('./data-google-workbench-instance-iam-policy'); } });
Object.defineProperty(exports, 'provider', { get: function () { return require('./provider'); } });
//# sourceMappingURL=data:application/json;base64,