/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface GkeonpremVmwareNodePoolConfig extends cdktf.TerraformMetaArguments {
    /**
    * Annotations on the node Pool.
    * This field has the same restrictions as Kubernetes annotations.
    * The total size of all keys and values combined is limited to 256k.
    * Key can have 2 segments: prefix (optional) and name (required),
    * separated by a slash (/).
    * Prefix must be a DNS subdomain.
    * Name must be 63 characters or less, begin and end with alphanumerics,
    * with dashes (-), underscores (_), dots (.), and alphanumerics between.
    *
    *
    * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
    * Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#annotations GkeonpremVmwareNodePool#annotations}
    */
    readonly annotations?: {
        [key: string]: string;
    };
    /**
    * The display name for the node pool.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#display_name GkeonpremVmwareNodePool#display_name}
    */
    readonly displayName?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#id GkeonpremVmwareNodePool#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * The location of the resource.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#location GkeonpremVmwareNodePool#location}
    */
    readonly location: string;
    /**
    * The vmware node pool name.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#name GkeonpremVmwareNodePool#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#project GkeonpremVmwareNodePool#project}
    */
    readonly project?: string;
    /**
    * The cluster this node pool belongs to.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#vmware_cluster GkeonpremVmwareNodePool#vmware_cluster}
    */
    readonly vmwareCluster: string;
    /**
    * config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#config GkeonpremVmwareNodePool#config}
    */
    readonly config: GkeonpremVmwareNodePoolConfigA;
    /**
    * node_pool_autoscaling block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#node_pool_autoscaling GkeonpremVmwareNodePool#node_pool_autoscaling}
    */
    readonly nodePoolAutoscaling?: GkeonpremVmwareNodePoolNodePoolAutoscaling;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#timeouts GkeonpremVmwareNodePool#timeouts}
    */
    readonly timeouts?: GkeonpremVmwareNodePoolTimeouts;
}
export interface GkeonpremVmwareNodePoolStatusConditions {
}
export declare function gkeonpremVmwareNodePoolStatusConditionsToTerraform(struct?: GkeonpremVmwareNodePoolStatusConditions): any;
export declare function gkeonpremVmwareNodePoolStatusConditionsToHclTerraform(struct?: GkeonpremVmwareNodePoolStatusConditions): any;
export declare class GkeonpremVmwareNodePoolStatusConditionsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): GkeonpremVmwareNodePoolStatusConditions | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolStatusConditions | undefined);
    get lastTransitionTime(): string;
    get message(): string;
    get reason(): string;
    get state(): string;
    get type(): string;
}
export declare class GkeonpremVmwareNodePoolStatusConditionsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): GkeonpremVmwareNodePoolStatusConditionsOutputReference;
}
export interface GkeonpremVmwareNodePoolStatus {
}
export declare function gkeonpremVmwareNodePoolStatusToTerraform(struct?: GkeonpremVmwareNodePoolStatus): any;
export declare function gkeonpremVmwareNodePoolStatusToHclTerraform(struct?: GkeonpremVmwareNodePoolStatus): any;
export declare class GkeonpremVmwareNodePoolStatusOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): GkeonpremVmwareNodePoolStatus | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolStatus | undefined);
    private _conditions;
    get conditions(): GkeonpremVmwareNodePoolStatusConditionsList;
    get errorMessage(): string;
}
export declare class GkeonpremVmwareNodePoolStatusList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): GkeonpremVmwareNodePoolStatusOutputReference;
}
export interface GkeonpremVmwareNodePoolConfigTaints {
    /**
    * Available taint effects. Possible values: ["EFFECT_UNSPECIFIED", "NO_SCHEDULE", "PREFER_NO_SCHEDULE", "NO_EXECUTE"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#effect GkeonpremVmwareNodePool#effect}
    */
    readonly effect?: string;
    /**
    * Key associated with the effect.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#key GkeonpremVmwareNodePool#key}
    */
    readonly key: string;
    /**
    * Value associated with the effect.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#value GkeonpremVmwareNodePool#value}
    */
    readonly value: string;
}
export declare function gkeonpremVmwareNodePoolConfigTaintsToTerraform(struct?: GkeonpremVmwareNodePoolConfigTaints | cdktf.IResolvable): any;
export declare function gkeonpremVmwareNodePoolConfigTaintsToHclTerraform(struct?: GkeonpremVmwareNodePoolConfigTaints | cdktf.IResolvable): any;
export declare class GkeonpremVmwareNodePoolConfigTaintsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): GkeonpremVmwareNodePoolConfigTaints | cdktf.IResolvable | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolConfigTaints | cdktf.IResolvable | undefined);
    private _effect?;
    get effect(): string;
    set effect(value: string);
    resetEffect(): void;
    get effectInput(): string | undefined;
    private _key?;
    get key(): string;
    set key(value: string);
    get keyInput(): string | undefined;
    private _value?;
    get value(): string;
    set value(value: string);
    get valueInput(): string | undefined;
}
export declare class GkeonpremVmwareNodePoolConfigTaintsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: GkeonpremVmwareNodePoolConfigTaints[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): GkeonpremVmwareNodePoolConfigTaintsOutputReference;
}
export interface GkeonpremVmwareNodePoolConfigVsphereConfigTags {
    /**
    * The Vsphere tag category.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#category GkeonpremVmwareNodePool#category}
    */
    readonly category?: string;
    /**
    * The Vsphere tag name.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#tag GkeonpremVmwareNodePool#tag}
    */
    readonly tag?: string;
}
export declare function gkeonpremVmwareNodePoolConfigVsphereConfigTagsToTerraform(struct?: GkeonpremVmwareNodePoolConfigVsphereConfigTags | cdktf.IResolvable): any;
export declare function gkeonpremVmwareNodePoolConfigVsphereConfigTagsToHclTerraform(struct?: GkeonpremVmwareNodePoolConfigVsphereConfigTags | cdktf.IResolvable): any;
export declare class GkeonpremVmwareNodePoolConfigVsphereConfigTagsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): GkeonpremVmwareNodePoolConfigVsphereConfigTags | cdktf.IResolvable | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolConfigVsphereConfigTags | cdktf.IResolvable | undefined);
    private _category?;
    get category(): string;
    set category(value: string);
    resetCategory(): void;
    get categoryInput(): string | undefined;
    private _tag?;
    get tag(): string;
    set tag(value: string);
    resetTag(): void;
    get tagInput(): string | undefined;
}
export declare class GkeonpremVmwareNodePoolConfigVsphereConfigTagsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: GkeonpremVmwareNodePoolConfigVsphereConfigTags[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): GkeonpremVmwareNodePoolConfigVsphereConfigTagsOutputReference;
}
export interface GkeonpremVmwareNodePoolConfigVsphereConfig {
    /**
    * The name of the vCenter datastore. Inherited from the user cluster.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#datastore GkeonpremVmwareNodePool#datastore}
    */
    readonly datastore?: string;
    /**
    * Vsphere host groups to apply to all VMs in the node pool
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#host_groups GkeonpremVmwareNodePool#host_groups}
    */
    readonly hostGroups?: string[];
    /**
    * tags block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#tags GkeonpremVmwareNodePool#tags}
    */
    readonly tags?: GkeonpremVmwareNodePoolConfigVsphereConfigTags[] | cdktf.IResolvable;
}
export declare function gkeonpremVmwareNodePoolConfigVsphereConfigToTerraform(struct?: GkeonpremVmwareNodePoolConfigVsphereConfigOutputReference | GkeonpremVmwareNodePoolConfigVsphereConfig): any;
export declare function gkeonpremVmwareNodePoolConfigVsphereConfigToHclTerraform(struct?: GkeonpremVmwareNodePoolConfigVsphereConfigOutputReference | GkeonpremVmwareNodePoolConfigVsphereConfig): any;
export declare class GkeonpremVmwareNodePoolConfigVsphereConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): GkeonpremVmwareNodePoolConfigVsphereConfig | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolConfigVsphereConfig | undefined);
    private _datastore?;
    get datastore(): string;
    set datastore(value: string);
    resetDatastore(): void;
    get datastoreInput(): string | undefined;
    private _hostGroups?;
    get hostGroups(): string[];
    set hostGroups(value: string[]);
    resetHostGroups(): void;
    get hostGroupsInput(): string[] | undefined;
    private _tags;
    get tags(): GkeonpremVmwareNodePoolConfigVsphereConfigTagsList;
    putTags(value: GkeonpremVmwareNodePoolConfigVsphereConfigTags[] | cdktf.IResolvable): void;
    resetTags(): void;
    get tagsInput(): cdktf.IResolvable | GkeonpremVmwareNodePoolConfigVsphereConfigTags[] | undefined;
}
export interface GkeonpremVmwareNodePoolConfigA {
    /**
    * VMware disk size to be used during creation.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#boot_disk_size_gb GkeonpremVmwareNodePool#boot_disk_size_gb}
    */
    readonly bootDiskSizeGb?: number;
    /**
    * The number of CPUs for each node in the node pool.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#cpus GkeonpremVmwareNodePool#cpus}
    */
    readonly cpus?: number;
    /**
    * Allow node pool traffic to be load balanced. Only works for clusters with
    * MetalLB load balancers.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#enable_load_balancer GkeonpremVmwareNodePool#enable_load_balancer}
    */
    readonly enableLoadBalancer?: boolean | cdktf.IResolvable;
    /**
    * The OS image name in vCenter, only valid when using Windows.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#image GkeonpremVmwareNodePool#image}
    */
    readonly image?: string;
    /**
    * The OS image to be used for each node in a node pool.
    * Currently 'cos', 'cos_cgv2', 'ubuntu', 'ubuntu_cgv2', 'ubuntu_containerd' and 'windows' are supported.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#image_type GkeonpremVmwareNodePool#image_type}
    */
    readonly imageType: string;
    /**
    * The map of Kubernetes labels (key/value pairs) to be applied to each node.
    * These will added in addition to any default label(s) that
    * Kubernetes may apply to the node.
    * In case of conflict in label keys, the applied set may differ depending on
    * the Kubernetes version -- it's best to assume the behavior is undefined
    * and conflicts should be avoided.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#labels GkeonpremVmwareNodePool#labels}
    */
    readonly labels?: {
        [key: string]: string;
    };
    /**
    * The megabytes of memory for each node in the node pool.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#memory_mb GkeonpremVmwareNodePool#memory_mb}
    */
    readonly memoryMb?: number;
    /**
    * The number of nodes in the node pool.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#replicas GkeonpremVmwareNodePool#replicas}
    */
    readonly replicas?: number;
    /**
    * taints block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#taints GkeonpremVmwareNodePool#taints}
    */
    readonly taints?: GkeonpremVmwareNodePoolConfigTaints[] | cdktf.IResolvable;
    /**
    * vsphere_config block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#vsphere_config GkeonpremVmwareNodePool#vsphere_config}
    */
    readonly vsphereConfig?: GkeonpremVmwareNodePoolConfigVsphereConfig;
}
export declare function gkeonpremVmwareNodePoolConfigAToTerraform(struct?: GkeonpremVmwareNodePoolConfigAOutputReference | GkeonpremVmwareNodePoolConfigA): any;
export declare function gkeonpremVmwareNodePoolConfigAToHclTerraform(struct?: GkeonpremVmwareNodePoolConfigAOutputReference | GkeonpremVmwareNodePoolConfigA): any;
export declare class GkeonpremVmwareNodePoolConfigAOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): GkeonpremVmwareNodePoolConfigA | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolConfigA | undefined);
    private _bootDiskSizeGb?;
    get bootDiskSizeGb(): number;
    set bootDiskSizeGb(value: number);
    resetBootDiskSizeGb(): void;
    get bootDiskSizeGbInput(): number | undefined;
    private _cpus?;
    get cpus(): number;
    set cpus(value: number);
    resetCpus(): void;
    get cpusInput(): number | undefined;
    private _enableLoadBalancer?;
    get enableLoadBalancer(): boolean | cdktf.IResolvable;
    set enableLoadBalancer(value: boolean | cdktf.IResolvable);
    resetEnableLoadBalancer(): void;
    get enableLoadBalancerInput(): boolean | cdktf.IResolvable | undefined;
    private _image?;
    get image(): string;
    set image(value: string);
    resetImage(): void;
    get imageInput(): string | undefined;
    private _imageType?;
    get imageType(): string;
    set imageType(value: string);
    get imageTypeInput(): string | undefined;
    private _labels?;
    get labels(): {
        [key: string]: string;
    };
    set labels(value: {
        [key: string]: string;
    });
    resetLabels(): void;
    get labelsInput(): {
        [key: string]: string;
    } | undefined;
    private _memoryMb?;
    get memoryMb(): number;
    set memoryMb(value: number);
    resetMemoryMb(): void;
    get memoryMbInput(): number | undefined;
    private _replicas?;
    get replicas(): number;
    set replicas(value: number);
    resetReplicas(): void;
    get replicasInput(): number | undefined;
    private _taints;
    get taints(): GkeonpremVmwareNodePoolConfigTaintsList;
    putTaints(value: GkeonpremVmwareNodePoolConfigTaints[] | cdktf.IResolvable): void;
    resetTaints(): void;
    get taintsInput(): cdktf.IResolvable | GkeonpremVmwareNodePoolConfigTaints[] | undefined;
    private _vsphereConfig;
    get vsphereConfig(): GkeonpremVmwareNodePoolConfigVsphereConfigOutputReference;
    putVsphereConfig(value: GkeonpremVmwareNodePoolConfigVsphereConfig): void;
    resetVsphereConfig(): void;
    get vsphereConfigInput(): GkeonpremVmwareNodePoolConfigVsphereConfig | undefined;
}
export interface GkeonpremVmwareNodePoolNodePoolAutoscaling {
    /**
    * Maximum number of replicas in the NodePool.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#max_replicas GkeonpremVmwareNodePool#max_replicas}
    */
    readonly maxReplicas: number;
    /**
    * Minimum number of replicas in the NodePool.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#min_replicas GkeonpremVmwareNodePool#min_replicas}
    */
    readonly minReplicas: number;
}
export declare function gkeonpremVmwareNodePoolNodePoolAutoscalingToTerraform(struct?: GkeonpremVmwareNodePoolNodePoolAutoscalingOutputReference | GkeonpremVmwareNodePoolNodePoolAutoscaling): any;
export declare function gkeonpremVmwareNodePoolNodePoolAutoscalingToHclTerraform(struct?: GkeonpremVmwareNodePoolNodePoolAutoscalingOutputReference | GkeonpremVmwareNodePoolNodePoolAutoscaling): any;
export declare class GkeonpremVmwareNodePoolNodePoolAutoscalingOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): GkeonpremVmwareNodePoolNodePoolAutoscaling | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolNodePoolAutoscaling | undefined);
    private _maxReplicas?;
    get maxReplicas(): number;
    set maxReplicas(value: number);
    get maxReplicasInput(): number | undefined;
    private _minReplicas?;
    get minReplicas(): number;
    set minReplicas(value: number);
    get minReplicasInput(): number | undefined;
}
export interface GkeonpremVmwareNodePoolTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#create GkeonpremVmwareNodePool#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#delete GkeonpremVmwareNodePool#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#update GkeonpremVmwareNodePool#update}
    */
    readonly update?: string;
}
export declare function gkeonpremVmwareNodePoolTimeoutsToTerraform(struct?: GkeonpremVmwareNodePoolTimeouts | cdktf.IResolvable): any;
export declare function gkeonpremVmwareNodePoolTimeoutsToHclTerraform(struct?: GkeonpremVmwareNodePoolTimeouts | cdktf.IResolvable): any;
export declare class GkeonpremVmwareNodePoolTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): GkeonpremVmwareNodePoolTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: GkeonpremVmwareNodePoolTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool google_gkeonprem_vmware_node_pool}
*/
export declare class GkeonpremVmwareNodePool extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_gkeonprem_vmware_node_pool";
    /**
    * Generates CDKTF code for importing a GkeonpremVmwareNodePool resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the GkeonpremVmwareNodePool to import
    * @param importFromId The id of the existing GkeonpremVmwareNodePool that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the GkeonpremVmwareNodePool to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/gkeonprem_vmware_node_pool google_gkeonprem_vmware_node_pool} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options GkeonpremVmwareNodePoolConfig
    */
    constructor(scope: Construct, id: string, config: GkeonpremVmwareNodePoolConfig);
    private _annotations?;
    get annotations(): {
        [key: string]: string;
    };
    set annotations(value: {
        [key: string]: string;
    });
    resetAnnotations(): void;
    get annotationsInput(): {
        [key: string]: string;
    } | undefined;
    get createTime(): string;
    get deleteTime(): string;
    private _displayName?;
    get displayName(): string;
    set displayName(value: string);
    resetDisplayName(): void;
    get displayNameInput(): string | undefined;
    private _effectiveAnnotations;
    get effectiveAnnotations(): cdktf.StringMap;
    get etag(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _location?;
    get location(): string;
    set location(value: string);
    get locationInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    get onPremVersion(): string;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    get reconciling(): cdktf.IResolvable;
    get state(): string;
    private _status;
    get status(): GkeonpremVmwareNodePoolStatusList;
    get uid(): string;
    get updateTime(): string;
    private _vmwareCluster?;
    get vmwareCluster(): string;
    set vmwareCluster(value: string);
    get vmwareClusterInput(): string | undefined;
    private _config;
    get config(): GkeonpremVmwareNodePoolConfigAOutputReference;
    putConfig(value: GkeonpremVmwareNodePoolConfigA): void;
    get configInput(): GkeonpremVmwareNodePoolConfigA | undefined;
    private _nodePoolAutoscaling;
    get nodePoolAutoscaling(): GkeonpremVmwareNodePoolNodePoolAutoscalingOutputReference;
    putNodePoolAutoscaling(value: GkeonpremVmwareNodePoolNodePoolAutoscaling): void;
    resetNodePoolAutoscaling(): void;
    get nodePoolAutoscalingInput(): GkeonpremVmwareNodePoolNodePoolAutoscaling | undefined;
    private _timeouts;
    get timeouts(): GkeonpremVmwareNodePoolTimeoutsOutputReference;
    putTimeouts(value: GkeonpremVmwareNodePoolTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | GkeonpremVmwareNodePoolTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
