/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface FirestoreBackupScheduleConfig extends cdktf.TerraformMetaArguments {
    /**
    * The Firestore database id. Defaults to '"(default)"'.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#database FirestoreBackupSchedule#database}
    */
    readonly database?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#id FirestoreBackupSchedule#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#project FirestoreBackupSchedule#project}
    */
    readonly project?: string;
    /**
    * At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
    * A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
    *
    * You can set this to a value up to 14 weeks.
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#retention FirestoreBackupSchedule#retention}
    */
    readonly retention: string;
    /**
    * daily_recurrence block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#daily_recurrence FirestoreBackupSchedule#daily_recurrence}
    */
    readonly dailyRecurrence?: FirestoreBackupScheduleDailyRecurrence;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#timeouts FirestoreBackupSchedule#timeouts}
    */
    readonly timeouts?: FirestoreBackupScheduleTimeouts;
    /**
    * weekly_recurrence block
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#weekly_recurrence FirestoreBackupSchedule#weekly_recurrence}
    */
    readonly weeklyRecurrence?: FirestoreBackupScheduleWeeklyRecurrence;
}
export interface FirestoreBackupScheduleDailyRecurrence {
}
export declare function firestoreBackupScheduleDailyRecurrenceToTerraform(struct?: FirestoreBackupScheduleDailyRecurrenceOutputReference | FirestoreBackupScheduleDailyRecurrence): any;
export declare function firestoreBackupScheduleDailyRecurrenceToHclTerraform(struct?: FirestoreBackupScheduleDailyRecurrenceOutputReference | FirestoreBackupScheduleDailyRecurrence): any;
export declare class FirestoreBackupScheduleDailyRecurrenceOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): FirestoreBackupScheduleDailyRecurrence | undefined;
    set internalValue(value: FirestoreBackupScheduleDailyRecurrence | undefined);
}
export interface FirestoreBackupScheduleTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#create FirestoreBackupSchedule#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#delete FirestoreBackupSchedule#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#update FirestoreBackupSchedule#update}
    */
    readonly update?: string;
}
export declare function firestoreBackupScheduleTimeoutsToTerraform(struct?: FirestoreBackupScheduleTimeouts | cdktf.IResolvable): any;
export declare function firestoreBackupScheduleTimeoutsToHclTerraform(struct?: FirestoreBackupScheduleTimeouts | cdktf.IResolvable): any;
export declare class FirestoreBackupScheduleTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): FirestoreBackupScheduleTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: FirestoreBackupScheduleTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
export interface FirestoreBackupScheduleWeeklyRecurrence {
    /**
    * The day of week to run. Possible values: ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
    *
    * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#day FirestoreBackupSchedule#day}
    */
    readonly day?: string;
}
export declare function firestoreBackupScheduleWeeklyRecurrenceToTerraform(struct?: FirestoreBackupScheduleWeeklyRecurrenceOutputReference | FirestoreBackupScheduleWeeklyRecurrence): any;
export declare function firestoreBackupScheduleWeeklyRecurrenceToHclTerraform(struct?: FirestoreBackupScheduleWeeklyRecurrenceOutputReference | FirestoreBackupScheduleWeeklyRecurrence): any;
export declare class FirestoreBackupScheduleWeeklyRecurrenceOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): FirestoreBackupScheduleWeeklyRecurrence | undefined;
    set internalValue(value: FirestoreBackupScheduleWeeklyRecurrence | undefined);
    private _day?;
    get day(): string;
    set day(value: string);
    resetDay(): void;
    get dayInput(): string | undefined;
}
/**
* Represents a {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule google_firestore_backup_schedule}
*/
export declare class FirestoreBackupSchedule extends cdktf.TerraformResource {
    static readonly tfResourceType = "google_firestore_backup_schedule";
    /**
    * Generates CDKTF code for importing a FirestoreBackupSchedule resource upon running "cdktf plan <stack-name>"
    * @param scope The scope in which to define this construct
    * @param importToId The construct id used in the generated config for the FirestoreBackupSchedule to import
    * @param importFromId The id of the existing FirestoreBackupSchedule that should be imported. Refer to the {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule#import import section} in the documentation of this resource for the id to use
    * @param provider? Optional instance of the provider where the FirestoreBackupSchedule to import is found
    */
    static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider): cdktf.ImportableResource;
    /**
    * Create a new {@link https://registry.terraform.io/providers/hashicorp/google/6.14.1/docs/resources/firestore_backup_schedule google_firestore_backup_schedule} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options FirestoreBackupScheduleConfig
    */
    constructor(scope: Construct, id: string, config: FirestoreBackupScheduleConfig);
    private _database?;
    get database(): string;
    set database(value: string);
    resetDatabase(): void;
    get databaseInput(): string | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    get name(): string;
    private _project?;
    get project(): string;
    set project(value: string);
    resetProject(): void;
    get projectInput(): string | undefined;
    private _retention?;
    get retention(): string;
    set retention(value: string);
    get retentionInput(): string | undefined;
    private _dailyRecurrence;
    get dailyRecurrence(): FirestoreBackupScheduleDailyRecurrenceOutputReference;
    putDailyRecurrence(value: FirestoreBackupScheduleDailyRecurrence): void;
    resetDailyRecurrence(): void;
    get dailyRecurrenceInput(): FirestoreBackupScheduleDailyRecurrence | undefined;
    private _timeouts;
    get timeouts(): FirestoreBackupScheduleTimeoutsOutputReference;
    putTimeouts(value: FirestoreBackupScheduleTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | FirestoreBackupScheduleTimeouts | undefined;
    private _weeklyRecurrence;
    get weeklyRecurrence(): FirestoreBackupScheduleWeeklyRecurrenceOutputReference;
    putWeeklyRecurrence(value: FirestoreBackupScheduleWeeklyRecurrence): void;
    resetWeeklyRecurrence(): void;
    get weeklyRecurrenceInput(): FirestoreBackupScheduleWeeklyRecurrence | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
    protected synthesizeHclAttributes(): {
        [name: string]: any;
    };
}
